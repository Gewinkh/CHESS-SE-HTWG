2024.04.25 22:21:21 INFO  Started: Metals version 1.3.0 in folders 'C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG' for client Visual Studio Code 1.88.1.
SLF4J: Class path contains multiple SLF4J providers.
SLF4J: Found provider [scribe.slf4j.ScribeServiceProvider@5c1ecd53]
SLF4J: Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@682033bf]
SLF4J: See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual provider is of type [scribe.slf4j.ScribeServiceProvider@5c1ecd53]
2024.04.25 22:21:21 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.04.25 22:21:33 INFO  no build target found for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala. Using presentation compiler with project's scala-library version: 3.3.3
Apr. 25, 2024 10:21:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 2
2024.04.25 22:21:33 WARN  no build target for: C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala
2024.04.25 22:21:34 INFO  running 'C:\Program Files\Java\jdk-19\bin\java.exe -Djline.terminal=jline.UnsupportedTerminal -Dsbt.log.noformat=true -Dfile.encoding=UTF-8 -jar C:\Users\GEWINS~1\AppData\Local\Temp\metals8970638068580177062\sbt-launch.jar -Dbloop.export-jar-classifiers=sources bloopInstall'
2024.04.25 22:21:36 INFO  [info] welcome to sbt 1.9.9 (Oracle Corporation Java 19)
2024.04.25 22:21:37 INFO  [info] loading global plugins from C:\Users\Gewin Singh\.sbt\1.0\plugins
2024.04.25 22:21:40 INFO  [info] loading settings for project chess-se-htwg-build-build-build from metals.sbt ...
2024.04.25 22:21:40 INFO  [info] loading project definition from C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\project\project
2024.04.25 22:21:42 INFO  [info] loading settings for project chess-se-htwg-build-build from metals.sbt ...
2024.04.25 22:21:42 INFO  [info] loading project definition from C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\project
2024.04.25 22:21:46 INFO  [success] Generated .bloop\chess-se-htwg-build-build.json
2024.04.25 22:21:46 INFO  [success] Total time: 4 s, completed 25.04.2024, 22:21:46
2024.04.25 22:21:47 INFO  [info] loading settings for project chess-se-htwg-build from metals.sbt,plugins.sbt ...
2024.04.25 22:21:47 INFO  [info] loading project definition from C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project
2024.04.25 22:21:54 INFO  [success] Generated .bloop\chess-se-htwg-build.json
2024.04.25 22:21:54 INFO  [success] Total time: 7 s, completed 25.04.2024, 22:21:54
2024.04.25 22:21:56 INFO  [info] loading settings for project root from build.sbt ...
2024.04.25 22:21:56 INFO  [info] set current project to CHESS-SE-HTWG (in build file:/C:/Users/Gewin%20Singh/Desktop/S/AIN3/SE/CHESS-SE-HTWG/)
2024.04.25 22:21:56 INFO  [success] Generated .bloop\root.json
2024.04.25 22:21:56 INFO  [success] Generated .bloop\root-test.json
2024.04.25 22:21:56 INFO  [success] Total time: 0 s, completed 25.04.2024, 22:21:57
2024.04.25 22:21:57 INFO  time: ran 'sbt bloopInstall' in 23s
2024.04.25 22:21:57 INFO  Attempting to connect to the build server...
2024.04.25 22:21:57 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.25 22:21:57 INFO  Attempting to connect to the build server...
2024.04.25 22:21:57 INFO  Attempting to connect to the build server...
2024.04.25 22:21:57 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\project\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.25 22:21:57 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.25 22:21:57 INFO  time: Connected to build server in 0.43s
2024.04.25 22:21:57 INFO  Connected to Build server: Bloop v1.5.17
2024.04.25 22:21:58 INFO  time: Imported build in 0.32s
2024.04.25 22:22:03 ERROR error processing file:///C:/Users/Gewin%20Singh/AppData/Local/Coursier/Cache/v1/https/repo1.maven.org/maven2/org/scalatest/scalatest-core_3/3.2.18/scalatest-core_3-3.2.18-sources.jar
org.h2.jdbc.JdbcBatchUpdateException: Eindeutiger Index oder Primärschlüssel verletzt: "PUBLIC.PRIMARY_KEY_3 ON PUBLIC.TOPLEVEL_SYMBOL(JAR, PATH, SYMBOL) VALUES ( /* key:3194 */ 4, '/org/scalatest/enablers/TableAsserting.scala', 'org/scalatest/enablers/ForResult#')"
Unique index or primary key violation: "PUBLIC.PRIMARY_KEY_3 ON PUBLIC.TOPLEVEL_SYMBOL(JAR, PATH, SYMBOL) VALUES ( /* key:3194 */ 4, '/org/scalatest/enablers/TableAsserting.scala', 'org/scalatest/enablers/ForResult#')"; SQL statement:
insert into toplevel_symbol (symbol, path, jar) values (?, ?, ?) [23505-224]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1282)
	at scala.meta.internal.metals.JarTopLevels.putToplevels(JarTopLevels.scala:177)
	at scala.meta.internal.metals.JarTopLevels.putJarIndexingInfo(JarTopLevels.scala:128)
	at scala.meta.internal.metals.Indexer.addSourceJarSymbols(Indexer.scala:657)
	at scala.meta.internal.metals.Indexer.$anonfun$indexDependencySources$5(Indexer.scala:487)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:905)
	at scala.meta.internal.metals.Indexer.$anonfun$indexDependencySources$1(Indexer.scala:478)
	at scala.meta.internal.metals.Indexer.$anonfun$indexDependencySources$1$adapted(Indexer.scala:477)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Indexer.indexDependencySources(Indexer.scala:477)
	at scala.meta.internal.metals.Indexer.$anonfun$indexWorkspace$24(Indexer.scala:396)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.Indexer.$anonfun$indexWorkspace$23(Indexer.scala:389)
	at scala.meta.internal.metals.Indexer.$anonfun$indexWorkspace$23$adapted(Indexer.scala:385)
	at scala.collection.immutable.List.foreach(List.scala:334)
	at scala.meta.internal.metals.Indexer.indexWorkspace(Indexer.scala:385)
	at scala.meta.internal.metals.Indexer.$anonfun$profiledIndexWorkspace$2(Indexer.scala:172)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.Indexer.$anonfun$profiledIndexWorkspace$1(Indexer.scala:172)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:22:05 INFO  compiling root (4 scala sources)
2024.04.25 22:22:10 INFO  time: indexed workspace in 11s
2024.04.25 22:22:10 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 12.516s)
2024.04.25 22:22:10 INFO  compiling root (4 scala sources)
2024.04.25 22:22:19 INFO  time: compiled root in 9.12s
2024.04.25 22:22:19 INFO  compiling root (4 scala sources)
2024.04.25 22:22:23 INFO  time: compiled root in 4.23s
2024.04.25 22:22:23 INFO  compiling root (4 scala sources)
2024.04.25 22:22:24 INFO  time: code lens generation in 5.1s
2024.04.25 22:22:26 INFO  time: compiled root in 2.89s
2024.04.25 22:23:34 INFO  compiling root (4 scala sources)
2024.04.25 22:23:35 INFO  time: compiled root in 1.18s
2024.04.25 22:23:37 INFO  compiling root (4 scala sources)
2024.04.25 22:23:39 INFO  time: compiled root in 1.42s
Apr. 25, 2024 10:23:46 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 284
Apr. 25, 2024 10:24:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 332
Apr. 25, 2024 10:24:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 333
Apr. 25, 2024 10:24:40 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 430
Apr. 25, 2024 10:24:51 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 464
2024.04.25 22:25:32 WARN  Using indexes to guess the definition of KNIGHT
2024.04.25 22:25:33 WARN  Using indexes to guess the definition of KNIGHT
2024.04.25 22:25:33 INFO  compiling root (4 scala sources)
2024.04.25 22:25:33 INFO  time: compiled root in 0.92s
Apr. 25, 2024 10:25:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 532
Apr. 25, 2024 10:25:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 578
2024.04.25 22:25:56 INFO  compiling root (4 scala sources)
2024.04.25 22:25:57 INFO  time: compiled root in 1.02s
Apr. 25, 2024 10:26:10 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 619
2024.04.25 22:26:28 INFO  compiling root (4 scala sources)
2024.04.25 22:26:29 INFO  time: compiled root in 1.04s
Apr. 25, 2024 10:26:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 717
2024.04.25 22:26:37 INFO  compiling root (4 scala sources)
2024.04.25 22:26:37 INFO  time: compiled root in 0.9s
Apr. 25, 2024 10:26:42 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 748
Apr. 25, 2024 10:26:49 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 772
Apr. 25, 2024 10:26:50 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 781
Apr. 25, 2024 10:26:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 784
2024.04.25 22:27:11 INFO  compiling root (4 scala sources)
2024.04.25 22:27:11 INFO  time: compiled root in 0.74s
Apr. 25, 2024 10:27:31 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 834
2024.04.25 22:27:57 INFO  compiling root (4 scala sources)
2024.04.25 22:27:57 INFO  time: compiled root in 0.76s
2024.04.25 22:29:02 WARN  Using indexes to guess the definition of BLACK
2024.04.25 22:29:07 WARN  Using indexes to guess the definition of Chesspiece
2024.04.25 22:29:07 WARN  Using indexes to guess the definition of Chesspiece
2024.04.25 22:29:07 INFO  compiling root (4 scala sources)
2024.04.25 22:29:07 INFO  time: compiled root in 0.68s
2024.04.25 22:29:24 INFO  compiling root (4 scala sources)
2024.04.25 22:29:24 INFO  time: compiled root in 0.39s
2024.04.25 22:29:37 INFO  compiling root (4 scala sources)
2024.04.25 22:29:37 INFO  time: compiled root in 0.47s
2024.04.25 22:29:51 WARN  Using indexes to guess the definition of BISHOP
2024.04.25 22:29:53 INFO  compiling root (4 scala sources)
2024.04.25 22:29:53 INFO  time: compiled root in 0.35s
Apr. 25, 2024 10:29:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SCHWERWIEGEND: Internal error: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2292
java.util.concurrent.CompletionException: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2292
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2194)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2292
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112)
	at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349)
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4602)
	at java.base/java.lang.String.substring(String.java:2715)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.getIndentForPos(FlatMapToForComprehensionCodeAction.scala:677)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$4(FlatMapToForComprehensionCodeAction.scala:57)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$3(FlatMapToForComprehensionCodeAction.scala:53)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$2(FlatMapToForComprehensionCodeAction.scala:52)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$1(FlatMapToForComprehensionCodeAction.scala:51)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.04.25 22:29:58 WARN  Using indexes to guess the definition of KNIGHT
2024.04.25 22:29:59 WARN  Using indexes to guess the definition of KNIGHT
Apr. 25, 2024 10:30:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SCHWERWIEGEND: Internal error: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2292
java.util.concurrent.CompletionException: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2292
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2194)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2292
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112)
	at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349)
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4602)
	at java.base/java.lang.String.substring(String.java:2715)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.getIndentForPos(FlatMapToForComprehensionCodeAction.scala:677)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$4(FlatMapToForComprehensionCodeAction.scala:57)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$3(FlatMapToForComprehensionCodeAction.scala:53)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$2(FlatMapToForComprehensionCodeAction.scala:52)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$1(FlatMapToForComprehensionCodeAction.scala:51)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.04.25 22:30:01 WARN  Using indexes to guess the definition of KNIGHT
Apr. 25, 2024 10:30:02 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SCHWERWIEGEND: Internal error: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2303
java.util.concurrent.CompletionException: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2303
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2194)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2303
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112)
	at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349)
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4602)
	at java.base/java.lang.String.substring(String.java:2715)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.getIndentForPos(FlatMapToForComprehensionCodeAction.scala:677)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$4(FlatMapToForComprehensionCodeAction.scala:57)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$3(FlatMapToForComprehensionCodeAction.scala:53)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$2(FlatMapToForComprehensionCodeAction.scala:52)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$1(FlatMapToForComprehensionCodeAction.scala:51)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.04.25 22:30:02 WARN  Using indexes to guess the definition of Chesspiece
Apr. 25, 2024 10:30:02 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 1066
Apr. 25, 2024 10:30:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SCHWERWIEGEND: Internal error: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2303
java.util.concurrent.CompletionException: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2303
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2194)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2303
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112)
	at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349)
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4602)
	at java.base/java.lang.String.substring(String.java:2715)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.getIndentForPos(FlatMapToForComprehensionCodeAction.scala:677)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$4(FlatMapToForComprehensionCodeAction.scala:57)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$3(FlatMapToForComprehensionCodeAction.scala:53)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$2(FlatMapToForComprehensionCodeAction.scala:52)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$1(FlatMapToForComprehensionCodeAction.scala:51)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.04.25 22:30:02 WARN  Using indexes to guess the definition of BISHOP
Apr. 25, 2024 10:30:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 1072
2024.04.25 22:30:03 WARN  Using indexes to guess the definition of QUEEN
Apr. 25, 2024 10:30:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SCHWERWIEGEND: Internal error: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2314
java.util.concurrent.CompletionException: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2314
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2194)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2314
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112)
	at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349)
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4602)
	at java.base/java.lang.String.substring(String.java:2715)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.getIndentForPos(FlatMapToForComprehensionCodeAction.scala:677)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$4(FlatMapToForComprehensionCodeAction.scala:57)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$3(FlatMapToForComprehensionCodeAction.scala:53)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$2(FlatMapToForComprehensionCodeAction.scala:52)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$1(FlatMapToForComprehensionCodeAction.scala:51)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.04.25 22:30:03 WARN  Using indexes to guess the definition of QUEEN
Apr. 25, 2024 10:30:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SCHWERWIEGEND: Internal error: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2314
java.util.concurrent.CompletionException: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2314
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2194)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.StringIndexOutOfBoundsException: Range [2308, 2325) out of bounds for length 2314
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckFromToIndex(Preconditions.java:112)
	at java.base/jdk.internal.util.Preconditions.checkFromToIndex(Preconditions.java:349)
	at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4602)
	at java.base/java.lang.String.substring(String.java:2715)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.getIndentForPos(FlatMapToForComprehensionCodeAction.scala:677)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$4(FlatMapToForComprehensionCodeAction.scala:57)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$3(FlatMapToForComprehensionCodeAction.scala:53)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$2(FlatMapToForComprehensionCodeAction.scala:52)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.FlatMapToForComprehensionCodeAction.$anonfun$contribute$1(FlatMapToForComprehensionCodeAction.scala:51)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.04.25 22:30:04 WARN  Using indexes to guess the definition of Chesspiece
2024.04.25 22:30:05 WARN  Using indexes to guess the definition of KING
2024.04.25 22:30:05 WARN  Using indexes to guess the definition of PAWN
2024.04.25 22:30:06 WARN  Using indexes to guess the definition of PAWN
2024.04.25 22:30:06 WARN  Using indexes to guess the definition of Chesspiece
2024.04.25 22:30:07 INFO  compiling root (4 scala sources)
2024.04.25 22:30:07 INFO  time: compiled root in 0.33s
Apr. 25, 2024 10:30:38 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SCHWERWIEGEND: Internal error: java.lang.StringIndexOutOfBoundsException: Index 2406 out of bounds for length 2347
java.util.concurrent.CompletionException: java.lang.StringIndexOutOfBoundsException: Index 2406 out of bounds for length 2347
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2194)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.StringIndexOutOfBoundsException: Index 2406 out of bounds for length 2347
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:55)
	at java.base/jdk.internal.util.Preconditions$1.apply(Preconditions.java:52)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:213)
	at java.base/jdk.internal.util.Preconditions$4.apply(Preconditions.java:210)
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:98)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
	at java.base/java.lang.String.checkIndex(String.java:4570)
	at java.base/java.lang.StringLatin1.charAt(StringLatin1.java:46)
	at java.base/java.lang.String.charAt(String.java:1527)
	at scala.collection.StringOps$.apply$extension(StringOps.scala:190)
	at scala.meta.internal.metals.codeactions.ExtractValueCodeAction.$anonfun$contribute$13(ExtractValueCodeAction.scala:60)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.codeactions.ExtractValueCodeAction.$anonfun$contribute$12(ExtractValueCodeAction.scala:57)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.ExtractValueCodeAction.$anonfun$contribute$9(ExtractValueCodeAction.scala:55)
	at scala.Option$WithFilter.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.ExtractValueCodeAction.$anonfun$contribute$7(ExtractValueCodeAction.scala:52)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.metals.codeactions.ExtractValueCodeAction.$anonfun$contribute$6(ExtractValueCodeAction.scala:51)
	at scala.collection.immutable.List.flatMap(List.scala:294)
	at scala.meta.internal.metals.codeactions.ExtractValueCodeAction.$anonfun$contribute$1(ExtractValueCodeAction.scala:49)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.04.25 22:30:47 INFO  compiling root (4 scala sources)
2024.04.25 22:30:47 INFO  time: compiled root in 0.32s
2024.04.25 22:31:04 INFO  compiling root (4 scala sources)
2024.04.25 22:31:04 INFO  time: compiled root in 0.42s
2024.04.25 22:31:30 INFO  compiling root (4 scala sources)
2024.04.25 22:31:30 INFO  time: compiled root in 0.37s
2024.04.25 22:31:34 INFO  compiling root (4 scala sources)
2024.04.25 22:31:34 INFO  time: compiled root in 0.33s
2024.04.25 22:31:43 INFO  compiling root (4 scala sources)
2024.04.25 22:31:43 INFO  time: compiled root in 0.34s
2024.04.25 22:31:45 INFO  compiling root (4 scala sources)
2024.04.25 22:31:45 INFO  time: compiled root in 0.34s
Apr. 25, 2024 10:31:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 1362
2024.04.25 22:32:38 INFO  compiling root (4 scala sources)
2024.04.25 22:32:38 INFO  time: compiled root in 0.33s
Apr. 25, 2024 10:32:58 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 1477
2024.04.25 22:33:11 INFO  compiling root (4 scala sources)
2024.04.25 22:33:11 INFO  time: compiled root in 0.3s
2024.04.25 22:33:16 INFO  compiling root (4 scala sources)
2024.04.25 22:33:16 INFO  time: compiled root in 0.34s
2024.04.25 22:34:05 INFO  compiling root (4 scala sources)
2024.04.25 22:34:05 INFO  time: compiled root in 0.29s
Apr. 25, 2024 10:37:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 2211
2024.04.25 22:39:16 INFO  compiling root (4 scala sources)
2024.04.25 22:39:16 INFO  time: compiled root in 0.36s
2024.04.25 22:39:22 INFO  compiling root (4 scala sources)
2024.04.25 22:39:22 INFO  time: compiled root in 0.28s
2024.04.25 22:39:51 INFO  compiling root (4 scala sources)
2024.04.25 22:39:51 INFO  time: compiled root in 0.31s
Apr. 25, 2024 10:40:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 2463
Apr. 25, 2024 10:40:40 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 2479
Apr. 25, 2024 10:40:44 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 2499
2024.04.25 22:40:46 INFO  compiling root (4 scala sources)
2024.04.25 22:40:46 INFO  time: compiled root in 0.31s
2024.04.25 22:41:02 INFO  compiling root (4 scala sources)
2024.04.25 22:41:02 INFO  time: compiled root in 0.24s
Apr. 25, 2024 10:41:05 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 2549
2024.04.25 22:41:55 INFO  compiling root (4 scala sources)
2024.04.25 22:41:55 INFO  time: compiled root in 0.26s
2024.04.25 22:41:57 INFO  compiling root (4 scala sources)
2024.04.25 22:41:57 INFO  time: compiled root in 0.27s
2024.04.25 22:41:58 INFO  compiling root (4 scala sources)
2024.04.25 22:41:58 INFO  time: compiled root in 0.28s
2024.04.25 22:42:10 INFO  compiling root (4 scala sources)
2024.04.25 22:42:10 INFO  time: compiled root in 0.3s
2024.04.25 22:42:20 INFO  compiling root (4 scala sources)
2024.04.25 22:42:20 INFO  time: compiled root in 0.2s
2024.04.25 22:42:43 INFO  compiling root (4 scala sources)
2024.04.25 22:42:43 INFO  time: compiled root in 0.22s
2024.04.25 22:42:46 WARN  Using indexes to guess the definition of x
2024.04.25 22:43:44 INFO  compiling root (4 scala sources)
2024.04.25 22:43:44 INFO  time: compiled root in 0.28s
2024.04.25 22:44:30 INFO  compiling root (4 scala sources)
2024.04.25 22:44:30 INFO  time: compiled root in 0.29s
2024.04.25 22:44:35 WARN  Using indexes to guess the definition of int
2024.04.25 22:44:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 10:44:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar%21/scala/compiletime/ops/int.scala",
      "languageId": "scala",
      "version": 1,
      "text": "package scala.compiletime\npackage ops\n\nobject int:\n  /** Successor of a natural number where zero is the type 0 and successors are reduced as if the definition was:\n   *\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  type S[N \u003c: Int] \u003c: Int \u003d N match {\n   *    case 0 \u003d\u003e 1\n   *    case 1 \u003d\u003e 2\n   *    case 2 \u003d\u003e 3\n   *    // ...\n   *    case 2147483646 \u003d\u003e 2147483647\n   *  }\n   *  ```\n   *  @syntax markdown\n   */\n  type S[N \u003c: Int] \u003c: Int\n\n  /** Addition of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val sum: 2 + 2 \u003d 4\n   *  ```\n   *  @syntax markdown\n   */\n  type +[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Subtraction of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val sub: 4 - 2 \u003d 2\n   *  ```\n   *  @syntax markdown\n   */\n  type -[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Multiplication of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val mul: 4 * 2 \u003d 8\n   *  ```\n   *  @syntax markdown\n   */\n  type *[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Integer division of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val div: 5 / 2 \u003d 2\n   *  ```\n   *  @syntax markdown\n   */\n  type /[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Remainder of the division of `X` by `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val mod: 5 % 2 \u003d 1\n   *  ```\n   *  @syntax markdown\n   */\n  type %[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Binary left shift of `X` by `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val lshift: 1 \u003c\u003c 2 \u003d 4\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003c\u003c[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Binary right shift of `X` by `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val rshift: 10 \u003e\u003e 1 \u003d 5\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003e\u003e[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Binary right shift of `X` by `Y`, filling the left with zeros.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val rshiftzero: 10 \u003e\u003e\u003e 1 \u003d 5\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003e\u003e\u003e[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Bitwise xor of `X` and `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val xor: 10 ^ 30 \u003d 20\n   *  ```\n   *  @syntax markdown\n   */\n  type ^[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Less-than comparison of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val lt1: 4 \u003c 2 \u003d false\n   *  val lt2: 2 \u003c 4 \u003d true\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003c[X \u003c: Int, Y \u003c: Int] \u003c: Boolean\n\n  /** Greater-than comparison of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val gt1: 4 \u003e 2 \u003d true\n   *  val gt2: 2 \u003e 2 \u003d false\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003e[X \u003c: Int, Y \u003c: Int] \u003c: Boolean\n\n  /** Greater-or-equal comparison of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val ge1: 4 \u003e\u003d 2 \u003d true\n   *  val ge2: 2 \u003e\u003d 3 \u003d false\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003e\u003d[X \u003c: Int, Y \u003c: Int] \u003c: Boolean\n\n  /** Less-or-equal comparison of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val lt1: 4 \u003c\u003d 2 \u003d false\n   *  val lt2: 2 \u003c\u003d 2 \u003d true\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003c\u003d[X \u003c: Int, Y \u003c: Int] \u003c: Boolean\n\n  /** Bitwise and of `X` and `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val and1: BitwiseAnd[4, 4] \u003d 4\n   *  val and2: BitwiseAnd[10, 5] \u003d 0\n   *  ```\n   *  @syntax markdown\n   */\n  type BitwiseAnd[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Bitwise or of `X` and `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val or: BitwiseOr[10, 11] \u003d 11\n   *  ```\n   *  @syntax markdown\n   */\n  type BitwiseOr[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Absolute value of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val abs: Abs[-1] \u003d 1\n   *  ```\n   *  @syntax markdown\n   */\n  type Abs[X \u003c: Int] \u003c: Int\n\n  /** Negation of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val neg1: Negate[-1] \u003d 1\n   *  val neg2: Negate[1] \u003d -1\n   *  ```\n   *  @syntax markdown\n   */\n  type Negate[X \u003c: Int] \u003c: Int\n\n  /** Minimum of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val min: Min[-1, 1] \u003d -1\n   *  ```\n   *  @syntax markdown\n   */\n  type Min[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Maximum of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val max: Max[-1, 1] \u003d 1\n   *  ```\n   *  @syntax markdown\n   */\n  type Max[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** String conversion of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val abs: ToString[1] \u003d \"1\"\n   *  ```\n   *  @syntax markdown\n   */\n  @deprecated(\"Use compiletime.ops.any.ToString instead.\",\"3.2.0\")\n  type ToString[X \u003c: Int] \u003c: String\n\n  /** Long conversion of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val x: ToLong[1] \u003d 1L\n   *  ```\n   *  @syntax markdown\n   */\n  type ToLong[X \u003c: Int] \u003c: Long\n\n  /** Float conversion of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val x: ToFloat[1] \u003d 1.0f\n   *  ```\n   *  @syntax markdown\n   */\n  type ToFloat[X \u003c: Int] \u003c: Float\n\n  /** Double conversion of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val x: ToDouble[1] \u003d 1.0\n   *  ```\n   *  @syntax markdown\n   */\n  type ToDouble[X \u003c: Int] \u003c: Double\n\n  /** Number of zero bits preceding the highest-order (\"leftmost\")\n   * one-bit in the two\u0027s complement binary representation of the specified `Int` singleton type.\n   * Returns 32 if the specified singleton type has no one-bits in its two\u0027s complement representation,\n   * in other words if it is equal to zero.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val zero_lzc: NumberOfLeadingZeros[0] \u003d 32\n   *  val eight_lzc: NumberOfLeadingZeros[8] \u003d 28\n   *  type Log2[N \u003c: Int] \u003d 31 - NumberOfLeadingZeros[N]\n   *  val log2of8: Log2[8] \u003d 3\n   *  ```\n   *  @syntax markdown\n   */\n  type NumberOfLeadingZeros[X \u003c: Int] \u003c: Int\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 25, 2024 10:44:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar%21/scala/compiletime/ops/int.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 22:44:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 10:44:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar%21/scala/compiletime/ops/int.scala",
      "languageId": "scala",
      "version": 1,
      "text": "package scala.compiletime\npackage ops\n\nobject int:\n  /** Successor of a natural number where zero is the type 0 and successors are reduced as if the definition was:\n   *\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  type S[N \u003c: Int] \u003c: Int \u003d N match {\n   *    case 0 \u003d\u003e 1\n   *    case 1 \u003d\u003e 2\n   *    case 2 \u003d\u003e 3\n   *    // ...\n   *    case 2147483646 \u003d\u003e 2147483647\n   *  }\n   *  ```\n   *  @syntax markdown\n   */\n  type S[N \u003c: Int] \u003c: Int\n\n  /** Addition of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val sum: 2 + 2 \u003d 4\n   *  ```\n   *  @syntax markdown\n   */\n  type +[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Subtraction of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val sub: 4 - 2 \u003d 2\n   *  ```\n   *  @syntax markdown\n   */\n  type -[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Multiplication of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val mul: 4 * 2 \u003d 8\n   *  ```\n   *  @syntax markdown\n   */\n  type *[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Integer division of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val div: 5 / 2 \u003d 2\n   *  ```\n   *  @syntax markdown\n   */\n  type /[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Remainder of the division of `X` by `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val mod: 5 % 2 \u003d 1\n   *  ```\n   *  @syntax markdown\n   */\n  type %[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Binary left shift of `X` by `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val lshift: 1 \u003c\u003c 2 \u003d 4\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003c\u003c[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Binary right shift of `X` by `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val rshift: 10 \u003e\u003e 1 \u003d 5\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003e\u003e[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Binary right shift of `X` by `Y`, filling the left with zeros.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val rshiftzero: 10 \u003e\u003e\u003e 1 \u003d 5\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003e\u003e\u003e[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Bitwise xor of `X` and `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val xor: 10 ^ 30 \u003d 20\n   *  ```\n   *  @syntax markdown\n   */\n  type ^[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Less-than comparison of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val lt1: 4 \u003c 2 \u003d false\n   *  val lt2: 2 \u003c 4 \u003d true\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003c[X \u003c: Int, Y \u003c: Int] \u003c: Boolean\n\n  /** Greater-than comparison of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val gt1: 4 \u003e 2 \u003d true\n   *  val gt2: 2 \u003e 2 \u003d false\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003e[X \u003c: Int, Y \u003c: Int] \u003c: Boolean\n\n  /** Greater-or-equal comparison of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val ge1: 4 \u003e\u003d 2 \u003d true\n   *  val ge2: 2 \u003e\u003d 3 \u003d false\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003e\u003d[X \u003c: Int, Y \u003c: Int] \u003c: Boolean\n\n  /** Less-or-equal comparison of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val lt1: 4 \u003c\u003d 2 \u003d false\n   *  val lt2: 2 \u003c\u003d 2 \u003d true\n   *  ```\n   *  @syntax markdown\n   */\n  type \u003c\u003d[X \u003c: Int, Y \u003c: Int] \u003c: Boolean\n\n  /** Bitwise and of `X` and `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val and1: BitwiseAnd[4, 4] \u003d 4\n   *  val and2: BitwiseAnd[10, 5] \u003d 0\n   *  ```\n   *  @syntax markdown\n   */\n  type BitwiseAnd[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Bitwise or of `X` and `Y`.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val or: BitwiseOr[10, 11] \u003d 11\n   *  ```\n   *  @syntax markdown\n   */\n  type BitwiseOr[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Absolute value of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val abs: Abs[-1] \u003d 1\n   *  ```\n   *  @syntax markdown\n   */\n  type Abs[X \u003c: Int] \u003c: Int\n\n  /** Negation of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val neg1: Negate[-1] \u003d 1\n   *  val neg2: Negate[1] \u003d -1\n   *  ```\n   *  @syntax markdown\n   */\n  type Negate[X \u003c: Int] \u003c: Int\n\n  /** Minimum of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val min: Min[-1, 1] \u003d -1\n   *  ```\n   *  @syntax markdown\n   */\n  type Min[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** Maximum of two `Int` singleton types.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val max: Max[-1, 1] \u003d 1\n   *  ```\n   *  @syntax markdown\n   */\n  type Max[X \u003c: Int, Y \u003c: Int] \u003c: Int\n\n  /** String conversion of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val abs: ToString[1] \u003d \"1\"\n   *  ```\n   *  @syntax markdown\n   */\n  @deprecated(\"Use compiletime.ops.any.ToString instead.\",\"3.2.0\")\n  type ToString[X \u003c: Int] \u003c: String\n\n  /** Long conversion of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val x: ToLong[1] \u003d 1L\n   *  ```\n   *  @syntax markdown\n   */\n  type ToLong[X \u003c: Int] \u003c: Long\n\n  /** Float conversion of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val x: ToFloat[1] \u003d 1.0f\n   *  ```\n   *  @syntax markdown\n   */\n  type ToFloat[X \u003c: Int] \u003c: Float\n\n  /** Double conversion of an `Int` singleton type.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val x: ToDouble[1] \u003d 1.0\n   *  ```\n   *  @syntax markdown\n   */\n  type ToDouble[X \u003c: Int] \u003c: Double\n\n  /** Number of zero bits preceding the highest-order (\"leftmost\")\n   * one-bit in the two\u0027s complement binary representation of the specified `Int` singleton type.\n   * Returns 32 if the specified singleton type has no one-bits in its two\u0027s complement representation,\n   * in other words if it is equal to zero.\n   *  ```scala\n   *  //{\n   *  import compiletime.ops.int.*\n   *  //}\n   *  val zero_lzc: NumberOfLeadingZeros[0] \u003d 32\n   *  val eight_lzc: NumberOfLeadingZeros[8] \u003d 28\n   *  type Log2[N \u003c: Int] \u003d 31 - NumberOfLeadingZeros[N]\n   *  val log2of8: Log2[8] \u003d 3\n   *  ```\n   *  @syntax markdown\n   */\n  type NumberOfLeadingZeros[X \u003c: Int] \u003c: Int\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 22:45:04 INFO  compiling root (4 scala sources)
2024.04.25 22:45:04 INFO  time: compiled root in 0.28s
2024.04.25 22:45:36 INFO  compiling root (4 scala sources)
2024.04.25 22:45:36 INFO  time: compiled root in 0.23s
2024.04.25 22:45:39 INFO  compiling root (4 scala sources)
2024.04.25 22:45:39 INFO  time: compiled root in 0.24s
2024.04.25 22:45:53 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:56: error: unclosed string interpolation
    println(s"$colorText $pieceTypeText auf Position (${piece.getCords})
                                                                       ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:666)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:252)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:46:00 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:56: error: unclosed string literal
    println(s"$colorText $pieceTypeText auf Position (${piece.getCords}, ${piece..")
                                                                                  ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:560)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:379)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:46:00 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:56: error: unclosed string interpolation
    println(s"$colorText $pieceTypeText auf Position (${piece.getCords}, ${piec")
                                                                                ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringPart(LegacyScanner.scala:666)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:364)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:46:01 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:56: error: unclosed string literal
    println(s"$colorText $pieceTypeText auf Position (${piece.getCords}, ${")
                                                                           ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:560)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:379)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

Apr. 25, 2024 10:46:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3347
2024.04.25 22:46:38 INFO  compiling root (4 scala sources)
2024.04.25 22:46:38 INFO  time: compiled root in 0.25s
2024.04.25 22:47:17 INFO  compiling root (4 scala sources)
2024.04.25 22:47:17 INFO  time: compiled root in 0.2s
2024.04.25 22:47:22 INFO  compiling root (4 scala sources)
2024.04.25 22:47:22 INFO  time: compiled root in 0.2s
Apr. 25, 2024 10:47:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar%21/scala/compiletime/ops/int.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.4.1/scala3-library_3-3.4.1-sources.jar!/scala/compiletime/ops/int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 22:47:37 WARN  Using indexes to guess the definition of Pieces
2024.04.25 22:47:37 WARN  Using indexes to guess the definition of Chesspiece
2024.04.25 22:48:09 INFO  compiling root (4 scala sources)
2024.04.25 22:48:09 INFO  time: compiled root in 0.16s
2024.04.25 22:48:11 INFO  compiling root (4 scala sources)
2024.04.25 22:48:11 INFO  time: compiled root in 0.11s
2024.04.25 22:48:11 INFO  compiling root (4 scala sources)
2024.04.25 22:48:11 INFO  time: compiled root in 0.14s
2024.04.25 22:48:18 WARN  Using indexes to guess the definition of Pieces
2024.04.25 22:48:18 WARN  Using indexes to guess the definition of Chesspiece
2024.04.25 22:48:19 WARN  Using indexes to guess the definition of Chesspiece
2024.04.25 22:48:20 INFO  compiling root (4 scala sources)
2024.04.25 22:48:21 INFO  time: compiled root in 1.49s
Apr. 25, 2024 10:48:58 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3587
Apr. 25, 2024 10:49:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3609
2024.04.25 22:49:56 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:53: error: illegal character '\ufe0f'
      case Chesspiece.BISHOP => "Läufer"♟️
                                         ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:476)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:481)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:50:05 INFO  compiling root (1 scala source)
2024.04.25 22:50:05 INFO  time: compiled root in 0.31s
2024.04.25 22:51:10 INFO  compiling root (1 scala source)
2024.04.25 22:51:10 INFO  time: compiled root in 0.27s
Apr. 25, 2024 10:51:38 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3764
2024.04.25 22:52:43 INFO  compiling root (1 scala source)
2024.04.25 22:52:43 INFO  time: compiled root in 0.24s
2024.04.25 22:52:47 INFO  compiling root (1 scala source)
2024.04.25 22:52:47 INFO  time: compiled root in 0.28s
2024.04.25 22:53:11 INFO  compiling root (1 scala source)
2024.04.25 22:53:11 INFO  time: compiled root in 0.24s
Apr. 25, 2024 10:53:17 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3910
2024.04.25 22:53:48 INFO  compiling root (1 scala source)
2024.04.25 22:53:48 INFO  time: compiled root in 0.23s
2024.04.25 22:53:48 INFO  compiling root (1 scala source)
2024.04.25 22:53:48 INFO  time: compiled root in 0.25s
2024.04.25 22:54:23 INFO  compiling root (1 scala source)
2024.04.25 22:54:23 INFO  time: compiled root in 0.33s
Apr. 25, 2024 10:54:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 4001
2024.04.25 22:54:40 INFO  compiling root (2 scala sources)
2024.04.25 22:54:40 INFO  time: compiled root in 0.58s
Apr. 25, 2024 10:55:28 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 4105
2024.04.25 22:55:31 INFO  compiling root (1 scala source)
2024.04.25 22:55:31 INFO  time: compiled root in 0.61s
2024.04.25 22:55:50 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.25 22:55:50 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.25 22:55:50 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.25 22:55:52 INFO  Loaded expression compiler in 1 second
2024.04.25 22:55:53 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\ch\epfl\scala\scala-debug-decoder_3\4.0.4\scala-debug-decoder_3-4.0.4.jar
2024.04.25 22:55:53 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-library_3\3.4.0\scala3-library_3-3.4.0.jar
2024.04.25 22:55:53 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\ch\epfl\scala\tasty-query_3\1.3.0\tasty-query_3-1.3.0.jar
2024.04.25 22:55:53 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\ow2\asm\asm\9.6\asm-9.6.jar
2024.04.25 22:55:53 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\ow2\asm\asm-util\9.6\asm-util-9.6.jar
2024.04.25 22:55:53 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.12\scala-library-2.13.12.jar
2024.04.25 22:55:53 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\ow2\asm\asm-tree\9.6\asm-tree-9.6.jar
2024.04.25 22:55:53 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\ow2\asm\asm-analysis\9.6\asm-analysis-9.6.jar
2024.04.25 22:55:53 INFO  Loaded step filter in 1 second
2024.04.25 22:55:56 INFO  Loaded all sources and classes in 2 seconds
2024.04.25 22:55:57 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:54260 .
2024.04.25 22:55:57 INFO  Attaching to debuggee VM succeeded.
2024.04.25 22:55:57 INFO  Closing debug server tcp://0.0.0.0:54257
2024.04.25 22:55:57 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.25 22:56:52 INFO  compiling root (1 scala source)
2024.04.25 22:56:52 INFO  time: compiled root in 0.14s
2024.04.25 22:56:54 INFO  compiling root (1 scala source)
2024.04.25 22:56:54 INFO  time: compiled root in 0.28s
2024.04.25 22:57:16 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 10:57:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\nimport scala.annotation.migration\n\n/**\n * Core Scala types. They are always available without an explicit import.\n * @contentDiagram hideNodes \"scala.Serializable\"\n */\npackage object scala {\n  type Cloneable    \u003d java.lang.Cloneable\n  type Serializable \u003d java.io.Serializable\n\n  type Throwable \u003d java.lang.Throwable\n  type Exception \u003d java.lang.Exception\n  type Error     \u003d java.lang.Error\n\n  type RuntimeException                \u003d java.lang.RuntimeException\n  type NullPointerException            \u003d java.lang.NullPointerException\n  type ClassCastException              \u003d java.lang.ClassCastException\n  type IndexOutOfBoundsException       \u003d java.lang.IndexOutOfBoundsException\n  type ArrayIndexOutOfBoundsException  \u003d java.lang.ArrayIndexOutOfBoundsException\n  type StringIndexOutOfBoundsException \u003d java.lang.StringIndexOutOfBoundsException\n  type UnsupportedOperationException   \u003d java.lang.UnsupportedOperationException\n  type IllegalArgumentException        \u003d java.lang.IllegalArgumentException\n  type NoSuchElementException          \u003d java.util.NoSuchElementException\n  type NumberFormatException           \u003d java.lang.NumberFormatException\n  type AbstractMethodError             \u003d java.lang.AbstractMethodError\n  type InterruptedException            \u003d java.lang.InterruptedException\n\n  // A dummy used by the specialization annotation.\n  val AnyRef \u003d new Specializable {\n    override def toString \u003d \"object AnyRef\"\n  }\n\n  @deprecated(\"Use IterableOnce instead of TraversableOnce\", \"2.13.0\")\n  type TraversableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  type IterableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  type Traversable[+A] \u003d scala.collection.Iterable[A]\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  val Traversable \u003d scala.collection.Iterable\n\n  type Iterable[+A] \u003d scala.collection.Iterable[A]\n  val Iterable \u003d scala.collection.Iterable\n\n  @migration(\"scala.Seq is now scala.collection.immutable.Seq instead of scala.collection.Seq\", \"2.13.0\")\n  type Seq[+A] \u003d scala.collection.immutable.Seq[A]\n  val Seq \u003d scala.collection.immutable.Seq\n\n  @migration(\"scala.IndexedSeq is now scala.collection.immutable.IndexedSeq instead of scala.collection.IndexedSeq\", \"2.13.0\")\n  type IndexedSeq[+A] \u003d scala.collection.immutable.IndexedSeq[A]\n  val IndexedSeq \u003d scala.collection.immutable.IndexedSeq\n\n  type Iterator[+A] \u003d scala.collection.Iterator[A]\n  val Iterator \u003d scala.collection.Iterator\n\n  @deprecated(\"Use scala.collection.BufferedIterator instead of scala.BufferedIterator\", \"2.13.0\")\n  type BufferedIterator[+A] \u003d scala.collection.BufferedIterator[A]\n\n  type List[+A] \u003d scala.collection.immutable.List[A]\n  val List \u003d scala.collection.immutable.List\n\n  val Nil \u003d scala.collection.immutable.Nil\n\n  type ::[+A] \u003d scala.collection.immutable.::[A]\n  val :: \u003d scala.collection.immutable.::\n\n  val +: \u003d scala.collection.+:\n  val :+ \u003d scala.collection.:+\n\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  type Stream[+A] \u003d scala.collection.immutable.Stream[A]\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  val Stream \u003d scala.collection.immutable.Stream\n\n  type LazyList[+A] \u003d scala.collection.immutable.LazyList[A]\n  val LazyList \u003d scala.collection.immutable.LazyList\n  // This should be an alias to LazyList.#:: but we need to support Stream, too\n  //val #:: \u003d scala.collection.immutable.LazyList.#::\n  object #:: {\n    def unapply[A](s: LazyList[A]): Option[(A, LazyList[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n    @deprecated(\"Prefer LazyList instead\", since \u003d \"2.13.0\")\n    def unapply[A](s: Stream[A]): Option[(A, Stream[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n  }\n\n  type Vector[+A] \u003d scala.collection.immutable.Vector[A]\n  val Vector \u003d scala.collection.immutable.Vector\n\n  type StringBuilder \u003d scala.collection.mutable.StringBuilder\n  val StringBuilder \u003d scala.collection.mutable.StringBuilder\n\n  type Range \u003d scala.collection.immutable.Range\n  val Range \u003d scala.collection.immutable.Range\n\n  // Numeric types which were moved into scala.math.*\n\n  type BigDecimal \u003d scala.math.BigDecimal\n  val BigDecimal \u003d scala.math.BigDecimal\n\n  type BigInt \u003d scala.math.BigInt\n  val BigInt \u003d scala.math.BigInt\n\n  type Equiv[T] \u003d scala.math.Equiv[T]\n  val Equiv \u003d scala.math.Equiv\n\n  type Fractional[T] \u003d scala.math.Fractional[T]\n  val Fractional \u003d scala.math.Fractional\n\n  type Integral[T] \u003d scala.math.Integral[T]\n  val Integral \u003d scala.math.Integral\n\n  type Numeric[T] \u003d scala.math.Numeric[T]\n  val Numeric \u003d scala.math.Numeric\n\n  type Ordered[T] \u003d scala.math.Ordered[T]\n  val Ordered \u003d scala.math.Ordered\n\n  type Ordering[T] \u003d scala.math.Ordering[T]\n  val Ordering \u003d scala.math.Ordering\n\n  type PartialOrdering[T] \u003d scala.math.PartialOrdering[T]\n  type PartiallyOrdered[T] \u003d scala.math.PartiallyOrdered[T]\n\n  type Either[+A, +B] \u003d scala.util.Either[A, B]\n  val Either \u003d scala.util.Either\n\n  type Left[+A, +B] \u003d scala.util.Left[A, B]\n  val Left \u003d scala.util.Left\n\n  type Right[+A, +B] \u003d scala.util.Right[A, B]\n  val Right \u003d scala.util.Right\n\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 25, 2024 10:57:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 22:57:16 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 10:57:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\nimport scala.annotation.migration\n\n/**\n * Core Scala types. They are always available without an explicit import.\n * @contentDiagram hideNodes \"scala.Serializable\"\n */\npackage object scala {\n  type Cloneable    \u003d java.lang.Cloneable\n  type Serializable \u003d java.io.Serializable\n\n  type Throwable \u003d java.lang.Throwable\n  type Exception \u003d java.lang.Exception\n  type Error     \u003d java.lang.Error\n\n  type RuntimeException                \u003d java.lang.RuntimeException\n  type NullPointerException            \u003d java.lang.NullPointerException\n  type ClassCastException              \u003d java.lang.ClassCastException\n  type IndexOutOfBoundsException       \u003d java.lang.IndexOutOfBoundsException\n  type ArrayIndexOutOfBoundsException  \u003d java.lang.ArrayIndexOutOfBoundsException\n  type StringIndexOutOfBoundsException \u003d java.lang.StringIndexOutOfBoundsException\n  type UnsupportedOperationException   \u003d java.lang.UnsupportedOperationException\n  type IllegalArgumentException        \u003d java.lang.IllegalArgumentException\n  type NoSuchElementException          \u003d java.util.NoSuchElementException\n  type NumberFormatException           \u003d java.lang.NumberFormatException\n  type AbstractMethodError             \u003d java.lang.AbstractMethodError\n  type InterruptedException            \u003d java.lang.InterruptedException\n\n  // A dummy used by the specialization annotation.\n  val AnyRef \u003d new Specializable {\n    override def toString \u003d \"object AnyRef\"\n  }\n\n  @deprecated(\"Use IterableOnce instead of TraversableOnce\", \"2.13.0\")\n  type TraversableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  type IterableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  type Traversable[+A] \u003d scala.collection.Iterable[A]\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  val Traversable \u003d scala.collection.Iterable\n\n  type Iterable[+A] \u003d scala.collection.Iterable[A]\n  val Iterable \u003d scala.collection.Iterable\n\n  @migration(\"scala.Seq is now scala.collection.immutable.Seq instead of scala.collection.Seq\", \"2.13.0\")\n  type Seq[+A] \u003d scala.collection.immutable.Seq[A]\n  val Seq \u003d scala.collection.immutable.Seq\n\n  @migration(\"scala.IndexedSeq is now scala.collection.immutable.IndexedSeq instead of scala.collection.IndexedSeq\", \"2.13.0\")\n  type IndexedSeq[+A] \u003d scala.collection.immutable.IndexedSeq[A]\n  val IndexedSeq \u003d scala.collection.immutable.IndexedSeq\n\n  type Iterator[+A] \u003d scala.collection.Iterator[A]\n  val Iterator \u003d scala.collection.Iterator\n\n  @deprecated(\"Use scala.collection.BufferedIterator instead of scala.BufferedIterator\", \"2.13.0\")\n  type BufferedIterator[+A] \u003d scala.collection.BufferedIterator[A]\n\n  type List[+A] \u003d scala.collection.immutable.List[A]\n  val List \u003d scala.collection.immutable.List\n\n  val Nil \u003d scala.collection.immutable.Nil\n\n  type ::[+A] \u003d scala.collection.immutable.::[A]\n  val :: \u003d scala.collection.immutable.::\n\n  val +: \u003d scala.collection.+:\n  val :+ \u003d scala.collection.:+\n\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  type Stream[+A] \u003d scala.collection.immutable.Stream[A]\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  val Stream \u003d scala.collection.immutable.Stream\n\n  type LazyList[+A] \u003d scala.collection.immutable.LazyList[A]\n  val LazyList \u003d scala.collection.immutable.LazyList\n  // This should be an alias to LazyList.#:: but we need to support Stream, too\n  //val #:: \u003d scala.collection.immutable.LazyList.#::\n  object #:: {\n    def unapply[A](s: LazyList[A]): Option[(A, LazyList[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n    @deprecated(\"Prefer LazyList instead\", since \u003d \"2.13.0\")\n    def unapply[A](s: Stream[A]): Option[(A, Stream[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n  }\n\n  type Vector[+A] \u003d scala.collection.immutable.Vector[A]\n  val Vector \u003d scala.collection.immutable.Vector\n\n  type StringBuilder \u003d scala.collection.mutable.StringBuilder\n  val StringBuilder \u003d scala.collection.mutable.StringBuilder\n\n  type Range \u003d scala.collection.immutable.Range\n  val Range \u003d scala.collection.immutable.Range\n\n  // Numeric types which were moved into scala.math.*\n\n  type BigDecimal \u003d scala.math.BigDecimal\n  val BigDecimal \u003d scala.math.BigDecimal\n\n  type BigInt \u003d scala.math.BigInt\n  val BigInt \u003d scala.math.BigInt\n\n  type Equiv[T] \u003d scala.math.Equiv[T]\n  val Equiv \u003d scala.math.Equiv\n\n  type Fractional[T] \u003d scala.math.Fractional[T]\n  val Fractional \u003d scala.math.Fractional\n\n  type Integral[T] \u003d scala.math.Integral[T]\n  val Integral \u003d scala.math.Integral\n\n  type Numeric[T] \u003d scala.math.Numeric[T]\n  val Numeric \u003d scala.math.Numeric\n\n  type Ordered[T] \u003d scala.math.Ordered[T]\n  val Ordered \u003d scala.math.Ordered\n\n  type Ordering[T] \u003d scala.math.Ordering[T]\n  val Ordering \u003d scala.math.Ordering\n\n  type PartialOrdering[T] \u003d scala.math.PartialOrdering[T]\n  type PartiallyOrdered[T] \u003d scala.math.PartiallyOrdered[T]\n\n  type Either[+A, +B] \u003d scala.util.Either[A, B]\n  val Either \u003d scala.util.Either\n\n  type Left[+A, +B] \u003d scala.util.Left[A, B]\n  val Left \u003d scala.util.Left\n\n  type Right[+A, +B] \u003d scala.util.Right[A, B]\n  val Right \u003d scala.util.Right\n\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 22:57:38 INFO  compiling root (2 scala sources)
2024.04.25 22:57:38 INFO  time: compiled root in 0.47s
2024.04.25 22:57:48 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 35m 50.477s)
2024.04.25 22:57:48 INFO  compiling root-test (3 scala sources)
2024.04.25 22:57:48 INFO  time: compiled root-test in 0.64s
2024.04.25 22:57:49 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.25 22:57:49 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.25 22:57:49 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.25 22:57:48 INFO  Loaded expression compiler in 0 milliseconds
2024.04.25 22:57:48 INFO  Loaded step filter in 0 milliseconds
2024.04.25 22:57:50 INFO  Loaded all sources and classes in 1 second
2024.04.25 22:57:50 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:54324 .
2024.04.25 22:57:50 INFO  Attaching to debuggee VM succeeded.
2024.04.25 22:57:51 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.25 22:57:51 INFO  Closing debug server tcp://0.0.0.0:54322
2024.04.25 22:58:31 WARN  Could not find semantic tokens for: file:///C:/Users/Gewin%20Singh/Desktop/S/AIN3/SE/CHESS-SE-HTWG/src/main/scala/Chess/Chess.scala
2024.04.25 22:58:36 WARN  Could not find semantic tokens for: file:///C:/Users/Gewin%20Singh/Desktop/S/AIN3/SE/CHESS-SE-HTWG/src/main/scala/Chess/Chess.scala
2024.04.25 22:58:40 INFO  compiling root (1 scala source)
2024.04.25 22:58:40 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 36m 42.541s)
2024.04.25 22:58:40 INFO  time: compiled root in 0.18s
2024.04.25 22:58:40 INFO  compiling root (1 scala source)
2024.04.25 22:58:40 INFO  time: compiled root in 16ms
2024.04.25 22:58:40 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 36m 42.628s)
2024.04.25 22:58:40 INFO  compiling root (1 scala source)
2024.04.25 22:58:40 INFO  compiling root (1 scala source)
2024.04.25 22:58:40 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala
scala.meta.tokenizers.TokenizeException: <input>:31: error: illegal character '\u0000'
  
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:476)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:481)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:58:40 INFO  time: compiled root in 0.14s
2024.04.25 22:58:40 INFO  {
  "jsonrpc": "2.0",
  "id": "277",
  "error": {
    "code": -32603,
    "message": "Compilation not successful"
  }
}
2024.04.25 22:58:40 ERROR failed: Starting debug server
scala.meta.internal.metals.MetalsBspException: BSP connection failed in the attempt to get: DebugSessionAddress
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.$anonfun$applyOrElse$9(BuildServerConnection.scala:509)
	at scala.Option.getOrElse(Option.scala:201)
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.applyOrElse(BuildServerConnection.scala:509)
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.applyOrElse(BuildServerConnection.scala:484)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:490)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)
Caused by: org.eclipse.lsp4j.jsonrpc.MessageIssueException: Message could not be parsed.
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponseIssues(RemoteEndpoint.java:358)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handle(RemoteEndpoint.java:317)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:58:40 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala
scala.meta.tokenizers.TokenizeException: <input>:31: error: illegal character '\u0000'
  
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:476)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:481)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:58:49 INFO  compiling root (1 scala source)
2024.04.25 22:58:49 INFO  time: compiled root in 0.1s
2024.04.25 22:58:49 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala
scala.meta.tokenizers.TokenizeException: <input>:31: error: illegal character '\u0000'
  
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:476)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:481)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:58:55 WARN  Could not find semantic tokens for: file:///C:/Users/Gewin%20Singh/Desktop/S/AIN3/SE/CHESS-SE-HTWG/src/main/scala/Chess/Chess.scala
2024.04.25 22:58:56 WARN  Could not find semantic tokens for: file:///C:/Users/Gewin%20Singh/Desktop/S/AIN3/SE/CHESS-SE-HTWG/src/main/scala/Chess/Chess.scala
2024.04.25 22:58:56 INFO  compiling root (1 scala source)
2024.04.25 22:58:56 INFO  time: compiled root in 0.11s
2024.04.25 22:58:56 INFO  compiling root (1 scala source)
2024.04.25 22:58:57 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala
scala.meta.tokenizers.TokenizeException: <input>:31: error: illegal character '\u0000'
  
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:476)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:481)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:58:56 INFO  time: compiled root in 0.24s
2024.04.25 22:58:57 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala
scala.meta.tokenizers.TokenizeException: <input>:31: error: illegal character '\u0000'
  
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:476)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:481)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:59:06 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala
scala.meta.tokenizers.TokenizeException: <input>:31: error: illegal character '\u0000'
  
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:476)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:481)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:59:09 INFO  compiling root (1 scala source)
2024.04.25 22:59:09 INFO  time: compiled root in 0.18s
2024.04.25 22:59:10 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Chess.scala
scala.meta.tokenizers.TokenizeException: <input>:31: error: illegal character '\u0000'
  
^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchOther$1(LegacyScanner.scala:476)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:481)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.25 22:59:36 INFO  compiling root (1 scala source)
2024.04.25 22:59:36 INFO  time: compiled root in 79ms
2024.04.25 22:59:36 INFO  compiling root (1 scala source)
2024.04.25 22:59:36 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 37m 38.565s)
2024.04.25 22:59:36 INFO  compiling root (1 scala source)
2024.04.25 22:59:36 INFO  time: compiled root in 0.22s
2024.04.25 22:59:36 INFO  compiling root-test (3 scala sources)
2024.04.25 22:59:36 INFO  time: compiled root-test in 0.33s
2024.04.25 22:59:39 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 37m 41.698s)
2024.04.25 22:59:39 INFO  compiling root-test (3 scala sources)
2024.04.25 22:59:39 INFO  time: compiled root-test in 0.3s
2024.04.25 22:59:39 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.25 22:59:39 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.25 22:59:40 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.25 22:59:39 INFO  Loaded expression compiler in 0 milliseconds
2024.04.25 22:59:39 INFO  Loaded step filter in 0 milliseconds
2024.04.25 22:59:41 INFO  Loaded all sources and classes in 1 second
2024.04.25 22:59:41 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:54397 .
2024.04.25 22:59:41 INFO  Attaching to debuggee VM succeeded.
2024.04.25 22:59:41 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.25 22:59:41 INFO  Closing debug server tcp://0.0.0.0:54378
2024.04.25 22:59:50 WARN  Could not find semantic tokens for: file:///C:/Users/Gewin%20Singh/Desktop/S/AIN3/SE/CHESS-SE-HTWG/src/main/scala/Chess/Chess.scala
2024.04.25 22:59:57 WARN  Could not find semantic tokens for: file:///C:/Users/Gewin%20Singh/Desktop/S/AIN3/SE/CHESS-SE-HTWG/src/main/scala/Chess/Chess.scala
2024.04.25 23:00:08 INFO  compiling root-test (3 scala sources)
2024.04.25 23:00:08 INFO  time: compiled root-test in 0.26s
2024.04.25 23:00:08 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.25 23:00:08 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.25 23:00:08 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.25 23:00:08 INFO  Loaded expression compiler in 1 millisecond
2024.04.25 23:00:08 INFO  Loaded step filter in 0 milliseconds
2024.04.25 23:00:09 INFO  Loaded all sources and classes in 1 second
2024.04.25 23:00:09 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:54427 .
2024.04.25 23:00:09 INFO  Attaching to debuggee VM succeeded.
2024.04.25 23:00:10 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.25 23:00:09 INFO  Closing debug server tcp://0.0.0.0:54424
Apr. 25, 2024 11:00:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 23:00:26 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 38m 28.529s)
2024.04.25 23:00:26 INFO  compiling root-test (3 scala sources)
2024.04.25 23:00:26 INFO  time: compiled root-test in 0.27s
2024.04.25 23:00:26 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.25 23:00:26 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.25 23:00:26 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.25 23:00:26 INFO  Loaded expression compiler in 0 milliseconds
2024.04.25 23:00:26 INFO  Loaded step filter in 0 milliseconds
2024.04.25 23:00:28 INFO  Loaded all sources and classes in 1 second
2024.04.25 23:00:28 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:54440 .
2024.04.25 23:00:28 INFO  Attaching to debuggee VM succeeded.
2024.04.25 23:00:28 INFO  Closing debug server tcp://0.0.0.0:54438
2024.04.25 23:00:29 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.25 23:06:17 INFO  Started: Metals version 1.3.0 in folders 'C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG' for client Visual Studio Code 1.88.1.
SLF4J: Class path contains multiple SLF4J providers.
SLF4J: Found provider [scribe.slf4j.ScribeServiceProvider@5c4e4666]
SLF4J: Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@798b636b]
SLF4J: See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual provider is of type [scribe.slf4j.ScribeServiceProvider@5c4e4666]
2024.04.25 23:06:21 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
Apr. 25, 2024 11:06:22 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3
Apr. 25, 2024 11:06:22 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 4
2024.04.25 23:06:22 WARN  no build target for: C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
2024.04.25 23:06:22 INFO  Attempting to connect to the build server...
2024.04.25 23:06:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.25 23:06:27 INFO  Attempting to connect to the build server...
2024.04.25 23:06:27 INFO  Attempting to connect to the build server...
2024.04.25 23:06:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\project\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.25 23:06:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.25 23:06:27 INFO  time: Connected to build server in 5.28s
2024.04.25 23:06:27 INFO  Connected to Build server: Bloop v1.5.17
2024.04.25 23:06:27 INFO  time: Imported build in 0.42s
2024.04.25 23:06:35 INFO  no build target found for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.04.25 23:06:43 INFO  no build target found for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.04.25 23:07:04 INFO  time: indexed workspace in 28s
2024.04.25 23:07:04 INFO  compiling root-test (3 scala sources)
2024.04.25 23:07:08 INFO  time: compiled root-test in 3.5s
Apr. 25, 2024 11:07:22 PM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFORMATION: Unsupported notification method: $/setTrace
2024.04.25 23:11:06 INFO  compiling root-test (3 scala sources)
2024.04.25 23:11:08 INFO  time: compiled root-test in 1.14s
2024.04.25 23:11:08 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.25 23:11:08 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.25 23:11:08 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.25 23:11:09 INFO  Loaded expression compiler in 719 milliseconds
2024.04.25 23:11:09 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\ch\epfl\scala\scala-debug-decoder_3\4.0.4\scala-debug-decoder_3-4.0.4.jar
2024.04.25 23:11:09 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala3-library_3\3.4.0\scala3-library_3-3.4.0.jar
2024.04.25 23:11:09 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\ch\epfl\scala\tasty-query_3\1.3.0\tasty-query_3-1.3.0.jar
2024.04.25 23:11:09 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\ow2\asm\asm\9.6\asm-9.6.jar
2024.04.25 23:11:09 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\ow2\asm\asm-util\9.6\asm-util-9.6.jar
2024.04.25 23:11:09 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.12\scala-library-2.13.12.jar
2024.04.25 23:11:09 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\ow2\asm\asm-tree\9.6\asm-tree-9.6.jar
2024.04.25 23:11:09 INFO  C:\Users\Gewin Singh\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\ow2\asm\asm-analysis\9.6\asm-analysis-9.6.jar
2024.04.25 23:11:09 INFO  Loaded step filter in 72 milliseconds
2024.04.25 23:11:11 INFO  Loaded all sources and classes in 2 seconds
2024.04.25 23:11:11 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:50480 .
2024.04.25 23:11:11 INFO  Attaching to debuggee VM succeeded.
2024.04.25 23:11:13 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.25 23:11:13 INFO  Closing debug server tcp://0.0.0.0:50477
2024.04.25 23:13:57 INFO  compiling root (1 scala source)
2024.04.25 23:13:58 INFO  time: compiled root in 1.46s
Apr. 25, 2024 11:14:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 268
Apr. 25, 2024 11:14:48 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 338
2024.04.25 23:14:50 INFO  compiling root (1 scala source)
2024.04.25 23:14:50 INFO  time: compiled root in 0.38s
Apr. 25, 2024 11:15:37 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 474
2024.04.25 23:17:30 INFO  compiling root (1 scala source)
2024.04.25 23:17:30 INFO  time: compiled root in 0.64s
Apr. 25, 2024 11:17:59 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 645
Apr. 25, 2024 11:18:00 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 653
2024.04.25 23:58:46 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 11:58:46 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Array.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\n//import scala.collection.generic._\nimport scala.collection.{Factory, immutable, mutable}\nimport mutable.ArrayBuilder\nimport immutable.ArraySeq\nimport scala.language.implicitConversions\nimport scala.reflect.{ClassTag, classTag}\nimport scala.runtime.BoxedUnit\nimport scala.runtime.ScalaRunTime\nimport scala.runtime.ScalaRunTime.{array_apply, array_update}\n\n/** Utility methods for operating on arrays.\n *  For example:\n *  {{{\n *  val a \u003d Array(1, 2)\n *  val b \u003d Array.ofDim[Int](2)\n *  val c \u003d Array.concat(a, b)\n *  }}}\n *  where the array objects `a`, `b` and `c` have respectively the values\n *  `Array(1, 2)`, `Array(0, 0)` and `Array(1, 2, 0, 0)`.\n */\nobject Array {\n  val emptyBooleanArray \u003d new Array[Boolean](0)\n  val emptyByteArray    \u003d new Array[Byte](0)\n  val emptyCharArray    \u003d new Array[Char](0)\n  val emptyDoubleArray  \u003d new Array[Double](0)\n  val emptyFloatArray   \u003d new Array[Float](0)\n  val emptyIntArray     \u003d new Array[Int](0)\n  val emptyLongArray    \u003d new Array[Long](0)\n  val emptyShortArray   \u003d new Array[Short](0)\n  val emptyObjectArray  \u003d new Array[Object](0)\n\n  /** Provides an implicit conversion from the Array object to a collection Factory */\n  implicit def toFactory[A : ClassTag](dummy: Array.type): Factory[A, Array[A]] \u003d new ArrayFactory(dummy)\n  @SerialVersionUID(3L)\n  private class ArrayFactory[A : ClassTag](dummy: Array.type) extends Factory[A, Array[A]] with Serializable {\n    def fromSpecific(it: IterableOnce[A]): Array[A] \u003d Array.from[A](it)\n    def newBuilder: mutable.Builder[A, Array[A]] \u003d Array.newBuilder[A]\n  }\n\n  /**\n   * Returns a new [[scala.collection.mutable.ArrayBuilder]].\n   */\n  def newBuilder[T](implicit t: ClassTag[T]): ArrayBuilder[T] \u003d ArrayBuilder.make[T](t)\n\n  /** Build an array from the iterable collection.\n   *\n   *  {{{\n   *  scala\u003e val a \u003d Array.from(Seq(1, 5))\n   *  val a: Array[Int] \u003d Array(1, 5)\n   *\n   *  scala\u003e val b \u003d Array.from(Range(1, 5))\n   *  val b: Array[Int] \u003d Array(1, 2, 3, 4)\n   *  }}}\n   *\n   *  @param  it the iterable collection\n   *  @return    an array consisting of elements of the iterable collection\n   */\n  def from[A : ClassTag](it: IterableOnce[A]): Array[A] \u003d it match {\n    case it: Iterable[A] \u003d\u003e it.toArray[A]\n    case _ \u003d\u003e it.iterator.toArray[A]\n  }\n\n  private def slowcopy(src : AnyRef,\n                       srcPos : Int,\n                       dest : AnyRef,\n                       destPos : Int,\n                       length : Int): Unit \u003d {\n    var i \u003d srcPos\n    var j \u003d destPos\n    val srcUntil \u003d srcPos + length\n    while (i \u003c srcUntil) {\n      array_update(dest, j, array_apply(src, i))\n      i +\u003d 1\n      j +\u003d 1\n    }\n  }\n\n  /** Copy one array to another.\n   *  Equivalent to Java\u0027s\n   *    `System.arraycopy(src, srcPos, dest, destPos, length)`,\n   *  except that this also works for polymorphic and boxed arrays.\n   *\n   *  Note that the passed-in `dest` array will be modified by this call.\n   *\n   *  @param src the source array.\n   *  @param srcPos  starting position in the source array.\n   *  @param dest destination array.\n   *  @param destPos starting position in the destination array.\n   *  @param length the number of array elements to be copied.\n   *\n   *  @see `java.lang.System#arraycopy`\n   */\n  def copy(src: AnyRef, srcPos: Int, dest: AnyRef, destPos: Int, length: Int): Unit \u003d {\n    val srcClass \u003d src.getClass\n    if (srcClass.isArray \u0026\u0026 dest.getClass.isAssignableFrom(srcClass))\n      java.lang.System.arraycopy(src, srcPos, dest, destPos, length)\n    else\n      slowcopy(src, srcPos, dest, destPos, length)\n  }\n\n  /** Copy one array to another, truncating or padding with default values (if\n    * necessary) so the copy has the specified length.\n    *\n    * Equivalent to Java\u0027s\n    *   `java.util.Arrays.copyOf(original, newLength)`,\n    * except that this works for primitive and object arrays in a single method.\n    *\n    * @see `java.util.Arrays#copyOf`\n    */\n  def copyOf[A](original: Array[A], newLength: Int): Array[A] \u003d ((original: @unchecked) match {\n    case x: Array[BoxedUnit]  \u003d\u003e newUnitArray(newLength).asInstanceOf[Array[A]]\n    case x: Array[AnyRef]     \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Int]        \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Double]     \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Long]       \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Float]      \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Char]       \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Byte]       \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Short]      \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Boolean]    \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n  }).asInstanceOf[Array[A]]\n\n  /** Copy one array to another, truncating or padding with default values (if\n    * necessary) so the copy has the specified length. The new array can have\n    * a different type than the original one as long as the values are\n    * assignment-compatible. When copying between primitive and object arrays,\n    * boxing and unboxing are supported.\n    *\n    * Equivalent to Java\u0027s\n    *   `java.util.Arrays.copyOf(original, newLength, newType)`,\n    * except that this works for all combinations of primitive and object arrays\n    * in a single method.\n    *\n    * @see `java.util.Arrays#copyOf`\n    */\n  def copyAs[A](original: Array[_], newLength: Int)(implicit ct: ClassTag[A]): Array[A] \u003d {\n    val runtimeClass \u003d ct.runtimeClass\n    if (runtimeClass \u003d\u003d Void.TYPE) newUnitArray(newLength).asInstanceOf[Array[A]]\n    else {\n      val destClass \u003d runtimeClass.asInstanceOf[Class[A]]\n      if (destClass.isAssignableFrom(original.getClass.getComponentType)) {\n        if (destClass.isPrimitive) copyOf[A](original.asInstanceOf[Array[A]], newLength)\n        else {\n          val destArrayClass \u003d java.lang.reflect.Array.newInstance(destClass, 0).getClass.asInstanceOf[Class[Array[AnyRef]]]\n          java.util.Arrays.copyOf(original.asInstanceOf[Array[AnyRef]], newLength, destArrayClass).asInstanceOf[Array[A]]\n        }\n      } else {\n        val dest \u003d new Array[A](newLength)\n        Array.copy(original, 0, dest, 0, original.length)\n        dest\n      }\n    }\n  }\n\n  private def newUnitArray(len: Int): Array[Unit] \u003d {\n    val result \u003d new Array[Unit](len)\n    java.util.Arrays.fill(result.asInstanceOf[Array[AnyRef]], ())\n    result\n  }\n\n  /** Returns an array of length 0 */\n  def empty[T: ClassTag]: Array[T] \u003d new Array[T](0)\n\n  /** Creates an array with given elements.\n   *\n   *  @param xs the elements to put in the array\n   *  @return an array containing all elements from xs.\n   */\n  // Subject to a compiler optimization in Cleanup.\n  // Array(e0, ..., en) is translated to { val a \u003d new Array(3); a(i) \u003d ei; a }\n  def apply[T: ClassTag](xs: T*): Array[T] \u003d {\n    val len \u003d xs.length\n    xs match {\n      case wa: immutable.ArraySeq[_] if wa.unsafeArray.getClass.getComponentType \u003d\u003d classTag[T].runtimeClass \u003d\u003e\n        // We get here in test/files/run/sd760a.scala, `Array[T](t)` for\n        // a specialized type parameter `T`. While we still pay for two\n        // copies of the array it is better than before when we also boxed\n        // each element when populating the result.\n        ScalaRunTime.array_clone(wa.unsafeArray).asInstanceOf[Array[T]]\n      case _ \u003d\u003e\n        val array \u003d new Array[T](len)\n        val iterator \u003d xs.iterator\n        var i \u003d 0\n        while (iterator.hasNext) {\n          array(i) \u003d iterator.next(); i +\u003d 1\n        }\n        array\n    }\n  }\n\n  /** Creates an array of `Boolean` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Boolean, xs: Boolean*): Array[Boolean] \u003d {\n    val array \u003d new Array[Boolean](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Byte` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Byte, xs: Byte*): Array[Byte] \u003d {\n    val array \u003d new Array[Byte](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Short` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Short, xs: Short*): Array[Short] \u003d {\n    val array \u003d new Array[Short](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Char` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Char, xs: Char*): Array[Char] \u003d {\n    val array \u003d new Array[Char](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Int` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Int, xs: Int*): Array[Int] \u003d {\n    val array \u003d new Array[Int](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Long` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Long, xs: Long*): Array[Long] \u003d {\n    val array \u003d new Array[Long](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Float` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Float, xs: Float*): Array[Float] \u003d {\n    val array \u003d new Array[Float](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Double` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Double, xs: Double*): Array[Double] \u003d {\n    val array \u003d new Array[Double](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Unit` objects */\n  def apply(x: Unit, xs: Unit*): Array[Unit] \u003d {\n    val array \u003d new Array[Unit](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates array with given dimensions */\n  def ofDim[T: ClassTag](n1: Int): Array[T] \u003d\n    new Array[T](n1)\n  /** Creates a 2-dimensional array */\n  def ofDim[T: ClassTag](n1: Int, n2: Int): Array[Array[T]] \u003d {\n    val arr: Array[Array[T]] \u003d (new Array[Array[T]](n1): Array[Array[T]])\n    for (i \u003c- 0 until n1) arr(i) \u003d new Array[T](n2)\n    arr\n    // tabulate(n1)(_ \u003d\u003e ofDim[T](n2))\n  }\n  /** Creates a 3-dimensional array */\n  def ofDim[T: ClassTag](n1: Int, n2: Int, n3: Int): Array[Array[Array[T]]] \u003d\n    tabulate(n1)(_ \u003d\u003e ofDim[T](n2, n3))\n  /** Creates a 4-dimensional array */\n  def ofDim[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int): Array[Array[Array[Array[T]]]] \u003d\n    tabulate(n1)(_ \u003d\u003e ofDim[T](n2, n3, n4))\n  /** Creates a 5-dimensional array */\n  def ofDim[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int): Array[Array[Array[Array[Array[T]]]]] \u003d\n    tabulate(n1)(_ \u003d\u003e ofDim[T](n2, n3, n4, n5))\n\n  /** Concatenates all arrays into a single array.\n   *\n   *  @param xss the given arrays\n   *  @return   the array created from concatenating `xss`\n   */\n  def concat[T: ClassTag](xss: Array[T]*): Array[T] \u003d {\n    val b \u003d newBuilder[T]\n    b.sizeHint(xss.map(_.length).sum)\n    for (xs \u003c- xss) b ++\u003d xs\n    b.result()\n  }\n\n  /** Returns an array that contains the results of some element computation a number\n   *  of times.\n   *\n   *  Note that this means that `elem` is computed a total of n times:\n   *  {{{\n   * scala\u003e Array.fill(3){ math.random }\n   * res3: Array[Double] \u003d Array(0.365461167592537, 1.550395944913685E-4, 0.7907242137333306)\n   *  }}}\n   *\n   *  @param   n  the number of elements desired\n   *  @param   elem the element computation\n   *  @return an Array of size n, where each element contains the result of computing\n   *  `elem`.\n   */\n  def fill[T: ClassTag](n: Int)(elem: \u003d\u003e T): Array[T] \u003d {\n    if (n \u003c\u003d 0) {\n      empty[T]\n    } else {\n      val array \u003d new Array[T](n)\n      var i \u003d 0\n      while (i \u003c n) {\n        array(i) \u003d elem\n        i +\u003d 1\n      }\n      array\n    }\n  }\n\n  /** Returns a two-dimensional array that contains the results of some element\n   *  computation a number of times.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   elem the element computation\n   */\n  def fill[T: ClassTag](n1: Int, n2: Int)(elem: \u003d\u003e T): Array[Array[T]] \u003d\n    tabulate(n1)(_ \u003d\u003e fill(n2)(elem))\n\n  /** Returns a three-dimensional array that contains the results of some element\n   *  computation a number of times.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   elem the element computation\n   */\n  def fill[T: ClassTag](n1: Int, n2: Int, n3: Int)(elem: \u003d\u003e T): Array[Array[Array[T]]] \u003d\n    tabulate(n1)(_ \u003d\u003e fill(n2, n3)(elem))\n\n  /** Returns a four-dimensional array that contains the results of some element\n   *  computation a number of times.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   n4  the number of elements in the 4th dimension\n   *  @param   elem the element computation\n   */\n  def fill[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(elem: \u003d\u003e T): Array[Array[Array[Array[T]]]] \u003d\n    tabulate(n1)(_ \u003d\u003e fill(n2, n3, n4)(elem))\n\n  /** Returns a five-dimensional array that contains the results of some element\n   *  computation a number of times.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   n4  the number of elements in the 4th dimension\n   *  @param   n5  the number of elements in the 5th dimension\n   *  @param   elem the element computation\n   */\n  def fill[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: \u003d\u003e T): Array[Array[Array[Array[Array[T]]]]] \u003d\n    tabulate(n1)(_ \u003d\u003e fill(n2, n3, n4, n5)(elem))\n\n  /** Returns an array containing values of a given function over a range of integer\n   *  values starting from 0.\n   *\n   *  @param  n   The number of elements in the array\n   *  @param  f   The function computing element values\n   *  @return An `Array` consisting of elements `f(0),f(1), ..., f(n - 1)`\n   */\n  def tabulate[T: ClassTag](n: Int)(f: Int \u003d\u003e T): Array[T] \u003d {\n    if (n \u003c\u003d 0) {\n      empty[T]\n    } else {\n      val array \u003d new Array[T](n)\n      var i \u003d 0\n      while (i \u003c n) {\n        array(i) \u003d f(i)\n        i +\u003d 1\n      }\n      array\n    }\n  }\n\n  /** Returns a two-dimensional array containing values of a given function\n   *  over ranges of integer values starting from `0`.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   f   The function computing element values\n   */\n  def tabulate[T: ClassTag](n1: Int, n2: Int)(f: (Int, Int) \u003d\u003e T): Array[Array[T]] \u003d\n    tabulate(n1)(i1 \u003d\u003e tabulate(n2)(f(i1, _)))\n\n  /** Returns a three-dimensional array containing values of a given function\n   *  over ranges of integer values starting from `0`.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   f   The function computing element values\n   */\n  def tabulate[T: ClassTag](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) \u003d\u003e T): Array[Array[Array[T]]] \u003d\n    tabulate(n1)(i1 \u003d\u003e tabulate(n2, n3)(f(i1, _, _)))\n\n  /** Returns a four-dimensional array containing values of a given function\n   *  over ranges of integer values starting from `0`.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   n4  the number of elements in the 4th dimension\n   *  @param   f   The function computing element values\n   */\n  def tabulate[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) \u003d\u003e T): Array[Array[Array[Array[T]]]] \u003d\n    tabulate(n1)(i1 \u003d\u003e tabulate(n2, n3, n4)(f(i1, _, _, _)))\n\n  /** Returns a five-dimensional array containing values of a given function\n   *  over ranges of integer values starting from `0`.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   n4  the number of elements in the 4th dimension\n   *  @param   n5  the number of elements in the 5th dimension\n   *  @param   f   The function computing element values\n   */\n  def tabulate[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) \u003d\u003e T): Array[Array[Array[Array[Array[T]]]]] \u003d\n    tabulate(n1)(i1 \u003d\u003e tabulate(n2, n3, n4, n5)(f(i1, _, _, _, _)))\n\n  /** Returns an array containing a sequence of increasing integers in a range.\n   *\n   *  @param start  the start value of the array\n   *  @param end    the end value of the array, exclusive (in other words, this is the first value \u0027\u0027\u0027not\u0027\u0027\u0027 returned)\n   *  @return  the array with values in range `start, start + 1, ..., end - 1`\n   *  up to, but excluding, `end`.\n   */\n  def range(start: Int, end: Int): Array[Int] \u003d range(start, end, 1)\n\n  /** Returns an array containing equally spaced values in some integer interval.\n   *\n   *  @param start the start value of the array\n   *  @param end   the end value of the array, exclusive (in other words, this is the first value \u0027\u0027\u0027not\u0027\u0027\u0027 returned)\n   *  @param step  the increment value of the array (may not be zero)\n   *  @return      the array with values in `start, start + step, ...` up to, but excluding `end`\n   */\n  def range(start: Int, end: Int, step: Int): Array[Int] \u003d {\n    if (step \u003d\u003d 0) throw new IllegalArgumentException(\"zero step\")\n    val array \u003d new Array[Int](immutable.Range.count(start, end, step, isInclusive \u003d false))\n\n    var n \u003d 0\n    var i \u003d start\n    while (if (step \u003c 0) end \u003c i else i \u003c end) {\n      array(n) \u003d i\n      i +\u003d step\n      n +\u003d 1\n    }\n    array\n  }\n\n  /** Returns an array containing repeated applications of a function to a start value.\n   *\n   *  @param start the start value of the array\n   *  @param len   the number of elements returned by the array\n   *  @param f     the function that is repeatedly applied\n   *  @return      the array returning `len` values in the sequence `start, f(start), f(f(start)), ...`\n   */\n  def iterate[T: ClassTag](start: T, len: Int)(f: T \u003d\u003e T): Array[T] \u003d {\n    if (len \u003e 0) {\n      val array \u003d new Array[T](len)\n      var acc \u003d start\n      var i \u003d 1\n      array(0) \u003d acc\n\n      while (i \u003c len) {\n        acc \u003d f(acc)\n        array(i) \u003d acc\n        i +\u003d 1\n      }\n      array\n    } else {\n      empty[T]\n    }\n  }\n\n  /** Compare two arrays per element.\n   *\n   *  A more efficient version of `xs.sameElements(ys)`.\n   *\n   *  Note that arrays are invariant in Scala, but it may\n   *  be sound to cast an array of arbitrary reference type\n   *  to `Array[AnyRef]`. Arrays on the JVM are covariant\n   *  in their element type.\n   *\n   *  `Array.equals(xs.asInstanceOf[Array[AnyRef]], ys.asInstanceOf[Array[AnyRef]])`\n   *\n   *  @param xs an array of AnyRef\n   *  @param ys an array of AnyRef\n   *  @return true if corresponding elements are equal\n   */\n  def equals(xs: Array[AnyRef], ys: Array[AnyRef]): Boolean \u003d\n    (xs eq ys) ||\n    (xs.length \u003d\u003d ys.length) \u0026\u0026 {\n      var i \u003d 0\n      while (i \u003c xs.length \u0026\u0026 xs(i) \u003d\u003d ys(i)) i +\u003d 1\n      i \u003e\u003d xs.length\n    }\n\n  /** Called in a pattern match like `{ case Array(x,y,z) \u003d\u003e println(\u00273 elements\u0027)}`.\n   *\n   *  @param x the selector value\n   *  @return  sequence wrapped in a [[scala.Some]], if `x` is an Array, otherwise `None`\n   */\n  def unapplySeq[T](x: Array[T]): UnapplySeqWrapper[T] \u003d new UnapplySeqWrapper(x)\n\n  final class UnapplySeqWrapper[T](private val a: Array[T]) extends AnyVal {\n    def isEmpty: false \u003d false\n    def get: UnapplySeqWrapper[T] \u003d this\n    def lengthCompare(len: Int): Int \u003d a.lengthCompare(len)\n    def apply(i: Int): T \u003d a(i)\n    def drop(n: Int): scala.Seq[T] \u003d ArraySeq.unsafeWrapArray(a.drop(n)) // clones the array, also if n \u003d\u003d 0\n    def toSeq: scala.Seq[T] \u003d a.toSeq // clones the array\n  }\n}\n\n/** Arrays are mutable, indexed collections of values. `Array[T]` is Scala\u0027s representation\n *  for Java\u0027s `T[]`.\n *\n *  {{{\n *  val numbers \u003d Array(1, 2, 3, 4)\n *  val first \u003d numbers(0) // read the first element\n *  numbers(3) \u003d 100 // replace the 4th array element with 100\n *  val biggerNumbers \u003d numbers.map(_ * 2) // multiply all numbers by two\n *  }}}\n *\n *  Arrays make use of two common pieces of Scala syntactic sugar, shown on lines 2 and 3 of the above\n *  example code.\n *  Line 2 is translated into a call to `apply(Int)`, while line 3 is translated into a call to\n *  `update(Int, T)`.\n *\n *  Two implicit conversions exist in [[scala.Predef]] that are frequently applied to arrays: a conversion\n *  to [[scala.collection.ArrayOps]] (shown on line 4 of the example above) and a conversion\n *  to [[scala.collection.mutable.ArraySeq]] (a subtype of [[scala.collection.Seq]]).\n *  Both types make available many of the standard operations found in the Scala collections API.\n *  The conversion to `ArrayOps` is temporary, as all operations defined on `ArrayOps` return an `Array`,\n *  while the conversion to `ArraySeq` is permanent as all operations return a `ArraySeq`.\n *\n *  The conversion to `ArrayOps` takes priority over the conversion to `ArraySeq`. For instance,\n *  consider the following code:\n *\n *  {{{\n *  val arr \u003d Array(1, 2, 3)\n *  val arrReversed \u003d arr.reverse\n *  val seqReversed : collection.Seq[Int] \u003d arr.reverse\n *  }}}\n *\n *  Value `arrReversed` will be of type `Array[Int]`, with an implicit conversion to `ArrayOps` occurring\n *  to perform the `reverse` operation. The value of `seqReversed`, on the other hand, will be computed\n *  by converting to `ArraySeq` first and invoking the variant of `reverse` that returns another\n *  `ArraySeq`.\n *\n *  @see [[https://www.scala-lang.org/files/archive/spec/2.13/ Scala Language Specification]], for in-depth information on the transformations the Scala compiler makes on Arrays (Sections 6.6 and 6.15 respectively.)\n *  @see [[https://docs.scala-lang.org/sips/scala-2-8-arrays.html \"Scala 2.8 Arrays\"]] the Scala Improvement Document detailing arrays since Scala 2.8.\n *  @see [[https://docs.scala-lang.org/overviews/collections-2.13/arrays.html \"The Scala 2.8 Collections\u0027 API\"]] section on `Array` by Martin Odersky for more information.\n *  @hideImplicitConversion scala.Predef.booleanArrayOps\n *  @hideImplicitConversion scala.Predef.byteArrayOps\n *  @hideImplicitConversion scala.Predef.charArrayOps\n *  @hideImplicitConversion scala.Predef.doubleArrayOps\n *  @hideImplicitConversion scala.Predef.floatArrayOps\n *  @hideImplicitConversion scala.Predef.intArrayOps\n *  @hideImplicitConversion scala.Predef.longArrayOps\n *  @hideImplicitConversion scala.Predef.refArrayOps\n *  @hideImplicitConversion scala.Predef.shortArrayOps\n *  @hideImplicitConversion scala.Predef.unitArrayOps\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapRefArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapIntArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapDoubleArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapLongArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapFloatArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapCharArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapByteArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapShortArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapBooleanArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapUnitArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.genericWrapArray\n *  @define coll array\n *  @define Coll `Array`\n *  @define orderDependent\n *  @define orderDependentFold\n *  @define mayNotTerminateInf\n *  @define willNotTerminateInf\n *  @define collectExample\n *  @define undefinedorder\n */\nfinal class Array[T](_length: Int) extends java.io.Serializable with java.lang.Cloneable {\n\n  /** The length of the array */\n  def length: Int \u003d throw new Error()\n\n  /** The element at given index.\n   *\n   *  Indices start at `0`; `xs.apply(0)` is the first element of array `xs`.\n   *  Note the indexing syntax `xs(i)` is a shorthand for `xs.apply(i)`.\n   *\n   *  @param    i   the index\n   *  @return       the element at the given index\n   *  @throws       ArrayIndexOutOfBoundsException if `i \u003c 0` or `length \u003c\u003d i`\n   */\n  def apply(i: Int): T \u003d throw new Error()\n\n  /** Update the element at given index.\n   *\n   *  Indices start at `0`; `xs.update(i, x)` replaces the i^th^ element in the array.\n   *  Note the syntax `xs(i) \u003d x` is a shorthand for `xs.update(i, x)`.\n   *\n   *  @param    i   the index\n   *  @param    x   the value to be written at index `i`\n   *  @throws       ArrayIndexOutOfBoundsException if `i \u003c 0` or `length \u003c\u003d i`\n   */\n  def update(i: Int, x: T): Unit \u003d { throw new Error() }\n\n  /** Clone the Array.\n   *\n   *  @return A clone of the Array.\n   */\n  override def clone(): Array[T] \u003d throw new Error()\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 25, 2024 11:58:46 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Array.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 23:58:46 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 11:58:46 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Array.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\n//import scala.collection.generic._\nimport scala.collection.{Factory, immutable, mutable}\nimport mutable.ArrayBuilder\nimport immutable.ArraySeq\nimport scala.language.implicitConversions\nimport scala.reflect.{ClassTag, classTag}\nimport scala.runtime.BoxedUnit\nimport scala.runtime.ScalaRunTime\nimport scala.runtime.ScalaRunTime.{array_apply, array_update}\n\n/** Utility methods for operating on arrays.\n *  For example:\n *  {{{\n *  val a \u003d Array(1, 2)\n *  val b \u003d Array.ofDim[Int](2)\n *  val c \u003d Array.concat(a, b)\n *  }}}\n *  where the array objects `a`, `b` and `c` have respectively the values\n *  `Array(1, 2)`, `Array(0, 0)` and `Array(1, 2, 0, 0)`.\n */\nobject Array {\n  val emptyBooleanArray \u003d new Array[Boolean](0)\n  val emptyByteArray    \u003d new Array[Byte](0)\n  val emptyCharArray    \u003d new Array[Char](0)\n  val emptyDoubleArray  \u003d new Array[Double](0)\n  val emptyFloatArray   \u003d new Array[Float](0)\n  val emptyIntArray     \u003d new Array[Int](0)\n  val emptyLongArray    \u003d new Array[Long](0)\n  val emptyShortArray   \u003d new Array[Short](0)\n  val emptyObjectArray  \u003d new Array[Object](0)\n\n  /** Provides an implicit conversion from the Array object to a collection Factory */\n  implicit def toFactory[A : ClassTag](dummy: Array.type): Factory[A, Array[A]] \u003d new ArrayFactory(dummy)\n  @SerialVersionUID(3L)\n  private class ArrayFactory[A : ClassTag](dummy: Array.type) extends Factory[A, Array[A]] with Serializable {\n    def fromSpecific(it: IterableOnce[A]): Array[A] \u003d Array.from[A](it)\n    def newBuilder: mutable.Builder[A, Array[A]] \u003d Array.newBuilder[A]\n  }\n\n  /**\n   * Returns a new [[scala.collection.mutable.ArrayBuilder]].\n   */\n  def newBuilder[T](implicit t: ClassTag[T]): ArrayBuilder[T] \u003d ArrayBuilder.make[T](t)\n\n  /** Build an array from the iterable collection.\n   *\n   *  {{{\n   *  scala\u003e val a \u003d Array.from(Seq(1, 5))\n   *  val a: Array[Int] \u003d Array(1, 5)\n   *\n   *  scala\u003e val b \u003d Array.from(Range(1, 5))\n   *  val b: Array[Int] \u003d Array(1, 2, 3, 4)\n   *  }}}\n   *\n   *  @param  it the iterable collection\n   *  @return    an array consisting of elements of the iterable collection\n   */\n  def from[A : ClassTag](it: IterableOnce[A]): Array[A] \u003d it match {\n    case it: Iterable[A] \u003d\u003e it.toArray[A]\n    case _ \u003d\u003e it.iterator.toArray[A]\n  }\n\n  private def slowcopy(src : AnyRef,\n                       srcPos : Int,\n                       dest : AnyRef,\n                       destPos : Int,\n                       length : Int): Unit \u003d {\n    var i \u003d srcPos\n    var j \u003d destPos\n    val srcUntil \u003d srcPos + length\n    while (i \u003c srcUntil) {\n      array_update(dest, j, array_apply(src, i))\n      i +\u003d 1\n      j +\u003d 1\n    }\n  }\n\n  /** Copy one array to another.\n   *  Equivalent to Java\u0027s\n   *    `System.arraycopy(src, srcPos, dest, destPos, length)`,\n   *  except that this also works for polymorphic and boxed arrays.\n   *\n   *  Note that the passed-in `dest` array will be modified by this call.\n   *\n   *  @param src the source array.\n   *  @param srcPos  starting position in the source array.\n   *  @param dest destination array.\n   *  @param destPos starting position in the destination array.\n   *  @param length the number of array elements to be copied.\n   *\n   *  @see `java.lang.System#arraycopy`\n   */\n  def copy(src: AnyRef, srcPos: Int, dest: AnyRef, destPos: Int, length: Int): Unit \u003d {\n    val srcClass \u003d src.getClass\n    if (srcClass.isArray \u0026\u0026 dest.getClass.isAssignableFrom(srcClass))\n      java.lang.System.arraycopy(src, srcPos, dest, destPos, length)\n    else\n      slowcopy(src, srcPos, dest, destPos, length)\n  }\n\n  /** Copy one array to another, truncating or padding with default values (if\n    * necessary) so the copy has the specified length.\n    *\n    * Equivalent to Java\u0027s\n    *   `java.util.Arrays.copyOf(original, newLength)`,\n    * except that this works for primitive and object arrays in a single method.\n    *\n    * @see `java.util.Arrays#copyOf`\n    */\n  def copyOf[A](original: Array[A], newLength: Int): Array[A] \u003d ((original: @unchecked) match {\n    case x: Array[BoxedUnit]  \u003d\u003e newUnitArray(newLength).asInstanceOf[Array[A]]\n    case x: Array[AnyRef]     \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Int]        \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Double]     \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Long]       \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Float]      \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Char]       \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Byte]       \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Short]      \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n    case x: Array[Boolean]    \u003d\u003e java.util.Arrays.copyOf(x, newLength)\n  }).asInstanceOf[Array[A]]\n\n  /** Copy one array to another, truncating or padding with default values (if\n    * necessary) so the copy has the specified length. The new array can have\n    * a different type than the original one as long as the values are\n    * assignment-compatible. When copying between primitive and object arrays,\n    * boxing and unboxing are supported.\n    *\n    * Equivalent to Java\u0027s\n    *   `java.util.Arrays.copyOf(original, newLength, newType)`,\n    * except that this works for all combinations of primitive and object arrays\n    * in a single method.\n    *\n    * @see `java.util.Arrays#copyOf`\n    */\n  def copyAs[A](original: Array[_], newLength: Int)(implicit ct: ClassTag[A]): Array[A] \u003d {\n    val runtimeClass \u003d ct.runtimeClass\n    if (runtimeClass \u003d\u003d Void.TYPE) newUnitArray(newLength).asInstanceOf[Array[A]]\n    else {\n      val destClass \u003d runtimeClass.asInstanceOf[Class[A]]\n      if (destClass.isAssignableFrom(original.getClass.getComponentType)) {\n        if (destClass.isPrimitive) copyOf[A](original.asInstanceOf[Array[A]], newLength)\n        else {\n          val destArrayClass \u003d java.lang.reflect.Array.newInstance(destClass, 0).getClass.asInstanceOf[Class[Array[AnyRef]]]\n          java.util.Arrays.copyOf(original.asInstanceOf[Array[AnyRef]], newLength, destArrayClass).asInstanceOf[Array[A]]\n        }\n      } else {\n        val dest \u003d new Array[A](newLength)\n        Array.copy(original, 0, dest, 0, original.length)\n        dest\n      }\n    }\n  }\n\n  private def newUnitArray(len: Int): Array[Unit] \u003d {\n    val result \u003d new Array[Unit](len)\n    java.util.Arrays.fill(result.asInstanceOf[Array[AnyRef]], ())\n    result\n  }\n\n  /** Returns an array of length 0 */\n  def empty[T: ClassTag]: Array[T] \u003d new Array[T](0)\n\n  /** Creates an array with given elements.\n   *\n   *  @param xs the elements to put in the array\n   *  @return an array containing all elements from xs.\n   */\n  // Subject to a compiler optimization in Cleanup.\n  // Array(e0, ..., en) is translated to { val a \u003d new Array(3); a(i) \u003d ei; a }\n  def apply[T: ClassTag](xs: T*): Array[T] \u003d {\n    val len \u003d xs.length\n    xs match {\n      case wa: immutable.ArraySeq[_] if wa.unsafeArray.getClass.getComponentType \u003d\u003d classTag[T].runtimeClass \u003d\u003e\n        // We get here in test/files/run/sd760a.scala, `Array[T](t)` for\n        // a specialized type parameter `T`. While we still pay for two\n        // copies of the array it is better than before when we also boxed\n        // each element when populating the result.\n        ScalaRunTime.array_clone(wa.unsafeArray).asInstanceOf[Array[T]]\n      case _ \u003d\u003e\n        val array \u003d new Array[T](len)\n        val iterator \u003d xs.iterator\n        var i \u003d 0\n        while (iterator.hasNext) {\n          array(i) \u003d iterator.next(); i +\u003d 1\n        }\n        array\n    }\n  }\n\n  /** Creates an array of `Boolean` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Boolean, xs: Boolean*): Array[Boolean] \u003d {\n    val array \u003d new Array[Boolean](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Byte` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Byte, xs: Byte*): Array[Byte] \u003d {\n    val array \u003d new Array[Byte](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Short` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Short, xs: Short*): Array[Short] \u003d {\n    val array \u003d new Array[Short](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Char` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Char, xs: Char*): Array[Char] \u003d {\n    val array \u003d new Array[Char](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Int` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Int, xs: Int*): Array[Int] \u003d {\n    val array \u003d new Array[Int](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Long` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Long, xs: Long*): Array[Long] \u003d {\n    val array \u003d new Array[Long](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Float` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Float, xs: Float*): Array[Float] \u003d {\n    val array \u003d new Array[Float](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Double` objects */\n  // Subject to a compiler optimization in Cleanup, see above.\n  def apply(x: Double, xs: Double*): Array[Double] \u003d {\n    val array \u003d new Array[Double](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates an array of `Unit` objects */\n  def apply(x: Unit, xs: Unit*): Array[Unit] \u003d {\n    val array \u003d new Array[Unit](xs.length + 1)\n    array(0) \u003d x\n    val iterator \u003d xs.iterator\n    var i \u003d 1\n    while (iterator.hasNext) {\n      array(i) \u003d iterator.next(); i +\u003d 1\n    }\n    array\n  }\n\n  /** Creates array with given dimensions */\n  def ofDim[T: ClassTag](n1: Int): Array[T] \u003d\n    new Array[T](n1)\n  /** Creates a 2-dimensional array */\n  def ofDim[T: ClassTag](n1: Int, n2: Int): Array[Array[T]] \u003d {\n    val arr: Array[Array[T]] \u003d (new Array[Array[T]](n1): Array[Array[T]])\n    for (i \u003c- 0 until n1) arr(i) \u003d new Array[T](n2)\n    arr\n    // tabulate(n1)(_ \u003d\u003e ofDim[T](n2))\n  }\n  /** Creates a 3-dimensional array */\n  def ofDim[T: ClassTag](n1: Int, n2: Int, n3: Int): Array[Array[Array[T]]] \u003d\n    tabulate(n1)(_ \u003d\u003e ofDim[T](n2, n3))\n  /** Creates a 4-dimensional array */\n  def ofDim[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int): Array[Array[Array[Array[T]]]] \u003d\n    tabulate(n1)(_ \u003d\u003e ofDim[T](n2, n3, n4))\n  /** Creates a 5-dimensional array */\n  def ofDim[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int): Array[Array[Array[Array[Array[T]]]]] \u003d\n    tabulate(n1)(_ \u003d\u003e ofDim[T](n2, n3, n4, n5))\n\n  /** Concatenates all arrays into a single array.\n   *\n   *  @param xss the given arrays\n   *  @return   the array created from concatenating `xss`\n   */\n  def concat[T: ClassTag](xss: Array[T]*): Array[T] \u003d {\n    val b \u003d newBuilder[T]\n    b.sizeHint(xss.map(_.length).sum)\n    for (xs \u003c- xss) b ++\u003d xs\n    b.result()\n  }\n\n  /** Returns an array that contains the results of some element computation a number\n   *  of times.\n   *\n   *  Note that this means that `elem` is computed a total of n times:\n   *  {{{\n   * scala\u003e Array.fill(3){ math.random }\n   * res3: Array[Double] \u003d Array(0.365461167592537, 1.550395944913685E-4, 0.7907242137333306)\n   *  }}}\n   *\n   *  @param   n  the number of elements desired\n   *  @param   elem the element computation\n   *  @return an Array of size n, where each element contains the result of computing\n   *  `elem`.\n   */\n  def fill[T: ClassTag](n: Int)(elem: \u003d\u003e T): Array[T] \u003d {\n    if (n \u003c\u003d 0) {\n      empty[T]\n    } else {\n      val array \u003d new Array[T](n)\n      var i \u003d 0\n      while (i \u003c n) {\n        array(i) \u003d elem\n        i +\u003d 1\n      }\n      array\n    }\n  }\n\n  /** Returns a two-dimensional array that contains the results of some element\n   *  computation a number of times.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   elem the element computation\n   */\n  def fill[T: ClassTag](n1: Int, n2: Int)(elem: \u003d\u003e T): Array[Array[T]] \u003d\n    tabulate(n1)(_ \u003d\u003e fill(n2)(elem))\n\n  /** Returns a three-dimensional array that contains the results of some element\n   *  computation a number of times.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   elem the element computation\n   */\n  def fill[T: ClassTag](n1: Int, n2: Int, n3: Int)(elem: \u003d\u003e T): Array[Array[Array[T]]] \u003d\n    tabulate(n1)(_ \u003d\u003e fill(n2, n3)(elem))\n\n  /** Returns a four-dimensional array that contains the results of some element\n   *  computation a number of times.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   n4  the number of elements in the 4th dimension\n   *  @param   elem the element computation\n   */\n  def fill[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(elem: \u003d\u003e T): Array[Array[Array[Array[T]]]] \u003d\n    tabulate(n1)(_ \u003d\u003e fill(n2, n3, n4)(elem))\n\n  /** Returns a five-dimensional array that contains the results of some element\n   *  computation a number of times.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   n4  the number of elements in the 4th dimension\n   *  @param   n5  the number of elements in the 5th dimension\n   *  @param   elem the element computation\n   */\n  def fill[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(elem: \u003d\u003e T): Array[Array[Array[Array[Array[T]]]]] \u003d\n    tabulate(n1)(_ \u003d\u003e fill(n2, n3, n4, n5)(elem))\n\n  /** Returns an array containing values of a given function over a range of integer\n   *  values starting from 0.\n   *\n   *  @param  n   The number of elements in the array\n   *  @param  f   The function computing element values\n   *  @return An `Array` consisting of elements `f(0),f(1), ..., f(n - 1)`\n   */\n  def tabulate[T: ClassTag](n: Int)(f: Int \u003d\u003e T): Array[T] \u003d {\n    if (n \u003c\u003d 0) {\n      empty[T]\n    } else {\n      val array \u003d new Array[T](n)\n      var i \u003d 0\n      while (i \u003c n) {\n        array(i) \u003d f(i)\n        i +\u003d 1\n      }\n      array\n    }\n  }\n\n  /** Returns a two-dimensional array containing values of a given function\n   *  over ranges of integer values starting from `0`.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   f   The function computing element values\n   */\n  def tabulate[T: ClassTag](n1: Int, n2: Int)(f: (Int, Int) \u003d\u003e T): Array[Array[T]] \u003d\n    tabulate(n1)(i1 \u003d\u003e tabulate(n2)(f(i1, _)))\n\n  /** Returns a three-dimensional array containing values of a given function\n   *  over ranges of integer values starting from `0`.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   f   The function computing element values\n   */\n  def tabulate[T: ClassTag](n1: Int, n2: Int, n3: Int)(f: (Int, Int, Int) \u003d\u003e T): Array[Array[Array[T]]] \u003d\n    tabulate(n1)(i1 \u003d\u003e tabulate(n2, n3)(f(i1, _, _)))\n\n  /** Returns a four-dimensional array containing values of a given function\n   *  over ranges of integer values starting from `0`.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   n4  the number of elements in the 4th dimension\n   *  @param   f   The function computing element values\n   */\n  def tabulate[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int)(f: (Int, Int, Int, Int) \u003d\u003e T): Array[Array[Array[Array[T]]]] \u003d\n    tabulate(n1)(i1 \u003d\u003e tabulate(n2, n3, n4)(f(i1, _, _, _)))\n\n  /** Returns a five-dimensional array containing values of a given function\n   *  over ranges of integer values starting from `0`.\n   *\n   *  @param   n1  the number of elements in the 1st dimension\n   *  @param   n2  the number of elements in the 2nd dimension\n   *  @param   n3  the number of elements in the 3rd dimension\n   *  @param   n4  the number of elements in the 4th dimension\n   *  @param   n5  the number of elements in the 5th dimension\n   *  @param   f   The function computing element values\n   */\n  def tabulate[T: ClassTag](n1: Int, n2: Int, n3: Int, n4: Int, n5: Int)(f: (Int, Int, Int, Int, Int) \u003d\u003e T): Array[Array[Array[Array[Array[T]]]]] \u003d\n    tabulate(n1)(i1 \u003d\u003e tabulate(n2, n3, n4, n5)(f(i1, _, _, _, _)))\n\n  /** Returns an array containing a sequence of increasing integers in a range.\n   *\n   *  @param start  the start value of the array\n   *  @param end    the end value of the array, exclusive (in other words, this is the first value \u0027\u0027\u0027not\u0027\u0027\u0027 returned)\n   *  @return  the array with values in range `start, start + 1, ..., end - 1`\n   *  up to, but excluding, `end`.\n   */\n  def range(start: Int, end: Int): Array[Int] \u003d range(start, end, 1)\n\n  /** Returns an array containing equally spaced values in some integer interval.\n   *\n   *  @param start the start value of the array\n   *  @param end   the end value of the array, exclusive (in other words, this is the first value \u0027\u0027\u0027not\u0027\u0027\u0027 returned)\n   *  @param step  the increment value of the array (may not be zero)\n   *  @return      the array with values in `start, start + step, ...` up to, but excluding `end`\n   */\n  def range(start: Int, end: Int, step: Int): Array[Int] \u003d {\n    if (step \u003d\u003d 0) throw new IllegalArgumentException(\"zero step\")\n    val array \u003d new Array[Int](immutable.Range.count(start, end, step, isInclusive \u003d false))\n\n    var n \u003d 0\n    var i \u003d start\n    while (if (step \u003c 0) end \u003c i else i \u003c end) {\n      array(n) \u003d i\n      i +\u003d step\n      n +\u003d 1\n    }\n    array\n  }\n\n  /** Returns an array containing repeated applications of a function to a start value.\n   *\n   *  @param start the start value of the array\n   *  @param len   the number of elements returned by the array\n   *  @param f     the function that is repeatedly applied\n   *  @return      the array returning `len` values in the sequence `start, f(start), f(f(start)), ...`\n   */\n  def iterate[T: ClassTag](start: T, len: Int)(f: T \u003d\u003e T): Array[T] \u003d {\n    if (len \u003e 0) {\n      val array \u003d new Array[T](len)\n      var acc \u003d start\n      var i \u003d 1\n      array(0) \u003d acc\n\n      while (i \u003c len) {\n        acc \u003d f(acc)\n        array(i) \u003d acc\n        i +\u003d 1\n      }\n      array\n    } else {\n      empty[T]\n    }\n  }\n\n  /** Compare two arrays per element.\n   *\n   *  A more efficient version of `xs.sameElements(ys)`.\n   *\n   *  Note that arrays are invariant in Scala, but it may\n   *  be sound to cast an array of arbitrary reference type\n   *  to `Array[AnyRef]`. Arrays on the JVM are covariant\n   *  in their element type.\n   *\n   *  `Array.equals(xs.asInstanceOf[Array[AnyRef]], ys.asInstanceOf[Array[AnyRef]])`\n   *\n   *  @param xs an array of AnyRef\n   *  @param ys an array of AnyRef\n   *  @return true if corresponding elements are equal\n   */\n  def equals(xs: Array[AnyRef], ys: Array[AnyRef]): Boolean \u003d\n    (xs eq ys) ||\n    (xs.length \u003d\u003d ys.length) \u0026\u0026 {\n      var i \u003d 0\n      while (i \u003c xs.length \u0026\u0026 xs(i) \u003d\u003d ys(i)) i +\u003d 1\n      i \u003e\u003d xs.length\n    }\n\n  /** Called in a pattern match like `{ case Array(x,y,z) \u003d\u003e println(\u00273 elements\u0027)}`.\n   *\n   *  @param x the selector value\n   *  @return  sequence wrapped in a [[scala.Some]], if `x` is an Array, otherwise `None`\n   */\n  def unapplySeq[T](x: Array[T]): UnapplySeqWrapper[T] \u003d new UnapplySeqWrapper(x)\n\n  final class UnapplySeqWrapper[T](private val a: Array[T]) extends AnyVal {\n    def isEmpty: false \u003d false\n    def get: UnapplySeqWrapper[T] \u003d this\n    def lengthCompare(len: Int): Int \u003d a.lengthCompare(len)\n    def apply(i: Int): T \u003d a(i)\n    def drop(n: Int): scala.Seq[T] \u003d ArraySeq.unsafeWrapArray(a.drop(n)) // clones the array, also if n \u003d\u003d 0\n    def toSeq: scala.Seq[T] \u003d a.toSeq // clones the array\n  }\n}\n\n/** Arrays are mutable, indexed collections of values. `Array[T]` is Scala\u0027s representation\n *  for Java\u0027s `T[]`.\n *\n *  {{{\n *  val numbers \u003d Array(1, 2, 3, 4)\n *  val first \u003d numbers(0) // read the first element\n *  numbers(3) \u003d 100 // replace the 4th array element with 100\n *  val biggerNumbers \u003d numbers.map(_ * 2) // multiply all numbers by two\n *  }}}\n *\n *  Arrays make use of two common pieces of Scala syntactic sugar, shown on lines 2 and 3 of the above\n *  example code.\n *  Line 2 is translated into a call to `apply(Int)`, while line 3 is translated into a call to\n *  `update(Int, T)`.\n *\n *  Two implicit conversions exist in [[scala.Predef]] that are frequently applied to arrays: a conversion\n *  to [[scala.collection.ArrayOps]] (shown on line 4 of the example above) and a conversion\n *  to [[scala.collection.mutable.ArraySeq]] (a subtype of [[scala.collection.Seq]]).\n *  Both types make available many of the standard operations found in the Scala collections API.\n *  The conversion to `ArrayOps` is temporary, as all operations defined on `ArrayOps` return an `Array`,\n *  while the conversion to `ArraySeq` is permanent as all operations return a `ArraySeq`.\n *\n *  The conversion to `ArrayOps` takes priority over the conversion to `ArraySeq`. For instance,\n *  consider the following code:\n *\n *  {{{\n *  val arr \u003d Array(1, 2, 3)\n *  val arrReversed \u003d arr.reverse\n *  val seqReversed : collection.Seq[Int] \u003d arr.reverse\n *  }}}\n *\n *  Value `arrReversed` will be of type `Array[Int]`, with an implicit conversion to `ArrayOps` occurring\n *  to perform the `reverse` operation. The value of `seqReversed`, on the other hand, will be computed\n *  by converting to `ArraySeq` first and invoking the variant of `reverse` that returns another\n *  `ArraySeq`.\n *\n *  @see [[https://www.scala-lang.org/files/archive/spec/2.13/ Scala Language Specification]], for in-depth information on the transformations the Scala compiler makes on Arrays (Sections 6.6 and 6.15 respectively.)\n *  @see [[https://docs.scala-lang.org/sips/scala-2-8-arrays.html \"Scala 2.8 Arrays\"]] the Scala Improvement Document detailing arrays since Scala 2.8.\n *  @see [[https://docs.scala-lang.org/overviews/collections-2.13/arrays.html \"The Scala 2.8 Collections\u0027 API\"]] section on `Array` by Martin Odersky for more information.\n *  @hideImplicitConversion scala.Predef.booleanArrayOps\n *  @hideImplicitConversion scala.Predef.byteArrayOps\n *  @hideImplicitConversion scala.Predef.charArrayOps\n *  @hideImplicitConversion scala.Predef.doubleArrayOps\n *  @hideImplicitConversion scala.Predef.floatArrayOps\n *  @hideImplicitConversion scala.Predef.intArrayOps\n *  @hideImplicitConversion scala.Predef.longArrayOps\n *  @hideImplicitConversion scala.Predef.refArrayOps\n *  @hideImplicitConversion scala.Predef.shortArrayOps\n *  @hideImplicitConversion scala.Predef.unitArrayOps\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapRefArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapIntArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapDoubleArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapLongArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapFloatArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapCharArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapByteArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapShortArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapBooleanArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.wrapUnitArray\n *  @hideImplicitConversion scala.LowPriorityImplicits.genericWrapArray\n *  @define coll array\n *  @define Coll `Array`\n *  @define orderDependent\n *  @define orderDependentFold\n *  @define mayNotTerminateInf\n *  @define willNotTerminateInf\n *  @define collectExample\n *  @define undefinedorder\n */\nfinal class Array[T](_length: Int) extends java.io.Serializable with java.lang.Cloneable {\n\n  /** The length of the array */\n  def length: Int \u003d throw new Error()\n\n  /** The element at given index.\n   *\n   *  Indices start at `0`; `xs.apply(0)` is the first element of array `xs`.\n   *  Note the indexing syntax `xs(i)` is a shorthand for `xs.apply(i)`.\n   *\n   *  @param    i   the index\n   *  @return       the element at the given index\n   *  @throws       ArrayIndexOutOfBoundsException if `i \u003c 0` or `length \u003c\u003d i`\n   */\n  def apply(i: Int): T \u003d throw new Error()\n\n  /** Update the element at given index.\n   *\n   *  Indices start at `0`; `xs.update(i, x)` replaces the i^th^ element in the array.\n   *  Note the syntax `xs(i) \u003d x` is a shorthand for `xs.update(i, x)`.\n   *\n   *  @param    i   the index\n   *  @param    x   the value to be written at index `i`\n   *  @throws       ArrayIndexOutOfBoundsException if `i \u003c 0` or `length \u003c\u003d i`\n   */\n  def update(i: Int, x: T): Unit \u003d { throw new Error() }\n\n  /** Clone the Array.\n   *\n   *  @return A clone of the Array.\n   */\n  override def clone(): Array[T] \u003d throw new Error()\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 23:58:56 INFO  compiling root-test (3 scala sources)
2024.04.25 23:58:56 INFO  time: compiled root-test in 0.5s
2024.04.25 23:58:56 INFO  compiling root-test (3 scala sources)
2024.04.25 23:58:56 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 11:58:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def →[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 25, 2024 11:58:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 23:58:56 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

2024.04.25 23:58:56 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 11:58:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nimport scala.language.implicitConversions\n\nimport scala.collection.{mutable, immutable, ArrayOps, StringOps}, immutable.WrappedString\nimport scala.annotation.{elidable, implicitNotFound}, elidable.ASSERTION\nimport scala.annotation.meta.{ companionClass, companionMethod }\n\n/** The `Predef` object provides definitions that are accessible in all Scala\n *  compilation units without explicit qualification.\n *\n *  \u003d\u003d\u003d Commonly Used Types \u003d\u003d\u003d\n *  Predef provides type aliases for types which are commonly used, such as\n *  the immutable collection types [[scala.collection.immutable.Map]] and\n *  [[scala.collection.immutable.Set]].\n *\n *  \u003d\u003d\u003d Console Output \u003d\u003d\u003d\n *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],\n *  which are aliases of the methods in the object [[scala.Console]].\n *\n *  \u003d\u003d\u003d Assertions \u003d\u003d\u003d\n *  A set of `assert` functions are provided for use as a way to document\n *  and dynamically check invariants in code. Invocations of `assert` can be elided\n *  at compile time by providing the command line option `-Xdisable-assertions`,\n *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.\n *\n *  Variants of `assert` intended for use with static analysis tools are also\n *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are\n *  intended for use as a means of design-by-contract style specification\n *  of pre- and post-conditions on functions, with the intention that these\n *  specifications could be consumed by a static analysis tool. For instance,\n *\n *  {{{\n *  def addNaturals(nats: List[Int]): Int \u003d {\n *    require(nats forall (_ \u003e\u003d 0), \"List contains negative numbers\")\n *    nats.foldLeft(0)(_ + _)\n *  } ensuring(_ \u003e\u003d 0)\n *  }}}\n *\n *  The declaration of `addNaturals` states that the list of integers passed should\n *  only contain natural numbers (i.e. non-negative), and that the result returned\n *  will also be natural. `require` is distinct from `assert` in that if the\n *  condition fails, then the caller of the function is to blame rather than a\n *  logical error having been made within `addNaturals` itself. `ensuring` is a\n *  form of `assert` that declares the guarantee the function is providing with\n *  regards to its return value.\n *\n *  \u003d\u003d\u003d Implicit Conversions \u003d\u003d\u003d\n *  A number of commonly applied implicit conversions are also defined here, and\n *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions\n *  are provided for the \"widening\" of numeric values, for instance, converting a\n *  Short value to a Long value as required, and to add additional higher-order\n *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].\n *\n * @groupname utilities Utility Methods\n * @groupprio utilities 10\n *\n * @groupname assertions Assertions\n * @groupprio assertions 20\n * @groupdesc assertions These methods support program verification and runtime correctness.\n *\n * @groupname console-output Console Output\n * @groupprio console-output 30\n * @groupdesc console-output These methods provide output via the console.\n *\n * @groupname aliases Aliases\n * @groupprio aliases 50\n * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.\n *\n * @groupname conversions-string String Conversions\n * @groupprio conversions-string 60\n * @groupdesc conversions-string Conversions from String to StringOps or WrappedString.\n *\n * @groupname implicit-classes-any Implicit Classes\n * @groupprio implicit-classes-any 70\n * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.\n *\n * @groupname char-sequence-wrappers CharSequence Wrappers\n * @groupprio char-sequence-wrappers 80\n * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.\n *\n * @groupname conversions-java-to-anyval Java to Scala\n * @groupprio conversions-java-to-anyval 90\n * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.\n *\n * @groupname conversions-anyval-to-java Scala to Java\n * @groupprio conversions-anyval-to-java 100\n * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.\n *\n * @groupname conversions-array-to-wrapped-array Array to ArraySeq\n * @groupprio conversions-array-to-wrapped-array 110\n * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to ArraySeqs.\n */\nobject Predef extends LowPriorityImplicits {\n  /**\n   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to\n   * the class literal `T.class` in Java.\n   *\n   * @example {{{\n   * val listClass \u003d classOf[List[_]]\n   * // listClass is java.lang.Class[List[_]] \u003d class scala.collection.immutable.List\n   *\n   * val mapIntString \u003d classOf[Map[Int,String]]\n   * // mapIntString is java.lang.Class[Map[Int,String]] \u003d interface scala.collection.immutable.Map\n   * }}}\n   *\n   * @return The runtime [[Class]] representation of type `T`.\n   * @group utilities\n   */\n  def classOf[T]: Class[T] \u003d null // This is a stub method. The actual implementation is filled in by the compiler.\n\n  /**\n   * Retrieve the single value of a type with a unique inhabitant.\n   *\n   * @example {{{\n   * object Foo\n   * val foo \u003d valueOf[Foo.type]\n   * // foo is Foo.type \u003d Foo\n   *\n   * val bar \u003d valueOf[23]\n   * // bar is 23.type \u003d 23\n   * }}}\n   * @group utilities\n   */\n  @inline def valueOf[T](implicit vt: ValueOf[T]): T \u003d vt.value\n\n  /** The `String` type in Scala has all the methods of the underlying\n   *  [[java.lang.String]], of which it is just an alias.\n   *\n   *  In addition, extension methods in [[scala.collection.StringOps]]\n   *  are added implicitly through the conversion [[augmentString]].\n   *  @group aliases\n   */\n  type String        \u003d java.lang.String\n  /**  @group aliases */\n  type Class[T]      \u003d java.lang.Class[T]\n\n  // miscellaneous -----------------------------------------------------\n  scala.`package`                         // to force scala package object to be seen.\n  scala.collection.immutable.List         // to force Nil, :: to be seen.\n\n  /**  @group aliases */\n  type Function[-A, +B] \u003d Function1[A, B]\n\n  /**  @group aliases */\n  type Map[K, +V] \u003d immutable.Map[K, V]\n  /**  @group aliases */\n  type Set[A]     \u003d immutable.Set[A]\n  /**  @group aliases */\n  val Map         \u003d immutable.Map\n  /**  @group aliases */\n  val Set         \u003d immutable.Set\n\n  /**\n   * Allows destructuring tuples with the same syntax as constructing them.\n   *\n   * @example {{{\n   * val tup \u003d \"foobar\" -\u003e 3\n   *\n   * val c \u003d tup match {\n   *   case str -\u003e i \u003d\u003e str.charAt(i)\n   * }\n   * }}}\n   * @group aliases\n   */\n  val -\u003e        \u003d Tuple2\n\n  // Manifest types, companions, and incantations for summoning\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  type OptManifest[T]   \u003d scala.reflect.OptManifest[T]\n  @implicitNotFound(msg \u003d \"No Manifest available for ${T}.\")\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  type Manifest[T]      \u003d scala.reflect.Manifest[T]\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead\", \"2.10.0\")\n  val Manifest          \u003d scala.reflect.Manifest\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  val NoManifest        \u003d scala.reflect.NoManifest\n\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead\", \"2.10.0\")\n  def manifest[T](implicit m: Manifest[T]): Manifest[T]          \u003d m\n  // TODO undeprecated until Scala reflection becomes non-experimental\n  // @deprecated(\"this notion doesn\u0027t have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.\", \"2.10.0\")\n  def optManifest[T](implicit m: OptManifest[T]): OptManifest[T] \u003d m\n\n  // Minor variations on identity functions\n\n  /**\n   * A method that returns its input value.\n   * @tparam A type of the input value x.\n   * @param x the value of type `A` to be returned.\n   * @return the value `x`.\n   * @group utilities */\n  @inline def identity[A](x: A): A \u003d x // see `$conforms` for the implicit version\n\n  /** Summon an implicit value of type `T`. Usually, the argument is not passed explicitly.\n   *\n   *  @tparam T the type of the value to be summoned\n   *  @return the implicit value of type `T`\n   *  @group utilities\n   */\n  @inline def implicitly[T](implicit e: T): T \u003d e // TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`\n\n  /** Used to mark code blocks as being expressions, instead of being taken as part of anonymous classes and the like.\n   *  This is just a different name for [[identity]].\n   *\n   *  @example Separating code blocks from `new`:\n   *           {{{\n   *             val x \u003d new AnyRef\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // the { ... } block is seen as the body of an anonymous class\n   *\n   *             val x \u003d new AnyRef\n   *\n   *             {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // an empty line is a brittle \"fix\"\n   *\n   *             val x \u003d new AnyRef\n   *             locally {\n   *               val y \u003d ...\n   *               println(y)\n   *             }\n   *             // locally guards the block and helps communicate intent\n   *           }}}\n   *  @group utilities\n   */\n  @inline def locally[T](@deprecatedName(\"x\") x: T): T \u003d x\n\n  // assertions ---------------------------------------------------------\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assert(assertion: Boolean): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  Calls to this method will not be generated if `-Xelide-below`\n   *  is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assertion   the expression to test\n   *  @param message     a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assert(assertion: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assertion)\n      throw new java.lang.AssertionError(\"assertion failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @group assertions\n   */\n  @elidable(ASSERTION)\n  def assume(assumption: Boolean): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed\")\n  }\n\n  /** Tests an expression, throwing an `AssertionError` if false.\n   *  This method differs from assert only in the intent expressed:\n   *  assert contains a predicate which needs to be proven, while\n   *  assume contains an axiom for a static checker.  Calls to this method\n   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.\n   *\n   *  @see [[scala.annotation.elidable elidable]]\n   *  @param assumption   the expression to test\n   *  @param message      a String to include in the failure message\n   *  @group assertions\n   */\n  @elidable(ASSERTION) @inline\n  final def assume(assumption: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!assumption)\n      throw new java.lang.AssertionError(\"assumption failed: \"+ message)\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @group assertions\n   */\n  def require(requirement: Boolean): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed\")\n  }\n\n  /** Tests an expression, throwing an `IllegalArgumentException` if false.\n   *  This method is similar to `assert`, but blames the caller of the method\n   *  for violating the condition.\n   *\n   *  @param requirement   the expression to test\n   *  @param message       a String to include in the failure message\n   *  @group assertions\n   */\n  @inline final def require(requirement: Boolean, message: \u003d\u003e Any): Unit \u003d {\n    if (!requirement)\n      throw new IllegalArgumentException(\"requirement failed: \"+ message)\n  }\n\n  /** `???` can be used for marking methods that remain to be implemented.\n   *  @throws NotImplementedError when `???` is invoked.\n   *  @group utilities\n   */\n  def ??? : Nothing \u003d throw new NotImplementedError\n\n  // implicit classes -----------------------------------------------------\n\n  /** @group implicit-classes-any */\n  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {\n    @inline def -\u003e [B](y: B): (A, B) \u003d (self, y)\n    @deprecated(\"Use `-\u003e` instead. If you still wish to display it as one character, consider using a font with programming ligatures such as Fira Code.\", \"2.13.0\")\n    def →[B](y: B): (A, B) \u003d -\u003e(y)\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class Ensuring[A](private val self: A) extends AnyVal {\n    def ensuring(cond: Boolean): A \u003d { assert(cond); self }\n    def ensuring(cond: Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond, msg); self }\n    def ensuring(cond: A \u003d\u003e Boolean): A \u003d { assert(cond(self)); self }\n    def ensuring(cond: A \u003d\u003e Boolean, msg: \u003d\u003e Any): A \u003d { assert(cond(self), msg); self }\n  }\n\n  /** @group implicit-classes-any */\n  implicit final class StringFormat[A](private val self: A) extends AnyVal {\n    /** Returns string formatted according to given `format` string.\n     *  Format strings are as for `String.format`\n     *  (@see java.lang.String.format).\n     */\n    @deprecated(\"Use `formatString.format(value)` instead of `value.formatted(formatString)`,\\nor use the `f\\\"\\\"` string interpolator. In Java 15 and later, `formatted` resolves to the new method in String which has reversed parameters.\", \"2.12.16\")\n    @inline def formatted(fmtstr: String): String \u003d fmtstr format self\n  }\n\n  /** Injects String concatenation operator `+` to any classes. \n   * @group implicit-classes-any\n   */\n  @(deprecated @companionMethod)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\")\n  @(deprecated @companionClass)(\"Implicit injection of + is deprecated. Convert to String to call +\", \"2.13.0\") // for Scaladoc\n  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit\n  implicit final class any2stringadd[A](private val self: A) extends AnyVal {\n    def +(other: String): String \u003d String.valueOf(self) + other\n  }\n\n  /** @group char-sequence-wrappers */\n  final class SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {\n    def length: Int                                     \u003d sequenceOfChars.length\n    def charAt(index: Int): Char                        \u003d sequenceOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new SeqCharSequence(sequenceOfChars.slice(start, end))\n    override def toString                               \u003d sequenceOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence \u003d new SeqCharSequence(sequenceOfChars)\n\n  /** @group char-sequence-wrappers */\n  final class ArrayCharSequence(arrayOfChars: Array[Char]) extends CharSequence {\n    def length: Int                                     \u003d arrayOfChars.length\n    def charAt(index: Int): Char                        \u003d arrayOfChars(index)\n    def subSequence(start: Int, end: Int): CharSequence \u003d new runtime.ArrayCharSequence(arrayOfChars, start, end)\n    override def toString                               \u003d arrayOfChars.mkString\n  }\n\n  /** @group char-sequence-wrappers */\n  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence \u003d new ArrayCharSequence(arrayOfChars)\n\n  /** @group conversions-string */\n  @inline implicit def augmentString(x: String): StringOps \u003d new StringOps(x)\n\n  // printing -----------------------------------------------------------\n\n  /** Prints an object to `out` using its `toString` method.\n   *\n   *  @param x the object to print; may be null.\n   *  @group console-output\n   */\n  def print(x: Any): Unit \u003d Console.print(x)\n\n  /** Prints a newline character on the default output.\n   *  @group console-output\n   */\n  def println(): Unit \u003d Console.println()\n\n  /** Prints out an object to the default output, followed by a newline character.\n   *\n   *  @param x the object to print.\n   *  @group console-output\n   */\n  def println(x: Any): Unit \u003d Console.println(x)\n\n  /** Prints its arguments as a formatted string to the default output,\n   *  based on a string pattern (in a fashion similar to printf in C).\n   *\n   *  The interpretation of the formatting patterns is described in\n   *  [[java.util.Formatter]].\n   *\n   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.\n   *\n   *  @param text the pattern for formatting the arguments.\n   *  @param xs   the arguments used to instantiate the pattern.\n   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments\n   *\n   *  @see [[scala.StringContext.f StringContext.f]]\n   *  @group console-output\n   */\n  def printf(text: String, xs: Any*): Unit \u003d Console.print(text.format(xs: _*))\n\n  // views --------------------------------------------------------------\n\n  // these two are morally deprecated but the @deprecated annotation has been moved to the extension method themselves,\n  // in order to provide a more specific deprecation method.\n  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2)): runtime.Tuple2Zipped.Ops[T1, T2]             \u003d new runtime.Tuple2Zipped.Ops(x)\n  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3)): runtime.Tuple3Zipped.Ops[T1, T2, T3] \u003d new runtime.Tuple3Zipped.Ops(x)\n\n  // Not specialized anymore since 2.13 but we still need separate methods\n  // to avoid https://github.com/scala/bug/issues/10746\n  // TODO: should not need @inline. add heuristic to inline factories for value classes.\n  @inline implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T]          \u003d new ArrayOps(xs)\n  @inline implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps[Boolean] \u003d new ArrayOps(xs)\n  @inline implicit def byteArrayOps(xs: Array[Byte]): ArrayOps[Byte]          \u003d new ArrayOps(xs)\n  @inline implicit def charArrayOps(xs: Array[Char]): ArrayOps[Char]          \u003d new ArrayOps(xs)\n  @inline implicit def doubleArrayOps(xs: Array[Double]): ArrayOps[Double]    \u003d new ArrayOps(xs)\n  @inline implicit def floatArrayOps(xs: Array[Float]): ArrayOps[Float]       \u003d new ArrayOps(xs)\n  @inline implicit def intArrayOps(xs: Array[Int]): ArrayOps[Int]             \u003d new ArrayOps(xs)\n  @inline implicit def longArrayOps(xs: Array[Long]): ArrayOps[Long]          \u003d new ArrayOps(xs)\n  @inline implicit def refArrayOps[T \u003c: AnyRef](xs: Array[T]): ArrayOps[T]    \u003d new ArrayOps(xs)\n  @inline implicit def shortArrayOps(xs: Array[Short]): ArrayOps[Short]       \u003d new ArrayOps(xs)\n  @inline implicit def unitArrayOps(xs: Array[Unit]): ArrayOps[Unit]          \u003d new ArrayOps(xs)\n\n  // \"Autoboxing\" and \"Autounboxing\" ---------------------------------------------------\n\n  /** @group conversions-anyval-to-java */\n  implicit def byte2Byte(x: Byte): java.lang.Byte             \u003d x.asInstanceOf[java.lang.Byte]\n  /** @group conversions-anyval-to-java */\n  implicit def short2Short(x: Short): java.lang.Short         \u003d x.asInstanceOf[java.lang.Short]\n  /** @group conversions-anyval-to-java */\n  implicit def char2Character(x: Char): java.lang.Character   \u003d x.asInstanceOf[java.lang.Character]\n  /** @group conversions-anyval-to-java */\n  implicit def int2Integer(x: Int): java.lang.Integer         \u003d x.asInstanceOf[java.lang.Integer]\n  /** @group conversions-anyval-to-java */\n  implicit def long2Long(x: Long): java.lang.Long             \u003d x.asInstanceOf[java.lang.Long]\n  /** @group conversions-anyval-to-java */\n  implicit def float2Float(x: Float): java.lang.Float         \u003d x.asInstanceOf[java.lang.Float]\n  /** @group conversions-anyval-to-java */\n  implicit def double2Double(x: Double): java.lang.Double     \u003d x.asInstanceOf[java.lang.Double]\n  /** @group conversions-anyval-to-java */\n  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean \u003d x.asInstanceOf[java.lang.Boolean]\n\n  /** @group conversions-java-to-anyval */\n  implicit def Byte2byte(x: java.lang.Byte): Byte             \u003d x.asInstanceOf[Byte]\n  /** @group conversions-java-to-anyval */\n  implicit def Short2short(x: java.lang.Short): Short         \u003d x.asInstanceOf[Short]\n  /** @group conversions-java-to-anyval */\n  implicit def Character2char(x: java.lang.Character): Char   \u003d x.asInstanceOf[Char]\n  /** @group conversions-java-to-anyval */\n  implicit def Integer2int(x: java.lang.Integer): Int         \u003d x.asInstanceOf[Int]\n  /** @group conversions-java-to-anyval */\n  implicit def Long2long(x: java.lang.Long): Long             \u003d x.asInstanceOf[Long]\n  /** @group conversions-java-to-anyval */\n  implicit def Float2float(x: java.lang.Float): Float         \u003d x.asInstanceOf[Float]\n  /** @group conversions-java-to-anyval */\n  implicit def Double2double(x: java.lang.Double): Double     \u003d x.asInstanceOf[Double]\n  /** @group conversions-java-to-anyval */\n  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean \u003d x.asInstanceOf[Boolean]\n\n  /** An implicit of type `A \u003d\u003e A` is available for all `A` because it can always\n   *  be implemented using the identity function. This also means that an\n   *  implicit of type `A \u003d\u003e B` is always available when `A \u003c: B`, because\n   *  `(A \u003d\u003e A) \u003c: (A \u003d\u003e B)`.\n   */\n  // $ to avoid accidental shadowing (e.g. scala/bug#7788)\n  implicit def $conforms[A]: A \u003d\u003e A \u003d \u003c:\u003c.refl\n}\n\n/** The `LowPriorityImplicits` class provides implicit values that\n*  are valid in all Scala compilation units without explicit qualification,\n*  but that are partially overridden by higher-priority conversions in object\n*  `Predef`.\n*/\n// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid\n// cyclic reference errors compiling the standard library *without* a previously\n// compiled copy on the classpath.\nprivate[scala] abstract class LowPriorityImplicits extends LowPriorityImplicits2 {\n  import mutable.ArraySeq\n\n  /** We prefer the java.lang.* boxed types to these wrappers in\n   *  any potential conflicts.  Conflicts do exist because the wrappers\n   *  need to implement ScalaNumber in order to have a symmetric equals\n   *  method, but that implies implementing java.lang.Number as well.\n   *\n   *  Note - these are inlined because they are value classes, but\n   *  the call to xxxWrapper is not eliminated even though it does nothing.\n   *  Even inlined, every call site does a no-op retrieval of Predef\u0027s MODULE$\n   *  because maybe loading Predef has side effects!\n   */\n  @inline implicit def byteWrapper(x: Byte): runtime.RichByte          \u003d new runtime.RichByte(x)\n  @inline implicit def shortWrapper(x: Short): runtime.RichShort       \u003d new runtime.RichShort(x)\n  @inline implicit def intWrapper(x: Int): runtime.RichInt             \u003d new runtime.RichInt(x)\n  @inline implicit def charWrapper(c: Char): runtime.RichChar          \u003d new runtime.RichChar(c)\n  @inline implicit def longWrapper(x: Long): runtime.RichLong          \u003d new runtime.RichLong(x)\n  @inline implicit def floatWrapper(x: Float): runtime.RichFloat       \u003d new runtime.RichFloat(x)\n  @inline implicit def doubleWrapper(x: Double): runtime.RichDouble    \u003d new runtime.RichDouble(x)\n  @inline implicit def booleanWrapper(x: Boolean): runtime.RichBoolean \u003d new runtime.RichBoolean(x)\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def genericWrapArray[T](xs: Array[T]): ArraySeq[T] \u003d\n    if (xs eq null) null\n    else ArraySeq.make(xs)\n\n  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]\n  // is as good as another for all T \u003c: AnyRef.  Instead of creating 100,000,000\n  // unique ones by way of this implicit, let\u0027s share one.\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapRefArray[T \u003c: AnyRef](xs: Array[T]): ArraySeq.ofRef[T] \u003d {\n    if (xs eq null) null\n    else if (xs.length \u003d\u003d 0) ArraySeq.empty[AnyRef].asInstanceOf[ArraySeq.ofRef[T]]\n    else new ArraySeq.ofRef[T](xs)\n  }\n\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapIntArray(xs: Array[Int]): ArraySeq.ofInt \u003d if (xs ne null) new ArraySeq.ofInt(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapDoubleArray(xs: Array[Double]): ArraySeq.ofDouble \u003d if (xs ne null) new ArraySeq.ofDouble(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapLongArray(xs: Array[Long]): ArraySeq.ofLong \u003d if (xs ne null) new ArraySeq.ofLong(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapFloatArray(xs: Array[Float]): ArraySeq.ofFloat \u003d if (xs ne null) new ArraySeq.ofFloat(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapCharArray(xs: Array[Char]): ArraySeq.ofChar \u003d if (xs ne null) new ArraySeq.ofChar(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapByteArray(xs: Array[Byte]): ArraySeq.ofByte \u003d if (xs ne null) new ArraySeq.ofByte(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapShortArray(xs: Array[Short]): ArraySeq.ofShort \u003d if (xs ne null) new ArraySeq.ofShort(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapBooleanArray(xs: Array[Boolean]): ArraySeq.ofBoolean \u003d if (xs ne null) new ArraySeq.ofBoolean(xs) else null\n  /** @group conversions-array-to-wrapped-array */\n  implicit def wrapUnitArray(xs: Array[Unit]): ArraySeq.ofUnit \u003d if (xs ne null) new ArraySeq.ofUnit(xs) else null\n\n  /** @group conversions-string */\n  implicit def wrapString(s: String): WrappedString \u003d if (s ne null) new WrappedString(s) else null\n}\n\nprivate[scala] abstract class LowPriorityImplicits2 {\n  @deprecated(\"implicit conversions from Array to immutable.IndexedSeq are implemented by copying; use `toIndexedSeq` explicitly if you want to copy, or use the more efficient non-copying ArraySeq.unsafeWrapArray\", since\u003d\"2.13.0\")\n  implicit def copyArrayToImmutableIndexedSeq[T](xs: Array[T]): IndexedSeq[T] \u003d\n    if (xs eq null) null\n    else new ArrayOps(xs).toIndexedSeq\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 25, 2024 11:58:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Unit.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n\n/** `Unit` is a subtype of [[scala.AnyVal]]. There is only one value of type\n *  `Unit`, `()`, and it is not represented by any object in the underlying\n *  runtime system. A method with return type `Unit` is analogous to a Java\n *  method which is declared `void`.\n */\nfinal abstract class Unit private extends AnyVal {\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Unit] \u003d ???\n}\n\n@scala.annotation.compileTimeOnly(\"`Unit` companion object is not allowed in source; instead, use `()` for the unit value\")\nobject Unit extends AnyValCompanion {\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  This method is not intended for use in source code.\n   *  The runtime representation of this value is platform specific.\n   *\n   *  @param  x   the Unit to be boxed\n   *  @return     a scala.runtime.BoxedUnit offering `x` as its underlying value.\n   */\n  def box(x: Unit): scala.runtime.BoxedUnit \u003d scala.runtime.BoxedUnit.UNIT\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a scala.runtime.BoxedUnit.\n   *\n   *  This method is not intended for use in source code.\n   *  The result of successfully unboxing a value is `()`.\n   *\n   *  @param  x   the scala.runtime.BoxedUnit to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a scala.runtime.BoxedUnit\n   *  @return     the Unit value ()\n   */\n  def unbox(x: java.lang.Object): Unit \u003d x.asInstanceOf[scala.runtime.BoxedUnit]\n\n  /** The String representation of the scala.Unit companion object. */\n  override def toString \u003d \"object scala.Unit\"\n}\n\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 25, 2024 11:58:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Unit.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 23:58:56 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 25, 2024 11:58:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Unit.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n\n/** `Unit` is a subtype of [[scala.AnyVal]]. There is only one value of type\n *  `Unit`, `()`, and it is not represented by any object in the underlying\n *  runtime system. A method with return type `Unit` is analogous to a Java\n *  method which is declared `void`.\n */\nfinal abstract class Unit private extends AnyVal {\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Unit] \u003d ???\n}\n\n@scala.annotation.compileTimeOnly(\"`Unit` companion object is not allowed in source; instead, use `()` for the unit value\")\nobject Unit extends AnyValCompanion {\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  This method is not intended for use in source code.\n   *  The runtime representation of this value is platform specific.\n   *\n   *  @param  x   the Unit to be boxed\n   *  @return     a scala.runtime.BoxedUnit offering `x` as its underlying value.\n   */\n  def box(x: Unit): scala.runtime.BoxedUnit \u003d scala.runtime.BoxedUnit.UNIT\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a scala.runtime.BoxedUnit.\n   *\n   *  This method is not intended for use in source code.\n   *  The result of successfully unboxing a value is `()`.\n   *\n   *  @param  x   the scala.runtime.BoxedUnit to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a scala.runtime.BoxedUnit\n   *  @return     the Unit value ()\n   */\n  def unbox(x: java.lang.Object): Unit \u003d x.asInstanceOf[scala.runtime.BoxedUnit]\n\n  /** The String representation of the scala.Unit companion object. */\n  override def toString \u003d \"object scala.Unit\"\n}\n\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.25 23:58:57 INFO  time: compiled root-test in 0.47s
Apr. 26, 2024 12:01:46 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Array.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Array.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 12:01:56 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Predef.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Predef.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 12:01:56 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Unit.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 00:02:19 INFO  compiling root (2 scala sources)
2024.04.26 00:02:19 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 55m 52.532s)
2024.04.26 00:02:19 INFO  compiling root (2 scala sources)
2024.04.26 00:02:19 INFO  time: compiled root in 0.11s
2024.04.26 00:02:19 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 55m 52.689s)
2024.04.26 00:02:19 INFO  compiling root (2 scala sources)
2024.04.26 00:02:19 INFO  compiling root (2 scala sources)
2024.04.26 00:02:19 INFO  time: compiled root in 0.24s
2024.04.26 00:02:20 INFO  {
  "jsonrpc": "2.0",
  "id": "78",
  "error": {
    "code": -32603,
    "message": "Compilation not successful"
  }
}
2024.04.26 00:02:20 ERROR failed: Starting debug server
scala.meta.internal.metals.MetalsBspException: BSP connection failed in the attempt to get: DebugSessionAddress
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.$anonfun$applyOrElse$9(BuildServerConnection.scala:509)
	at scala.Option.getOrElse(Option.scala:201)
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.applyOrElse(BuildServerConnection.scala:509)
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.applyOrElse(BuildServerConnection.scala:484)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:490)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)
Caused by: org.eclipse.lsp4j.jsonrpc.MessageIssueException: Message could not be parsed.
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponseIssues(RemoteEndpoint.java:358)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handle(RemoteEndpoint.java:317)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 00:02:40 INFO  compiling root (2 scala sources)
2024.04.26 00:02:40 INFO  time: compiled root in 0.12s
2024.04.26 00:02:52 INFO  compiling root (2 scala sources)
2024.04.26 00:02:52 INFO  time: compiled root in 0.66s
2024.04.26 00:02:53 INFO  compiling root (2 scala sources)
2024.04.26 00:02:53 INFO  time: compiled root in 0.46s
2024.04.26 00:02:53 INFO  compiling root (2 scala sources)
2024.04.26 00:02:53 INFO  time: compiled root in 0.44s
2024.04.26 00:03:10 INFO  compiling root (2 scala sources)
2024.04.26 00:03:10 INFO  time: compiled root in 0.27s
2024.04.26 00:03:13 INFO  compiling root (2 scala sources)
2024.04.26 00:03:13 WARN  Using indexes to guess the definition of createfield
2024.04.26 00:03:13 INFO  time: compiled root in 0.36s
2024.04.26 00:03:50 INFO  compiling root (2 scala sources)
2024.04.26 00:03:50 INFO  time: compiled root in 0.16s
Apr. 26, 2024 12:04:03 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 1347
Apr. 26, 2024 12:04:03 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 1350
Apr. 26, 2024 12:04:35 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 1403
2024.04.26 00:05:41 INFO  compiling root (2 scala sources)
2024.04.26 00:05:41 INFO  time: compiled root in 0.11s
2024.04.26 00:07:34 INFO  compiling root (2 scala sources)
2024.04.26 00:07:34 INFO  time: compiled root in 0.28s
2024.04.26 00:08:04 INFO  compiling root (2 scala sources)
2024.04.26 00:08:04 INFO  time: compiled root in 0.25s
2024.04.26 00:08:14 INFO  compiling root (2 scala sources)
2024.04.26 00:08:14 INFO  time: compiled root in 0.25s
2024.04.26 00:08:44 INFO  compiling root (2 scala sources)
2024.04.26 00:08:44 INFO  time: compiled root in 0.38s
2024.04.26 00:08:49 INFO  compiling root (2 scala sources)
2024.04.26 00:08:49 INFO  time: compiled root in 0.38s
2024.04.26 00:09:58 INFO  compiling root (2 scala sources)
2024.04.26 00:09:58 INFO  time: compiled root in 0.33s
2024.04.26 00:10:11 INFO  compiling root (2 scala sources)
2024.04.26 00:10:11 INFO  time: compiled root in 0.29s
2024.04.26 00:10:21 INFO  compiling root (2 scala sources)
2024.04.26 00:10:21 INFO  time: compiled root in 0.23s
2024.04.26 00:10:32 INFO  compiling root (2 scala sources)
2024.04.26 00:10:32 INFO  time: compiled root in 0.23s
2024.04.26 00:10:39 INFO  compiling root (2 scala sources)
2024.04.26 00:10:39 INFO  time: compiled root in 0.28s
2024.04.26 00:11:37 INFO  compiling root (2 scala sources)
2024.04.26 00:11:37 INFO  time: compiled root in 0.21s
2024.04.26 00:11:42 INFO  compiling root (2 scala sources)
2024.04.26 00:11:42 INFO  time: compiled root in 0.24s
2024.04.26 00:11:51 INFO  compiling root (2 scala sources)
2024.04.26 00:11:51 INFO  time: compiled root in 0.22s
2024.04.26 00:11:57 INFO  compiling root (2 scala sources)
2024.04.26 00:11:57 INFO  time: compiled root in 0.22s
2024.04.26 00:12:52 INFO  compiling root (5 scala sources)
2024.04.26 00:12:52 INFO  time: compiled root in 0.49s
2024.04.26 00:12:57 INFO  compiling root (5 scala sources)
2024.04.26 00:12:57 INFO  time: compiled root in 0.36s
2024.04.26 00:13:15 INFO  compiling root (5 scala sources)
2024.04.26 00:13:15 INFO  time: compiled root in 0.37s
2024.04.26 00:13:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 12:13:35 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\nimport scala.annotation.migration\n\n/**\n * Core Scala types. They are always available without an explicit import.\n * @contentDiagram hideNodes \"scala.Serializable\"\n */\npackage object scala {\n  type Cloneable    \u003d java.lang.Cloneable\n  type Serializable \u003d java.io.Serializable\n\n  type Throwable \u003d java.lang.Throwable\n  type Exception \u003d java.lang.Exception\n  type Error     \u003d java.lang.Error\n\n  type RuntimeException                \u003d java.lang.RuntimeException\n  type NullPointerException            \u003d java.lang.NullPointerException\n  type ClassCastException              \u003d java.lang.ClassCastException\n  type IndexOutOfBoundsException       \u003d java.lang.IndexOutOfBoundsException\n  type ArrayIndexOutOfBoundsException  \u003d java.lang.ArrayIndexOutOfBoundsException\n  type StringIndexOutOfBoundsException \u003d java.lang.StringIndexOutOfBoundsException\n  type UnsupportedOperationException   \u003d java.lang.UnsupportedOperationException\n  type IllegalArgumentException        \u003d java.lang.IllegalArgumentException\n  type NoSuchElementException          \u003d java.util.NoSuchElementException\n  type NumberFormatException           \u003d java.lang.NumberFormatException\n  type AbstractMethodError             \u003d java.lang.AbstractMethodError\n  type InterruptedException            \u003d java.lang.InterruptedException\n\n  // A dummy used by the specialization annotation.\n  val AnyRef \u003d new Specializable {\n    override def toString \u003d \"object AnyRef\"\n  }\n\n  @deprecated(\"Use IterableOnce instead of TraversableOnce\", \"2.13.0\")\n  type TraversableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  type IterableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  type Traversable[+A] \u003d scala.collection.Iterable[A]\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  val Traversable \u003d scala.collection.Iterable\n\n  type Iterable[+A] \u003d scala.collection.Iterable[A]\n  val Iterable \u003d scala.collection.Iterable\n\n  @migration(\"scala.Seq is now scala.collection.immutable.Seq instead of scala.collection.Seq\", \"2.13.0\")\n  type Seq[+A] \u003d scala.collection.immutable.Seq[A]\n  val Seq \u003d scala.collection.immutable.Seq\n\n  @migration(\"scala.IndexedSeq is now scala.collection.immutable.IndexedSeq instead of scala.collection.IndexedSeq\", \"2.13.0\")\n  type IndexedSeq[+A] \u003d scala.collection.immutable.IndexedSeq[A]\n  val IndexedSeq \u003d scala.collection.immutable.IndexedSeq\n\n  type Iterator[+A] \u003d scala.collection.Iterator[A]\n  val Iterator \u003d scala.collection.Iterator\n\n  @deprecated(\"Use scala.collection.BufferedIterator instead of scala.BufferedIterator\", \"2.13.0\")\n  type BufferedIterator[+A] \u003d scala.collection.BufferedIterator[A]\n\n  type List[+A] \u003d scala.collection.immutable.List[A]\n  val List \u003d scala.collection.immutable.List\n\n  val Nil \u003d scala.collection.immutable.Nil\n\n  type ::[+A] \u003d scala.collection.immutable.::[A]\n  val :: \u003d scala.collection.immutable.::\n\n  val +: \u003d scala.collection.+:\n  val :+ \u003d scala.collection.:+\n\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  type Stream[+A] \u003d scala.collection.immutable.Stream[A]\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  val Stream \u003d scala.collection.immutable.Stream\n\n  type LazyList[+A] \u003d scala.collection.immutable.LazyList[A]\n  val LazyList \u003d scala.collection.immutable.LazyList\n  // This should be an alias to LazyList.#:: but we need to support Stream, too\n  //val #:: \u003d scala.collection.immutable.LazyList.#::\n  object #:: {\n    def unapply[A](s: LazyList[A]): Option[(A, LazyList[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n    @deprecated(\"Prefer LazyList instead\", since \u003d \"2.13.0\")\n    def unapply[A](s: Stream[A]): Option[(A, Stream[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n  }\n\n  type Vector[+A] \u003d scala.collection.immutable.Vector[A]\n  val Vector \u003d scala.collection.immutable.Vector\n\n  type StringBuilder \u003d scala.collection.mutable.StringBuilder\n  val StringBuilder \u003d scala.collection.mutable.StringBuilder\n\n  type Range \u003d scala.collection.immutable.Range\n  val Range \u003d scala.collection.immutable.Range\n\n  // Numeric types which were moved into scala.math.*\n\n  type BigDecimal \u003d scala.math.BigDecimal\n  val BigDecimal \u003d scala.math.BigDecimal\n\n  type BigInt \u003d scala.math.BigInt\n  val BigInt \u003d scala.math.BigInt\n\n  type Equiv[T] \u003d scala.math.Equiv[T]\n  val Equiv \u003d scala.math.Equiv\n\n  type Fractional[T] \u003d scala.math.Fractional[T]\n  val Fractional \u003d scala.math.Fractional\n\n  type Integral[T] \u003d scala.math.Integral[T]\n  val Integral \u003d scala.math.Integral\n\n  type Numeric[T] \u003d scala.math.Numeric[T]\n  val Numeric \u003d scala.math.Numeric\n\n  type Ordered[T] \u003d scala.math.Ordered[T]\n  val Ordered \u003d scala.math.Ordered\n\n  type Ordering[T] \u003d scala.math.Ordering[T]\n  val Ordering \u003d scala.math.Ordering\n\n  type PartialOrdering[T] \u003d scala.math.PartialOrdering[T]\n  type PartiallyOrdered[T] \u003d scala.math.PartiallyOrdered[T]\n\n  type Either[+A, +B] \u003d scala.util.Either[A, B]\n  val Either \u003d scala.util.Either\n\n  type Left[+A, +B] \u003d scala.util.Left[A, B]\n  val Left \u003d scala.util.Left\n\n  type Right[+A, +B] \u003d scala.util.Right[A, B]\n  val Right \u003d scala.util.Right\n\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 12:13:35 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 00:13:35 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 12:13:35 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\nimport scala.annotation.migration\n\n/**\n * Core Scala types. They are always available without an explicit import.\n * @contentDiagram hideNodes \"scala.Serializable\"\n */\npackage object scala {\n  type Cloneable    \u003d java.lang.Cloneable\n  type Serializable \u003d java.io.Serializable\n\n  type Throwable \u003d java.lang.Throwable\n  type Exception \u003d java.lang.Exception\n  type Error     \u003d java.lang.Error\n\n  type RuntimeException                \u003d java.lang.RuntimeException\n  type NullPointerException            \u003d java.lang.NullPointerException\n  type ClassCastException              \u003d java.lang.ClassCastException\n  type IndexOutOfBoundsException       \u003d java.lang.IndexOutOfBoundsException\n  type ArrayIndexOutOfBoundsException  \u003d java.lang.ArrayIndexOutOfBoundsException\n  type StringIndexOutOfBoundsException \u003d java.lang.StringIndexOutOfBoundsException\n  type UnsupportedOperationException   \u003d java.lang.UnsupportedOperationException\n  type IllegalArgumentException        \u003d java.lang.IllegalArgumentException\n  type NoSuchElementException          \u003d java.util.NoSuchElementException\n  type NumberFormatException           \u003d java.lang.NumberFormatException\n  type AbstractMethodError             \u003d java.lang.AbstractMethodError\n  type InterruptedException            \u003d java.lang.InterruptedException\n\n  // A dummy used by the specialization annotation.\n  val AnyRef \u003d new Specializable {\n    override def toString \u003d \"object AnyRef\"\n  }\n\n  @deprecated(\"Use IterableOnce instead of TraversableOnce\", \"2.13.0\")\n  type TraversableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  type IterableOnce[+A] \u003d scala.collection.IterableOnce[A]\n\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  type Traversable[+A] \u003d scala.collection.Iterable[A]\n  @deprecated(\"Use Iterable instead of Traversable\", \"2.13.0\")\n  val Traversable \u003d scala.collection.Iterable\n\n  type Iterable[+A] \u003d scala.collection.Iterable[A]\n  val Iterable \u003d scala.collection.Iterable\n\n  @migration(\"scala.Seq is now scala.collection.immutable.Seq instead of scala.collection.Seq\", \"2.13.0\")\n  type Seq[+A] \u003d scala.collection.immutable.Seq[A]\n  val Seq \u003d scala.collection.immutable.Seq\n\n  @migration(\"scala.IndexedSeq is now scala.collection.immutable.IndexedSeq instead of scala.collection.IndexedSeq\", \"2.13.0\")\n  type IndexedSeq[+A] \u003d scala.collection.immutable.IndexedSeq[A]\n  val IndexedSeq \u003d scala.collection.immutable.IndexedSeq\n\n  type Iterator[+A] \u003d scala.collection.Iterator[A]\n  val Iterator \u003d scala.collection.Iterator\n\n  @deprecated(\"Use scala.collection.BufferedIterator instead of scala.BufferedIterator\", \"2.13.0\")\n  type BufferedIterator[+A] \u003d scala.collection.BufferedIterator[A]\n\n  type List[+A] \u003d scala.collection.immutable.List[A]\n  val List \u003d scala.collection.immutable.List\n\n  val Nil \u003d scala.collection.immutable.Nil\n\n  type ::[+A] \u003d scala.collection.immutable.::[A]\n  val :: \u003d scala.collection.immutable.::\n\n  val +: \u003d scala.collection.+:\n  val :+ \u003d scala.collection.:+\n\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  type Stream[+A] \u003d scala.collection.immutable.Stream[A]\n  @deprecated(\"Use LazyList instead of Stream\", \"2.13.0\")\n  val Stream \u003d scala.collection.immutable.Stream\n\n  type LazyList[+A] \u003d scala.collection.immutable.LazyList[A]\n  val LazyList \u003d scala.collection.immutable.LazyList\n  // This should be an alias to LazyList.#:: but we need to support Stream, too\n  //val #:: \u003d scala.collection.immutable.LazyList.#::\n  object #:: {\n    def unapply[A](s: LazyList[A]): Option[(A, LazyList[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n    @deprecated(\"Prefer LazyList instead\", since \u003d \"2.13.0\")\n    def unapply[A](s: Stream[A]): Option[(A, Stream[A])] \u003d\n      if (s.nonEmpty) Some((s.head, s.tail)) else None\n  }\n\n  type Vector[+A] \u003d scala.collection.immutable.Vector[A]\n  val Vector \u003d scala.collection.immutable.Vector\n\n  type StringBuilder \u003d scala.collection.mutable.StringBuilder\n  val StringBuilder \u003d scala.collection.mutable.StringBuilder\n\n  type Range \u003d scala.collection.immutable.Range\n  val Range \u003d scala.collection.immutable.Range\n\n  // Numeric types which were moved into scala.math.*\n\n  type BigDecimal \u003d scala.math.BigDecimal\n  val BigDecimal \u003d scala.math.BigDecimal\n\n  type BigInt \u003d scala.math.BigInt\n  val BigInt \u003d scala.math.BigInt\n\n  type Equiv[T] \u003d scala.math.Equiv[T]\n  val Equiv \u003d scala.math.Equiv\n\n  type Fractional[T] \u003d scala.math.Fractional[T]\n  val Fractional \u003d scala.math.Fractional\n\n  type Integral[T] \u003d scala.math.Integral[T]\n  val Integral \u003d scala.math.Integral\n\n  type Numeric[T] \u003d scala.math.Numeric[T]\n  val Numeric \u003d scala.math.Numeric\n\n  type Ordered[T] \u003d scala.math.Ordered[T]\n  val Ordered \u003d scala.math.Ordered\n\n  type Ordering[T] \u003d scala.math.Ordering[T]\n  val Ordering \u003d scala.math.Ordering\n\n  type PartialOrdering[T] \u003d scala.math.PartialOrdering[T]\n  type PartiallyOrdered[T] \u003d scala.math.PartiallyOrdered[T]\n\n  type Either[+A, +B] \u003d scala.util.Either[A, B]\n  val Either \u003d scala.util.Either\n\n  type Left[+A, +B] \u003d scala.util.Left[A, B]\n  val Left \u003d scala.util.Left\n\n  type Right[+A, +B] \u003d scala.util.Right[A, B]\n  val Right \u003d scala.util.Right\n\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 00:14:04 INFO  compiling root (5 scala sources)
2024.04.26 00:14:04 INFO  time: compiled root in 0.37s
2024.04.26 00:15:04 INFO  compiling root (5 scala sources)
2024.04.26 00:15:04 INFO  time: compiled root in 0.35s
Apr. 26, 2024 12:15:38 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3269
2024.04.26 00:16:07 INFO  compiling root (5 scala sources)
2024.04.26 00:16:07 INFO  time: compiled root in 0.32s
2024.04.26 00:16:09 INFO  compiling root (5 scala sources)
2024.04.26 00:16:09 INFO  time: compiled root in 0.39s
2024.04.26 00:16:09 INFO  compiling root (5 scala sources)
2024.04.26 00:16:10 INFO  time: compiled root in 0.43s
2024.04.26 00:16:16 INFO  compiling root (5 scala sources)
2024.04.26 00:16:16 INFO  time: compiled root in 0.18s
2024.04.26 00:16:21 INFO  compiling root (5 scala sources)
2024.04.26 00:16:21 INFO  time: compiled root in 0.34s
2024.04.26 00:16:22 INFO  compiling root (5 scala sources)
2024.04.26 00:16:22 INFO  time: compiled root in 0.28s
2024.04.26 00:16:22 INFO  compiling root (5 scala sources)
2024.04.26 00:16:22 INFO  time: compiled root in 0.39s
Apr. 26, 2024 12:16:35 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/package.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/package.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 00:16:54 INFO  compiling root (5 scala sources)
2024.04.26 00:16:54 INFO  time: compiled root in 0.26s
2024.04.26 00:16:59 INFO  compiling root (5 scala sources)
2024.04.26 00:16:59 INFO  time: compiled root in 0.25s
2024.04.26 00:18:50 INFO  compiling root (5 scala sources)
2024.04.26 00:18:50 INFO  time: compiled root in 0.19s
2024.04.26 00:19:13 INFO  compiling root (5 scala sources)
2024.04.26 00:19:13 INFO  time: compiled root in 0.15s
Apr. 26, 2024 12:19:19 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3975
2024.04.26 00:19:34 INFO  compiling root (5 scala sources)
2024.04.26 00:19:34 INFO  time: compiled root in 0.17s
2024.04.26 00:19:35 INFO  compiling root (5 scala sources)
2024.04.26 00:19:35 INFO  time: compiled root in 0.2s
2024.04.26 00:19:35 INFO  compiling root (5 scala sources)
2024.04.26 00:19:35 INFO  time: compiled root in 0.2s
2024.04.26 00:19:35 INFO  compiling root (5 scala sources)
2024.04.26 00:19:35 INFO  time: compiled root in 0.2s
2024.04.26 00:19:43 INFO  compiling root (5 scala sources)
2024.04.26 00:19:43 INFO  time: compiled root in 0.17s
2024.04.26 00:19:44 INFO  compiling root (5 scala sources)
2024.04.26 00:19:44 INFO  time: compiled root in 0.21s
2024.04.26 00:19:44 INFO  compiling root (5 scala sources)
2024.04.26 00:19:44 INFO  time: compiled root in 0.17s
2024.04.26 00:19:44 INFO  compiling root (5 scala sources)
2024.04.26 00:19:44 INFO  time: compiled root in 0.17s
2024.04.26 00:19:44 INFO  compiling root (5 scala sources)
2024.04.26 00:19:45 INFO  time: compiled root in 0.21s
2024.04.26 00:19:45 INFO  compiling root (5 scala sources)
2024.04.26 00:19:45 INFO  time: compiled root in 0.23s
2024.04.26 00:19:55 INFO  compiling root (5 scala sources)
2024.04.26 00:19:55 INFO  time: compiled root in 0.81s
2024.04.26 00:19:57 INFO  compiling root (2 scala sources)
2024.04.26 00:19:57 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 1h 13m 30.456s)
2024.04.26 00:19:57 INFO  compiling root (2 scala sources)
2024.04.26 00:19:57 INFO  compiling root-test (3 scala sources)
2024.04.26 00:19:57 INFO  time: compiled root in 0.46s
2024.04.26 00:19:59 INFO  time: compiled root-test in 0.57s
2024.04.26 00:19:59 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 00:19:59 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 00:19:59 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 00:19:59 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 00:19:59 INFO  Loaded step filter in 0 milliseconds
2024.04.26 00:20:01 INFO  Loaded all sources and classes in 1 second
2024.04.26 00:20:01 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:61941 .
2024.04.26 00:20:01 INFO  Attaching to debuggee VM succeeded.
2024.04.26 00:20:02 INFO  Closing debug server tcp://0.0.0.0:61938
2024.04.26 00:20:02 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 00:20:30 INFO  compiling root (1 scala source)
2024.04.26 00:20:30 INFO  time: compiled root in 0.16s
2024.04.26 00:20:31 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 1h 14m 4.248s)
2024.04.26 00:20:31 INFO  compiling root-test (3 scala sources)
2024.04.26 00:20:31 INFO  time: compiled root-test in 0.34s
2024.04.26 00:20:32 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 00:20:32 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 00:20:32 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 00:20:31 INFO  Loaded expression compiler in 1 millisecond
2024.04.26 00:20:31 INFO  Loaded step filter in 0 milliseconds
2024.04.26 00:20:33 INFO  Loaded all sources and classes in 1 second
2024.04.26 00:20:33 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:61958 .
2024.04.26 00:20:33 INFO  Attaching to debuggee VM succeeded.
2024.04.26 00:20:34 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 00:20:34 INFO  Closing debug server tcp://0.0.0.0:61956
2024.04.26 00:23:16 INFO  compiling root (1 scala source)
2024.04.26 00:23:16 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 1h 16m 48.505s)
2024.04.26 00:23:16 INFO  compiling root (1 scala source)
2024.04.26 00:23:16 INFO  time: compiled root in 0.23s
2024.04.26 00:23:16 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 1h 16m 48.776s)
2024.04.26 00:23:16 INFO  compiling root (1 scala source)
2024.04.26 00:23:16 INFO  compiling root (1 scala source)
2024.04.26 00:23:16 INFO  time: compiled root in 0.3s
2024.04.26 00:23:16 INFO  {
  "jsonrpc": "2.0",
  "id": "274",
  "error": {
    "code": -32603,
    "message": "Compilation not successful"
  }
}
2024.04.26 00:23:16 ERROR failed: Starting debug server
scala.meta.internal.metals.MetalsBspException: BSP connection failed in the attempt to get: DebugSessionAddress
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.$anonfun$applyOrElse$9(BuildServerConnection.scala:509)
	at scala.Option.getOrElse(Option.scala:201)
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.applyOrElse(BuildServerConnection.scala:509)
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.applyOrElse(BuildServerConnection.scala:484)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:490)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)
Caused by: org.eclipse.lsp4j.jsonrpc.MessageIssueException: Message could not be parsed.
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponseIssues(RemoteEndpoint.java:358)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handle(RemoteEndpoint.java:317)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 00:23:35 INFO  compiling root (1 scala source)
2024.04.26 00:23:35 INFO  time: compiled root in 0.21s
2024.04.26 00:23:37 INFO  compiling root (1 scala source)
2024.04.26 00:23:37 INFO  time: compiled root in 0.3s
2024.04.26 00:23:38 INFO  compiling root (1 scala source)
2024.04.26 00:23:38 INFO  time: compiled root in 0.28s
2024.04.26 00:23:49 INFO  compiling root (1 scala source)
2024.04.26 00:23:49 INFO  time: compiled root in 0.22s
2024.04.26 00:24:11 INFO  compiling root (1 scala source)
2024.04.26 00:24:11 INFO  time: compiled root in 0.23s
2024.04.26 00:24:14 INFO  compiling root (1 scala source)
2024.04.26 00:24:14 INFO  time: compiled root in 0.31s
2024.04.26 00:24:24 INFO  compiling root (1 scala source)
2024.04.26 00:24:24 INFO  time: compiled root in 0.27s
2024.04.26 00:24:26 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 1h 17m 58.952s)
2024.04.26 00:24:26 INFO  compiling root-test (3 scala sources)
2024.04.26 00:24:26 INFO  time: compiled root-test in 0.25s
2024.04.26 00:24:26 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 00:24:26 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 00:24:27 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 00:24:26 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 00:24:26 INFO  Loaded step filter in 0 milliseconds
2024.04.26 00:24:28 INFO  Loaded all sources and classes in 1 second
2024.04.26 00:24:28 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:62060 .
2024.04.26 00:24:28 INFO  Attaching to debuggee VM succeeded.
2024.04.26 00:24:28 INFO  Closing debug server tcp://0.0.0.0:62058
2024.04.26 00:24:29 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 00:26:22 INFO  compiling root (1 scala source)
2024.04.26 00:26:22 INFO  time: compiled root in 0.25s
Apr. 26, 2024 12:27:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 4954
2024.04.26 00:28:26 INFO  compiling root (1 scala source)
2024.04.26 00:28:26 INFO  time: compiled root in 0.14s
2024.04.26 00:29:01 INFO  compiling root (1 scala source)
2024.04.26 00:29:01 INFO  time: compiled root in 0.25s
2024.04.26 00:29:24 INFO  compiling root (1 scala source)
2024.04.26 00:29:24 INFO  time: compiled root in 0.22s
2024.04.26 00:32:58 INFO  compiling root (1 scala source)
2024.04.26 00:32:58 INFO  time: compiled root in 0.22s
2024.04.26 00:33:29 INFO  compiling root (1 scala source)
2024.04.26 00:33:29 INFO  time: compiled root in 0.29s
Apr. 26, 2024 12:33:45 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 5963
2024.04.26 00:34:46 WARN  Using indexes to guess the definition of getCords
2024.04.26 00:34:47 INFO  compiling root (1 scala source)
2024.04.26 00:34:47 WARN  Using indexes to guess the definition of getCords
2024.04.26 00:34:47 INFO  time: compiled root in 0.23s
2024.04.26 00:34:58 INFO  compiling root (1 scala source)
2024.04.26 00:34:58 INFO  time: compiled root in 0.13s
2024.04.26 00:35:02 INFO  compiling root (1 scala source)
2024.04.26 00:35:02 INFO  time: compiled root in 0.11s
Apr. 26, 2024 12:35:07 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 6179
2024.04.26 00:35:17 INFO  compiling root (1 scala source)
2024.04.26 00:35:17 INFO  time: compiled root in 0.25s
2024.04.26 00:35:58 INFO  compiling root (1 scala source)
2024.04.26 00:35:58 INFO  time: compiled root in 0.12s
2024.04.26 00:38:02 INFO  compiling root (1 scala source)
2024.04.26 00:38:02 INFO  time: compiled root in 0.13s
2024.04.26 00:38:22 INFO  compiling root (1 scala source)
2024.04.26 00:38:22 INFO  time: compiled root in 0.21s
2024.04.26 00:38:33 INFO  compiling root (1 scala source)
2024.04.26 00:38:33 INFO  time: compiled root in 0.13s
2024.04.26 00:38:59 INFO  compiling root (1 scala source)
2024.04.26 00:38:59 INFO  time: compiled root in 0.12s
2024.04.26 00:39:18 INFO  compiling root (1 scala source)
2024.04.26 00:39:18 INFO  time: compiled root in 0.22s
Apr. 26, 2024 12:39:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 6648
2024.04.26 00:39:45 INFO  compiling root (1 scala source)
2024.04.26 00:39:45 INFO  time: compiled root in 0.22s
2024.04.26 00:41:09 INFO  compiling root (1 scala source)
2024.04.26 00:41:09 INFO  time: compiled root in 0.24s
2024.04.26 00:42:35 INFO  compiling root (1 scala source)
2024.04.26 00:42:35 INFO  time: compiled root in 0.33s
2024.04.26 00:42:55 INFO  compiling root (1 scala source)
2024.04.26 00:42:55 INFO  time: compiled root in 0.36s
2024.04.26 00:44:15 INFO  compiling root (1 scala source)
2024.04.26 00:44:15 INFO  time: compiled root in 0.21s
2024.04.26 00:44:27 INFO  compiling root (1 scala source)
2024.04.26 00:44:27 INFO  time: compiled root in 0.11s
Apr. 26, 2024 12:45:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 7155
2024.04.26 00:46:34 WARN  Using indexes to guess the definition of vLine
2024.04.26 00:46:35 INFO  compiling root (1 scala source)
2024.04.26 00:46:35 INFO  time: compiled root in 0.12s
2024.04.26 00:47:57 INFO  compiling root (1 scala source)
2024.04.26 00:47:57 INFO  time: compiled root in 0.11s
2024.04.26 00:48:16 INFO  compiling root (1 scala source)
2024.04.26 00:48:16 INFO  time: compiled root in 0.12s
2024.04.26 00:48:43 INFO  compiling root (1 scala source)
2024.04.26 00:48:43 INFO  time: compiled root in 0.11s
2024.04.26 00:49:28 INFO  compiling root (1 scala source)
2024.04.26 00:49:28 INFO  time: compiled root in 0.14s
2024.04.26 00:49:54 INFO  compiling root (1 scala source)
2024.04.26 00:49:54 INFO  time: compiled root in 0.14s
2024.04.26 00:49:54 INFO  compiling root (1 scala source)
2024.04.26 00:49:54 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 1h 43m 27.399s)
2024.04.26 00:49:54 INFO  compiling root (1 scala source)
2024.04.26 00:49:54 INFO  time: compiled root in 0.19s
Apr. 26, 2024 12:50:26 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 7887
2024.04.26 00:50:40 INFO  compiling root (1 scala source)
2024.04.26 00:50:40 INFO  time: compiled root in 0.11s
Apr. 26, 2024 12:53:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 8357
2024.04.26 00:55:21 INFO  compiling root (1 scala source)
2024.04.26 00:55:21 INFO  time: compiled root in 0.12s
2024.04.26 00:55:29 INFO  compiling root (1 scala source)
2024.04.26 00:55:29 INFO  time: compiled root in 0.12s
2024.04.26 00:55:56 INFO  compiling root (1 scala source)
2024.04.26 00:55:56 INFO  time: compiled root in 0.12s
2024.04.26 00:57:33 INFO  compiling root (1 scala source)
2024.04.26 00:57:33 INFO  time: compiled root in 0.12s
Apr. 26, 2024 12:58:03 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 9061
2024.04.26 00:58:06 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:41: error: unclosed string literal
    sr.append(checkFieldR(x+1,y) + "\")
                                   ^
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:23)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.syntaxError(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter.syntaxError$(Reporter.scala:25)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.syntaxError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.getStringLit(LegacyScanner.scala:560)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchDoubleQuote$1(LegacyScanner.scala:379)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:383)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 00:58:22 INFO  compiling root (1 scala source)
2024.04.26 00:58:22 INFO  time: compiled root in 0.12s
Apr. 26, 2024 12:58:32 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 9146
2024.04.26 01:02:17 INFO  compiling root (1 scala source)
2024.04.26 01:02:17 INFO  time: compiled root in 0.14s
2024.04.26 01:02:17 INFO  compiling root (1 scala source)
2024.04.26 01:02:17 INFO  time: compiled root in 0.15s
Apr. 26, 2024 1:04:13 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 9567
Apr. 26, 2024 1:08:31 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 9981
2024.04.26 01:10:35 INFO  compiling root (2 scala sources)
2024.04.26 01:10:36 INFO  time: compiled root in 1.01s
Apr. 26, 2024 1:10:41 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 10347
2024.04.26 01:10:45 INFO  compiling root (2 scala sources)
2024.04.26 01:10:45 INFO  time: compiled root in 0.27s
2024.04.26 01:11:03 INFO  compiling root (2 scala sources)
2024.04.26 01:11:03 INFO  time: compiled root in 0.32s
Apr. 26, 2024 1:11:14 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 10468
2024.04.26 01:11:22 INFO  compiling root (2 scala sources)
2024.04.26 01:11:22 INFO  time: compiled root in 0.28s
2024.04.26 01:11:31 INFO  compiling root (2 scala sources)
2024.04.26 01:11:31 INFO  time: compiled root in 0.13s
2024.04.26 01:12:41 INFO  compiling root (2 scala sources)
2024.04.26 01:12:41 INFO  time: compiled root in 0.15s
2024.04.26 01:13:01 INFO  compiling root (2 scala sources)
2024.04.26 01:13:01 INFO  time: compiled root in 0.22s
2024.04.26 01:13:02 WARN  Using indexes to guess the definition of Chesspiece
2024.04.26 01:13:02 INFO  compiling root (2 scala sources)
2024.04.26 01:13:02 WARN  Using indexes to guess the definition of Chesspiece
2024.04.26 01:13:02 INFO  time: compiled root in 0.2s
2024.04.26 01:13:17 INFO  compiling root (2 scala sources)
2024.04.26 01:13:17 INFO  time: compiled root in 0.32s
2024.04.26 01:13:24 INFO  compiling root (2 scala sources)
2024.04.26 01:13:24 INFO  time: compiled root in 0.32s
2024.04.26 01:13:34 INFO  compiling root (2 scala sources)
2024.04.26 01:13:34 INFO  time: compiled root in 0.33s
2024.04.26 01:13:35 INFO  compiling root (2 scala sources)
2024.04.26 01:13:35 INFO  time: compiled root in 0.27s
2024.04.26 01:13:35 INFO  compiling root (2 scala sources)
2024.04.26 01:13:35 INFO  time: compiled root in 0.34s
2024.04.26 01:13:44 INFO  compiling root (2 scala sources)
2024.04.26 01:13:44 INFO  time: compiled root in 0.3s
2024.04.26 01:13:52 INFO  compiling root (2 scala sources)
2024.04.26 01:13:52 INFO  time: compiled root in 0.16s
2024.04.26 01:14:04 INFO  compiling root (2 scala sources)
2024.04.26 01:14:04 INFO  time: compiled root in 0.13s
2024.04.26 01:14:32 INFO  compiling root (2 scala sources)
2024.04.26 01:14:32 INFO  time: compiled root in 0.16s
2024.04.26 01:16:44 INFO  compiling root (2 scala sources)
2024.04.26 01:16:44 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:16:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n/** `Int`, a 32-bit signed integer (equivalent to Java\u0027s `int` primitive type) is a\n *  subtype of [[scala.AnyVal]]. Instances of `Int` are not\n *  represented by an object in the underlying runtime system.\n *\n *  There is an implicit conversion from [[scala.Int]] \u003d\u003e [[scala.runtime.RichInt]]\n *  which provides useful non-primitive operations.\n */\nfinal abstract class Int private extends AnyVal {\n  def toByte: Byte\n  def toShort: Short\n  def toChar: Char\n  def toInt: Int\n  def toLong: Long\n  def toFloat: Float\n  def toDouble: Double\n\n  /**\n * Returns the bitwise negation of this value.\n * @example {{{\n * ~5 \u003d\u003d -6\n * // in binary: ~00000101 \u003d\u003d\n * //             11111010\n * }}}\n */\n  def unary_~ : Int\n  /** Returns this value, unmodified. */\n  def unary_+ : Int\n  /** Returns the negation of this value. */\n  def unary_- : Int\n\n  @deprecated(\"Adding a number and a String is deprecated. Use the string interpolation `s\\\"$num$str\\\"`\", \"2.13.0\")\n  def +(x: String): String\n\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  def \u003c\u003c(x: Int): Int\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003c\u003c(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e\u003e(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e(x: Long): Int\n\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Short): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Char): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Int): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Long): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Float): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Short): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Char): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Int): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Long): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Float): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Byte): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Short): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Char): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Int): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Long): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Float): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Double): Boolean\n\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Short): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Char): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Int): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Long): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Float): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Byte): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Short): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Char): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Int): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Long): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Float): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Short): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Char): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Int): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Long): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Float): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Double): Boolean\n\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Byte): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Short): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Char): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Int): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Long): Long\n\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Byte): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Short): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Char): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Int): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Long): Long\n\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Byte): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Short): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Char): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Int): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Long): Long\n\n  /** Returns the sum of this value and `x`. */\n  def +(x: Byte): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Short): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Char): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Int): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Long): Long\n  /** Returns the sum of this value and `x`. */\n  def +(x: Float): Float\n  /** Returns the sum of this value and `x`. */\n  def +(x: Double): Double\n\n  /** Returns the difference of this value and `x`. */\n  def -(x: Byte): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Short): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Char): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Int): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Long): Long\n  /** Returns the difference of this value and `x`. */\n  def -(x: Float): Float\n  /** Returns the difference of this value and `x`. */\n  def -(x: Double): Double\n\n  /** Returns the product of this value and `x`. */\n  def *(x: Byte): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Short): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Char): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Int): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Long): Long\n  /** Returns the product of this value and `x`. */\n  def *(x: Float): Float\n  /** Returns the product of this value and `x`. */\n  def *(x: Double): Double\n\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Byte): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Short): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Char): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Int): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Long): Long\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Float): Float\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Double): Double\n\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Byte): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Short): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Char): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Int): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Long): Long\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Float): Float\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Double): Double\n\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Int] \u003d ???\n}\n\nobject Int extends AnyValCompanion {\n  /** The smallest value representable as an Int. */\n  final val MinValue \u003d java.lang.Integer.MIN_VALUE\n\n  /** The largest value representable as an Int. */\n  final val MaxValue \u003d java.lang.Integer.MAX_VALUE\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.boxToInteger`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the Int to be boxed\n   *  @return     a java.lang.Integer offering `x` as its underlying value.\n   */\n  def box(x: Int): java.lang.Integer \u003d ???\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a java.lang.Integer.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.unboxToInt`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the java.lang.Integer to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a java.lang.Integer\n   *  @return     the Int resulting from calling intValue() on `x`\n   */\n  def unbox(x: java.lang.Object): Int \u003d ???\n\n  /** The String representation of the scala.Int companion object. */\n  override def toString \u003d \"object scala.Int\"\n  /** Language mandated coercions from Int to \"wider\" types. */\n  import scala.language.implicitConversions\n  @deprecated(\"Implicit conversion from Int to Float is dangerous because it loses precision. Write `.toFloat` instead.\", \"2.13.1\")\n  implicit def int2float(x: Int): Float \u003d x.toFloat\n  implicit def int2long(x: Int): Long \u003d x.toLong\n  implicit def int2double(x: Int): Double \u003d x.toDouble\n}\n\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 1:16:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:16:44 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:16:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n/** `Int`, a 32-bit signed integer (equivalent to Java\u0027s `int` primitive type) is a\n *  subtype of [[scala.AnyVal]]. Instances of `Int` are not\n *  represented by an object in the underlying runtime system.\n *\n *  There is an implicit conversion from [[scala.Int]] \u003d\u003e [[scala.runtime.RichInt]]\n *  which provides useful non-primitive operations.\n */\nfinal abstract class Int private extends AnyVal {\n  def toByte: Byte\n  def toShort: Short\n  def toChar: Char\n  def toInt: Int\n  def toLong: Long\n  def toFloat: Float\n  def toDouble: Double\n\n  /**\n * Returns the bitwise negation of this value.\n * @example {{{\n * ~5 \u003d\u003d -6\n * // in binary: ~00000101 \u003d\u003d\n * //             11111010\n * }}}\n */\n  def unary_~ : Int\n  /** Returns this value, unmodified. */\n  def unary_+ : Int\n  /** Returns the negation of this value. */\n  def unary_- : Int\n\n  @deprecated(\"Adding a number and a String is deprecated. Use the string interpolation `s\\\"$num$str\\\"`\", \"2.13.0\")\n  def +(x: String): String\n\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  def \u003c\u003c(x: Int): Int\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003c\u003c(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e\u003e(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e(x: Long): Int\n\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Short): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Char): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Int): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Long): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Float): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Short): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Char): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Int): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Long): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Float): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Byte): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Short): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Char): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Int): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Long): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Float): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Double): Boolean\n\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Short): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Char): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Int): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Long): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Float): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Byte): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Short): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Char): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Int): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Long): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Float): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Short): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Char): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Int): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Long): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Float): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Double): Boolean\n\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Byte): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Short): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Char): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Int): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Long): Long\n\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Byte): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Short): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Char): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Int): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Long): Long\n\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Byte): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Short): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Char): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Int): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Long): Long\n\n  /** Returns the sum of this value and `x`. */\n  def +(x: Byte): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Short): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Char): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Int): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Long): Long\n  /** Returns the sum of this value and `x`. */\n  def +(x: Float): Float\n  /** Returns the sum of this value and `x`. */\n  def +(x: Double): Double\n\n  /** Returns the difference of this value and `x`. */\n  def -(x: Byte): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Short): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Char): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Int): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Long): Long\n  /** Returns the difference of this value and `x`. */\n  def -(x: Float): Float\n  /** Returns the difference of this value and `x`. */\n  def -(x: Double): Double\n\n  /** Returns the product of this value and `x`. */\n  def *(x: Byte): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Short): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Char): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Int): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Long): Long\n  /** Returns the product of this value and `x`. */\n  def *(x: Float): Float\n  /** Returns the product of this value and `x`. */\n  def *(x: Double): Double\n\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Byte): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Short): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Char): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Int): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Long): Long\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Float): Float\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Double): Double\n\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Byte): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Short): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Char): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Int): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Long): Long\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Float): Float\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Double): Double\n\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Int] \u003d ???\n}\n\nobject Int extends AnyValCompanion {\n  /** The smallest value representable as an Int. */\n  final val MinValue \u003d java.lang.Integer.MIN_VALUE\n\n  /** The largest value representable as an Int. */\n  final val MaxValue \u003d java.lang.Integer.MAX_VALUE\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.boxToInteger`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the Int to be boxed\n   *  @return     a java.lang.Integer offering `x` as its underlying value.\n   */\n  def box(x: Int): java.lang.Integer \u003d ???\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a java.lang.Integer.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.unboxToInt`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the java.lang.Integer to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a java.lang.Integer\n   *  @return     the Int resulting from calling intValue() on `x`\n   */\n  def unbox(x: java.lang.Object): Int \u003d ???\n\n  /** The String representation of the scala.Int companion object. */\n  override def toString \u003d \"object scala.Int\"\n  /** Language mandated coercions from Int to \"wider\" types. */\n  import scala.language.implicitConversions\n  @deprecated(\"Implicit conversion from Int to Float is dangerous because it loses precision. Write `.toFloat` instead.\", \"2.13.1\")\n  implicit def int2float(x: Int): Float \u003d x.toFloat\n  implicit def int2long(x: Int): Long \u003d x.toLong\n  implicit def int2double(x: Int): Double \u003d x.toDouble\n}\n\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:16:44 INFO  time: compiled root in 0.27s
2024.04.26 01:17:54 INFO  compiling root (2 scala sources)
2024.04.26 01:17:54 INFO  time: compiled root in 0.18s
2024.04.26 01:18:44 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:18:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/collection/mutable/StringBuilder.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala.collection.mutable\n\nimport scala.collection.{IterableFactoryDefaults, IterableOnce}\nimport scala.collection.immutable.WrappedString\n\nimport scala.Predef.{ // unimport char-related implicit conversions to avoid triggering them accidentally\n  genericArrayOps \u003d\u003e _,\n  charArrayOps \u003d\u003e _,\n  genericWrapArray \u003d\u003e _,\n  wrapCharArray \u003d\u003e _,\n  wrapString \u003d\u003e _,\n //_\n}\n\n/** A builder of `String` which is also a mutable sequence of characters.\n *\n *  This class provides an API mostly compatible with `java.lang.StringBuilder`,\n *  except where there are conflicts with the Scala collections API, such as the `reverse` method:\n *  [[reverse]] produces a new `StringBuilder`, and [[reverseInPlace]] mutates this builder.\n *\n *  Mutating operations return either `this.type`, i.e., the current builder, or `Unit`.\n *\n *  Other methods extract data or information from the builder without mutating it.\n *\n *  The distinction is also reflected in naming conventions used by collections,\n *  such as `append`, which mutates, and `appended`, which does not, or `reverse`,\n *  which does not mutate, and `reverseInPlace`, which does.\n *\n *  The `String` result may be obtained using either `result()` or `toString`.\n *\n *  $multipleResults\n *\n *  @see [[https://docs.scala-lang.org/overviews/collections-2.13/concrete-mutable-collection-classes.html#stringbuilders \"Scala\u0027s Collection Library overview\"]]\n *  section on `StringBuilders` for more information.\n *\n *  @define Coll `mutable.IndexedSeq`\n *  @define coll string builder\n */\n@SerialVersionUID(3L)\nfinal class StringBuilder(val underlying: java.lang.StringBuilder) extends AbstractSeq[Char]\n  with ReusableBuilder[Char, String]\n  with IndexedSeq[Char]\n  with IndexedSeqOps[Char, IndexedSeq, StringBuilder]\n  with IterableFactoryDefaults[Char, IndexedSeq]\n  with java.lang.CharSequence\n  with Serializable {\n\n  def this() \u003d this(new java.lang.StringBuilder)\n\n  /** Constructs a string builder with no characters in it and an\n    *  initial capacity specified by the `capacity` argument.\n    *\n    *  @param  capacity  the initial capacity.\n    *  @throws java.lang.NegativeArraySizeException  if capacity \u003c 0.\n    */\n  def this(capacity: Int) \u003d this(new java.lang.StringBuilder(capacity))\n\n  /** Constructs a string builder with initial characters\n    *  equal to characters of `str`.\n    */\n  def this(str: String) \u003d this(new java.lang.StringBuilder(str))\n\n  /** Constructs a string builder initialized with string value `initValue`\n    *  and with additional character capacity `initCapacity`.\n    */\n  def this(initCapacity: Int, initValue: String) \u003d\n    this(new java.lang.StringBuilder(initValue.length + initCapacity) append initValue)\n\n  // Methods required to make this an IndexedSeq:\n  def apply(i: Int): Char \u003d underlying.charAt(i)\n\n  override protected def fromSpecific(coll: scala.collection.IterableOnce[Char]): StringBuilder \u003d\n    new StringBuilder() appendAll coll\n\n  override protected def newSpecificBuilder: Builder[Char, StringBuilder] \u003d\n    new GrowableBuilder(new StringBuilder())\n\n  override def empty: StringBuilder \u003d new StringBuilder()\n\n  @inline def length: Int \u003d underlying.length\n\n  def length_\u003d(n: Int): Unit \u003d underlying.setLength(n)\n\n  override def knownSize: Int \u003d super[IndexedSeqOps].knownSize\n\n  def addOne(x: Char): this.type \u003d { underlying.append(x); this }\n\n  def clear(): Unit \u003d underlying.setLength(0)\n\n  /** Overloaded version of `addAll` that takes a string */\n  def addAll(s: String): this.type \u003d { underlying.append(s); this }\n\n  /** Alias for `addAll` */\n  def ++\u003d (s: String): this.type \u003d addAll(s)\n\n  def result() \u003d underlying.toString\n\n  override def toString: String \u003d result()\n\n  override def toArray[B \u003e: Char](implicit ct: scala.reflect.ClassTag[B]) \u003d\n    ct.runtimeClass match {\n      case java.lang.Character.TYPE \u003d\u003e toCharArray.asInstanceOf[Array[B]]\n      case _ \u003d\u003e super.toArray\n    }\n\n  /** Returns the contents of this StringBuilder as an `Array[Char]`.\n   *\n   *  @return  An array with the characters from this builder.\n   */\n  def toCharArray: Array[Char] \u003d {\n    val len \u003d underlying.length\n    val arr \u003d new Array[Char](len)\n    underlying.getChars(0, len, arr, 0)\n    arr\n  }\n\n  // append* methods delegate to the underlying java.lang.StringBuilder:\n\n  def appendAll(xs: String): this.type \u003d {\n    underlying append xs\n    this\n  }\n\n  /** Appends the string representation of the given argument,\n    *  which is converted to a String with `String.valueOf`.\n    *\n    *  @param  x   an `Any` object.\n    *  @return     this StringBuilder.\n    */\n  def append(x: Any): this.type \u003d {\n    underlying append String.valueOf(x)\n    this\n  }\n\n  /** Appends the given String to this sequence.\n    *\n    *  @param  s   a String.\n    *  @return     this StringBuilder.\n    */\n  def append(s: String): this.type \u003d {\n    underlying append s\n    this\n  }\n\n  /** Appends the given CharSequence to this sequence.\n    *\n    *  @param  cs   a CharSequence.\n    *  @return     this StringBuilder.\n    */\n  def append(cs: java.lang.CharSequence): this.type \u003d {\n    underlying.append(cs match {\n      // Both cases call into append(\u003cCharSequence\u003e), but java SB\n      // looks up type at runtime and has fast path for SB.\n      case s: StringBuilder \u003d\u003e s.underlying\n      case _                \u003d\u003e cs\n    })\n    this\n  }\n\n  /** Appends the specified string builder to this sequence.\n    *\n    *  @param s\n    *  @return\n    */\n  def append(s: StringBuilder): this.type \u003d {\n    underlying append s.underlying\n    this\n  }\n\n  /** Appends all the Chars in the given IterableOnce[Char] to this sequence.\n    *\n    *  @param  xs  the characters to be appended.\n    *  @return     this StringBuilder.\n    */\n  def appendAll(xs: IterableOnce[Char]): this.type \u003d {\n    xs match {\n      case x: WrappedString \u003d\u003e underlying append x.unwrap\n      case x: ArraySeq.ofChar \u003d\u003e underlying append x.array\n      case x: StringBuilder \u003d\u003e underlying append x.underlying\n      case _ \u003d\u003e\n        val ks \u003d xs.knownSize\n        if (ks !\u003d 0) {\n          val b \u003d underlying\n          if (ks \u003e 0) b.ensureCapacity(b.length + ks)\n          val it \u003d xs.iterator\n          while (it.hasNext) { b append it.next() }\n        }\n    }\n    this\n  }\n\n  /** Appends all the Chars in the given Array[Char] to this sequence.\n    *\n    *  @param  xs  the characters to be appended.\n    *  @return     a reference to this object.\n    */\n  def appendAll(xs: Array[Char]): this.type \u003d {\n    underlying append xs\n    this\n  }\n\n  /** Appends a portion of the given Array[Char] to this sequence.\n    *\n    *  @param  xs      the Array containing Chars to be appended.\n    *  @param  offset  the index of the first Char to append.\n    *  @param  len     the numbers of Chars to append.\n    *  @return         this StringBuilder.\n    */\n  def appendAll(xs: Array[Char], offset: Int, len: Int): this.type \u003d {\n    underlying.append(xs, offset, len)\n    this\n  }\n\n  /** Append the String representation of the given primitive type\n    *  to this sequence.  The argument is converted to a String with\n    *  String.valueOf.\n    *\n    *  @param   x  a primitive value\n    *  @return     This StringBuilder.\n    */\n  def append(x: Boolean): this.type \u003d { underlying append x ; this }\n  def append(x: Byte): this.type \u003d append(x.toInt)\n  def append(x: Short): this.type \u003d append(x.toInt)\n  def append(x: Int): this.type \u003d { underlying append x ; this }\n  def append(x: Long): this.type \u003d { underlying append x ; this }\n  def append(x: Float): this.type \u003d { underlying append x ; this }\n  def append(x: Double): this.type \u003d { underlying append x ; this }\n  def append(x: Char): this.type \u003d { underlying append x ; this }\n\n  /** Remove a subsequence of Chars from this sequence, starting at the\n    *  given start index (inclusive) and extending to the end index (exclusive)\n    *  or to the end of the String, whichever comes first.\n    *\n    *  @param  start  The beginning index, inclusive.\n    *  @param  end    The ending index, exclusive.\n    *  @return        This StringBuilder.\n    *  @throws StringIndexOutOfBoundsException   if start \u003c 0 || start \u003e end\n    */\n  def delete(start: Int, end: Int): this.type \u003d {\n    underlying.delete(start, end)\n    this\n  }\n\n  /** Replaces a subsequence of Chars with the given String.  The semantics\n    *  are as in delete, with the String argument then inserted at index \u0027start\u0027.\n    *\n    *  @param  start  The beginning index, inclusive.\n    *  @param  end    The ending index, exclusive.\n    *  @param  str    The String to be inserted at the start index.\n    *  @return        This StringBuilder.\n    *  @throws StringIndexOutOfBoundsException if start \u003c 0, start \u003e length, or start \u003e end\n    */\n  def replace(start: Int, end: Int, str: String): this.type \u003d {\n    underlying.replace(start, end, str)\n    this\n  }\n\n  /** Inserts a subarray of the given Array[Char] at the given index\n    *  of this sequence.\n    *\n    * @param  index   index at which to insert the subarray.\n    * @param  str     the Array from which Chars will be taken.\n    * @param  offset  the index of the first Char to insert.\n    * @param  len     the number of Chars from \u0027str\u0027 to insert.\n    * @return         This StringBuilder.\n    *\n    * @throws StringIndexOutOfBoundsException  if index \u003c 0, index \u003e length,\n    *         offset \u003c 0, len \u003c 0, or (offset + len) \u003e str.length.\n    */\n  def insertAll(index: Int, str: Array[Char], offset: Int, len: Int): this.type \u003d {\n    underlying.insert(index, str, offset, len)\n    this\n  }\n\n  /** Inserts the String representation (via String.valueOf) of the given\n    *  argument into this sequence at the given index.\n    *\n    *  @param  index   the index at which to insert.\n    *  @param  x       a value.\n    *  @return         this StringBuilder.\n    *  @throws StringIndexOutOfBoundsException  if the index is out of bounds.\n    */\n  def insert(index: Int, x: Any): this.type \u003d insert(index, String.valueOf(x))\n\n  /** Inserts the String into this character sequence.\n    *\n    *  @param  index the index at which to insert.\n    *  @param  x     a String.\n    *  @return       this StringBuilder.\n    *  @throws StringIndexOutOfBoundsException  if the index is out of bounds.\n    */\n  def insert(index: Int, x: String): this.type \u003d {\n    underlying.insert(index, x)\n    this\n  }\n\n  /** Inserts the given Seq[Char] into this sequence at the given index.\n    *\n    *  @param  index the index at which to insert.\n    *  @param  xs    the Seq[Char].\n    *  @return       this StringBuilder.\n    *  @throws StringIndexOutOfBoundsException  if the index is out of bounds.\n    */\n  def insertAll(index: Int, xs: IterableOnce[Char]): this.type \u003d\n    insertAll(index, (ArrayBuilder.make[Char] ++\u003d xs).result())\n\n  /** Inserts the given Array[Char] into this sequence at the given index.\n    *\n    *  @param  index the index at which to insert.\n    *  @param  xs    the Array[Char].\n    *  @return       this StringBuilder.\n    *  @throws StringIndexOutOfBoundsException  if the index is out of bounds.\n    */\n  def insertAll(index: Int, xs: Array[Char]): this.type \u003d {\n    underlying.insert(index, xs)\n    this\n  }\n\n  /** Calls String.valueOf on the given primitive value, and inserts the\n    *  String at the given index.\n    *\n    *  @param  index the offset position.\n    *  @param  x     a primitive value.\n    *  @return       this StringBuilder.\n    */\n  def insert(index: Int, x: Boolean): this.type \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Byte): this.type    \u003d insert(index, x.toInt)\n  def insert(index: Int, x: Short): this.type   \u003d insert(index, x.toInt)\n  def insert(index: Int, x: Int): this.type     \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Long): this.type    \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Float): this.type   \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Double): this.type  \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Char): this.type    \u003d insert(index, String.valueOf(x))\n\n  /** Sets the length of the character sequence.  If the current sequence\n    *  is shorter than the given length, it is padded with nulls; if it is\n    *  longer, it is truncated.\n    *\n    *  @param  len  the new length\n    *  @throws IndexOutOfBoundsException if the argument is negative.\n    */\n  def setLength(len: Int): Unit \u003d underlying.setLength(len)\n\n  def update(idx: Int, elem: Char): Unit \u003d underlying.setCharAt(idx, elem)\n\n\n  /** Like reverse, but destructively updates the target StringBuilder.\n   *\n   *  @return   the reversed StringBuilder (same as the target StringBuilder)\n   */\n  @deprecated(\"Use reverseInPlace instead\", \"2.13.0\")\n  final def reverseContents(): this.type \u003d reverseInPlace()\n\n  /** Like reverse, but destructively updates the target StringBuilder.\n   *\n   *  @return   the reversed StringBuilder (same as the target StringBuilder)\n   */\n  def reverseInPlace(): this.type \u003d {\n    underlying.reverse()\n    this\n  }\n\n\n  /** Returns the current capacity, which is the size of the underlying array.\n   *  A new array will be allocated if the current capacity is exceeded.\n   *\n   *  @return  the capacity\n   */\n  def capacity: Int \u003d underlying.capacity\n\n  /** Ensure that the capacity is at least the given argument.\n   *  If the argument is greater than the current capacity, new\n   *  storage will be allocated with size equal to the given\n   *  argument or to `(2 * capacity + 2)`, whichever is larger.\n   *\n   *  @param newCapacity    the minimum desired capacity.\n   */\n  def ensureCapacity(newCapacity: Int): Unit \u003d { underlying.ensureCapacity(newCapacity) }\n\n  /** Returns the Char at the specified index, counting from 0 as in Arrays.\n   *\n   *  @param  index   the index to look up\n   *  @return         the Char at the given index.\n   *  @throws IndexOutOfBoundsException  if the index is out of bounds.\n   */\n  def charAt(index: Int): Char \u003d underlying.charAt(index)\n\n  /** Removes the Char at the specified index.  The sequence is\n   *  shortened by one.\n   *\n   *  @param  index  The index to remove.\n   *  @return        This StringBuilder.\n   *  @throws IndexOutOfBoundsException  if the index is out of bounds.\n   */\n  def deleteCharAt(index: Int): this.type \u003d {\n    underlying.deleteCharAt(index)\n    this\n  }\n\n  /** Update the sequence at the given index to hold the specified Char.\n   *\n   *  @param  index   the index to modify.\n   *  @param  ch      the new Char.\n   *  @throws IndexOutOfBoundsException  if the index is out of bounds.\n   */\n  def setCharAt(index: Int, ch: Char): this.type \u003d {\n    underlying.setCharAt(index, ch)\n    this\n  }\n\n  /** Returns a new String made up of a subsequence of this sequence,\n   *  beginning at the given index and extending to the end of the sequence.\n   *\n   *  target.substring(start)  is equivalent to  target.drop(start)\n   *\n   *  @param  start  The starting index, inclusive.\n   *  @return        The new String.\n   *  @throws IndexOutOfBoundsException  if the index is out of bounds.\n   */\n  def substring(start: Int): String \u003d underlying.substring(start, length)\n\n  /** Returns a new String made up of a subsequence of this sequence,\n   *  beginning at the start index (inclusive) and extending to the\n   *  end index (exclusive).\n   *\n   *  target.substring(start, end)  is equivalent to  target.slice(start, end).mkString\n   *\n   *  @param  start  The beginning index, inclusive.\n   *  @param  end    The ending index, exclusive.\n   *  @return The new String.\n   *  @throws StringIndexOutOfBoundsException If either index is out of bounds,\n   *          or if start \u003e end.\n   */\n  def substring(start: Int, end: Int): String \u003d underlying.substring(start, end)\n\n  /** For implementing CharSequence.\n   */\n  def subSequence(start: Int, end: Int): java.lang.CharSequence \u003d\n    underlying.substring(start, end)\n\n  /** Finds the index of the first occurrence of the specified substring.\n   *\n   *  @param    str       the target string to search for\n   *  @return             the first applicable index where target occurs, or -1 if not found.\n   */\n  def indexOf(str: String): Int \u003d underlying.indexOf(str)\n\n  /** Finds the index of the first occurrence of the specified substring.\n   *\n   *  @param    str       the target string to search for\n   *  @param    fromIndex the smallest index in the source string to consider\n   *  @return             the first applicable index where target occurs, or -1 if not found.\n   */\n  def indexOf(str: String, fromIndex: Int): Int \u003d underlying.indexOf(str, fromIndex)\n\n  /** Finds the index of the last occurrence of the specified substring.\n   *\n   *  @param    str       the target string to search for\n   *  @return             the last applicable index where target occurs, or -1 if not found.\n   */\n  def lastIndexOf(str: String): Int \u003d underlying.lastIndexOf(str)\n\n  /** Finds the index of the last occurrence of the specified substring.\n   *\n   *  @param    str       the target string to search for\n   *  @param    fromIndex the smallest index in the source string to consider\n   *  @return             the last applicable index where target occurs, or -1 if not found.\n   */\n  def lastIndexOf(str: String, fromIndex: Int): Int \u003d underlying.lastIndexOf(str, fromIndex)\n\n  /** Tests whether this builder is empty.\n   *\n   *  This method is required for JDK15+ compatibility\n   *\n   *  @return  `true` if this builder contains nothing, `false` otherwise.\n   */\n  override def isEmpty: Boolean \u003d underlying.length() \u003d\u003d 0\n}\n\nobject StringBuilder {\n  @deprecated(\"Use `new StringBuilder()` instead of `StringBuilder.newBuilder`\", \"2.13.0\")\n  def newBuilder \u003d new StringBuilder\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 1:18:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/collection/mutable/StringBuilder.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:18:44 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:18:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/collection/mutable/StringBuilder.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala.collection.mutable\n\nimport scala.collection.{IterableFactoryDefaults, IterableOnce}\nimport scala.collection.immutable.WrappedString\n\nimport scala.Predef.{ // unimport char-related implicit conversions to avoid triggering them accidentally\n  genericArrayOps \u003d\u003e _,\n  charArrayOps \u003d\u003e _,\n  genericWrapArray \u003d\u003e _,\n  wrapCharArray \u003d\u003e _,\n  wrapString \u003d\u003e _,\n //_\n}\n\n/** A builder of `String` which is also a mutable sequence of characters.\n *\n *  This class provides an API mostly compatible with `java.lang.StringBuilder`,\n *  except where there are conflicts with the Scala collections API, such as the `reverse` method:\n *  [[reverse]] produces a new `StringBuilder`, and [[reverseInPlace]] mutates this builder.\n *\n *  Mutating operations return either `this.type`, i.e., the current builder, or `Unit`.\n *\n *  Other methods extract data or information from the builder without mutating it.\n *\n *  The distinction is also reflected in naming conventions used by collections,\n *  such as `append`, which mutates, and `appended`, which does not, or `reverse`,\n *  which does not mutate, and `reverseInPlace`, which does.\n *\n *  The `String` result may be obtained using either `result()` or `toString`.\n *\n *  $multipleResults\n *\n *  @see [[https://docs.scala-lang.org/overviews/collections-2.13/concrete-mutable-collection-classes.html#stringbuilders \"Scala\u0027s Collection Library overview\"]]\n *  section on `StringBuilders` for more information.\n *\n *  @define Coll `mutable.IndexedSeq`\n *  @define coll string builder\n */\n@SerialVersionUID(3L)\nfinal class StringBuilder(val underlying: java.lang.StringBuilder) extends AbstractSeq[Char]\n  with ReusableBuilder[Char, String]\n  with IndexedSeq[Char]\n  with IndexedSeqOps[Char, IndexedSeq, StringBuilder]\n  with IterableFactoryDefaults[Char, IndexedSeq]\n  with java.lang.CharSequence\n  with Serializable {\n\n  def this() \u003d this(new java.lang.StringBuilder)\n\n  /** Constructs a string builder with no characters in it and an\n    *  initial capacity specified by the `capacity` argument.\n    *\n    *  @param  capacity  the initial capacity.\n    *  @throws java.lang.NegativeArraySizeException  if capacity \u003c 0.\n    */\n  def this(capacity: Int) \u003d this(new java.lang.StringBuilder(capacity))\n\n  /** Constructs a string builder with initial characters\n    *  equal to characters of `str`.\n    */\n  def this(str: String) \u003d this(new java.lang.StringBuilder(str))\n\n  /** Constructs a string builder initialized with string value `initValue`\n    *  and with additional character capacity `initCapacity`.\n    */\n  def this(initCapacity: Int, initValue: String) \u003d\n    this(new java.lang.StringBuilder(initValue.length + initCapacity) append initValue)\n\n  // Methods required to make this an IndexedSeq:\n  def apply(i: Int): Char \u003d underlying.charAt(i)\n\n  override protected def fromSpecific(coll: scala.collection.IterableOnce[Char]): StringBuilder \u003d\n    new StringBuilder() appendAll coll\n\n  override protected def newSpecificBuilder: Builder[Char, StringBuilder] \u003d\n    new GrowableBuilder(new StringBuilder())\n\n  override def empty: StringBuilder \u003d new StringBuilder()\n\n  @inline def length: Int \u003d underlying.length\n\n  def length_\u003d(n: Int): Unit \u003d underlying.setLength(n)\n\n  override def knownSize: Int \u003d super[IndexedSeqOps].knownSize\n\n  def addOne(x: Char): this.type \u003d { underlying.append(x); this }\n\n  def clear(): Unit \u003d underlying.setLength(0)\n\n  /** Overloaded version of `addAll` that takes a string */\n  def addAll(s: String): this.type \u003d { underlying.append(s); this }\n\n  /** Alias for `addAll` */\n  def ++\u003d (s: String): this.type \u003d addAll(s)\n\n  def result() \u003d underlying.toString\n\n  override def toString: String \u003d result()\n\n  override def toArray[B \u003e: Char](implicit ct: scala.reflect.ClassTag[B]) \u003d\n    ct.runtimeClass match {\n      case java.lang.Character.TYPE \u003d\u003e toCharArray.asInstanceOf[Array[B]]\n      case _ \u003d\u003e super.toArray\n    }\n\n  /** Returns the contents of this StringBuilder as an `Array[Char]`.\n   *\n   *  @return  An array with the characters from this builder.\n   */\n  def toCharArray: Array[Char] \u003d {\n    val len \u003d underlying.length\n    val arr \u003d new Array[Char](len)\n    underlying.getChars(0, len, arr, 0)\n    arr\n  }\n\n  // append* methods delegate to the underlying java.lang.StringBuilder:\n\n  def appendAll(xs: String): this.type \u003d {\n    underlying append xs\n    this\n  }\n\n  /** Appends the string representation of the given argument,\n    *  which is converted to a String with `String.valueOf`.\n    *\n    *  @param  x   an `Any` object.\n    *  @return     this StringBuilder.\n    */\n  def append(x: Any): this.type \u003d {\n    underlying append String.valueOf(x)\n    this\n  }\n\n  /** Appends the given String to this sequence.\n    *\n    *  @param  s   a String.\n    *  @return     this StringBuilder.\n    */\n  def append(s: String): this.type \u003d {\n    underlying append s\n    this\n  }\n\n  /** Appends the given CharSequence to this sequence.\n    *\n    *  @param  cs   a CharSequence.\n    *  @return     this StringBuilder.\n    */\n  def append(cs: java.lang.CharSequence): this.type \u003d {\n    underlying.append(cs match {\n      // Both cases call into append(\u003cCharSequence\u003e), but java SB\n      // looks up type at runtime and has fast path for SB.\n      case s: StringBuilder \u003d\u003e s.underlying\n      case _                \u003d\u003e cs\n    })\n    this\n  }\n\n  /** Appends the specified string builder to this sequence.\n    *\n    *  @param s\n    *  @return\n    */\n  def append(s: StringBuilder): this.type \u003d {\n    underlying append s.underlying\n    this\n  }\n\n  /** Appends all the Chars in the given IterableOnce[Char] to this sequence.\n    *\n    *  @param  xs  the characters to be appended.\n    *  @return     this StringBuilder.\n    */\n  def appendAll(xs: IterableOnce[Char]): this.type \u003d {\n    xs match {\n      case x: WrappedString \u003d\u003e underlying append x.unwrap\n      case x: ArraySeq.ofChar \u003d\u003e underlying append x.array\n      case x: StringBuilder \u003d\u003e underlying append x.underlying\n      case _ \u003d\u003e\n        val ks \u003d xs.knownSize\n        if (ks !\u003d 0) {\n          val b \u003d underlying\n          if (ks \u003e 0) b.ensureCapacity(b.length + ks)\n          val it \u003d xs.iterator\n          while (it.hasNext) { b append it.next() }\n        }\n    }\n    this\n  }\n\n  /** Appends all the Chars in the given Array[Char] to this sequence.\n    *\n    *  @param  xs  the characters to be appended.\n    *  @return     a reference to this object.\n    */\n  def appendAll(xs: Array[Char]): this.type \u003d {\n    underlying append xs\n    this\n  }\n\n  /** Appends a portion of the given Array[Char] to this sequence.\n    *\n    *  @param  xs      the Array containing Chars to be appended.\n    *  @param  offset  the index of the first Char to append.\n    *  @param  len     the numbers of Chars to append.\n    *  @return         this StringBuilder.\n    */\n  def appendAll(xs: Array[Char], offset: Int, len: Int): this.type \u003d {\n    underlying.append(xs, offset, len)\n    this\n  }\n\n  /** Append the String representation of the given primitive type\n    *  to this sequence.  The argument is converted to a String with\n    *  String.valueOf.\n    *\n    *  @param   x  a primitive value\n    *  @return     This StringBuilder.\n    */\n  def append(x: Boolean): this.type \u003d { underlying append x ; this }\n  def append(x: Byte): this.type \u003d append(x.toInt)\n  def append(x: Short): this.type \u003d append(x.toInt)\n  def append(x: Int): this.type \u003d { underlying append x ; this }\n  def append(x: Long): this.type \u003d { underlying append x ; this }\n  def append(x: Float): this.type \u003d { underlying append x ; this }\n  def append(x: Double): this.type \u003d { underlying append x ; this }\n  def append(x: Char): this.type \u003d { underlying append x ; this }\n\n  /** Remove a subsequence of Chars from this sequence, starting at the\n    *  given start index (inclusive) and extending to the end index (exclusive)\n    *  or to the end of the String, whichever comes first.\n    *\n    *  @param  start  The beginning index, inclusive.\n    *  @param  end    The ending index, exclusive.\n    *  @return        This StringBuilder.\n    *  @throws StringIndexOutOfBoundsException   if start \u003c 0 || start \u003e end\n    */\n  def delete(start: Int, end: Int): this.type \u003d {\n    underlying.delete(start, end)\n    this\n  }\n\n  /** Replaces a subsequence of Chars with the given String.  The semantics\n    *  are as in delete, with the String argument then inserted at index \u0027start\u0027.\n    *\n    *  @param  start  The beginning index, inclusive.\n    *  @param  end    The ending index, exclusive.\n    *  @param  str    The String to be inserted at the start index.\n    *  @return        This StringBuilder.\n    *  @throws StringIndexOutOfBoundsException if start \u003c 0, start \u003e length, or start \u003e end\n    */\n  def replace(start: Int, end: Int, str: String): this.type \u003d {\n    underlying.replace(start, end, str)\n    this\n  }\n\n  /** Inserts a subarray of the given Array[Char] at the given index\n    *  of this sequence.\n    *\n    * @param  index   index at which to insert the subarray.\n    * @param  str     the Array from which Chars will be taken.\n    * @param  offset  the index of the first Char to insert.\n    * @param  len     the number of Chars from \u0027str\u0027 to insert.\n    * @return         This StringBuilder.\n    *\n    * @throws StringIndexOutOfBoundsException  if index \u003c 0, index \u003e length,\n    *         offset \u003c 0, len \u003c 0, or (offset + len) \u003e str.length.\n    */\n  def insertAll(index: Int, str: Array[Char], offset: Int, len: Int): this.type \u003d {\n    underlying.insert(index, str, offset, len)\n    this\n  }\n\n  /** Inserts the String representation (via String.valueOf) of the given\n    *  argument into this sequence at the given index.\n    *\n    *  @param  index   the index at which to insert.\n    *  @param  x       a value.\n    *  @return         this StringBuilder.\n    *  @throws StringIndexOutOfBoundsException  if the index is out of bounds.\n    */\n  def insert(index: Int, x: Any): this.type \u003d insert(index, String.valueOf(x))\n\n  /** Inserts the String into this character sequence.\n    *\n    *  @param  index the index at which to insert.\n    *  @param  x     a String.\n    *  @return       this StringBuilder.\n    *  @throws StringIndexOutOfBoundsException  if the index is out of bounds.\n    */\n  def insert(index: Int, x: String): this.type \u003d {\n    underlying.insert(index, x)\n    this\n  }\n\n  /** Inserts the given Seq[Char] into this sequence at the given index.\n    *\n    *  @param  index the index at which to insert.\n    *  @param  xs    the Seq[Char].\n    *  @return       this StringBuilder.\n    *  @throws StringIndexOutOfBoundsException  if the index is out of bounds.\n    */\n  def insertAll(index: Int, xs: IterableOnce[Char]): this.type \u003d\n    insertAll(index, (ArrayBuilder.make[Char] ++\u003d xs).result())\n\n  /** Inserts the given Array[Char] into this sequence at the given index.\n    *\n    *  @param  index the index at which to insert.\n    *  @param  xs    the Array[Char].\n    *  @return       this StringBuilder.\n    *  @throws StringIndexOutOfBoundsException  if the index is out of bounds.\n    */\n  def insertAll(index: Int, xs: Array[Char]): this.type \u003d {\n    underlying.insert(index, xs)\n    this\n  }\n\n  /** Calls String.valueOf on the given primitive value, and inserts the\n    *  String at the given index.\n    *\n    *  @param  index the offset position.\n    *  @param  x     a primitive value.\n    *  @return       this StringBuilder.\n    */\n  def insert(index: Int, x: Boolean): this.type \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Byte): this.type    \u003d insert(index, x.toInt)\n  def insert(index: Int, x: Short): this.type   \u003d insert(index, x.toInt)\n  def insert(index: Int, x: Int): this.type     \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Long): this.type    \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Float): this.type   \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Double): this.type  \u003d insert(index, String.valueOf(x))\n  def insert(index: Int, x: Char): this.type    \u003d insert(index, String.valueOf(x))\n\n  /** Sets the length of the character sequence.  If the current sequence\n    *  is shorter than the given length, it is padded with nulls; if it is\n    *  longer, it is truncated.\n    *\n    *  @param  len  the new length\n    *  @throws IndexOutOfBoundsException if the argument is negative.\n    */\n  def setLength(len: Int): Unit \u003d underlying.setLength(len)\n\n  def update(idx: Int, elem: Char): Unit \u003d underlying.setCharAt(idx, elem)\n\n\n  /** Like reverse, but destructively updates the target StringBuilder.\n   *\n   *  @return   the reversed StringBuilder (same as the target StringBuilder)\n   */\n  @deprecated(\"Use reverseInPlace instead\", \"2.13.0\")\n  final def reverseContents(): this.type \u003d reverseInPlace()\n\n  /** Like reverse, but destructively updates the target StringBuilder.\n   *\n   *  @return   the reversed StringBuilder (same as the target StringBuilder)\n   */\n  def reverseInPlace(): this.type \u003d {\n    underlying.reverse()\n    this\n  }\n\n\n  /** Returns the current capacity, which is the size of the underlying array.\n   *  A new array will be allocated if the current capacity is exceeded.\n   *\n   *  @return  the capacity\n   */\n  def capacity: Int \u003d underlying.capacity\n\n  /** Ensure that the capacity is at least the given argument.\n   *  If the argument is greater than the current capacity, new\n   *  storage will be allocated with size equal to the given\n   *  argument or to `(2 * capacity + 2)`, whichever is larger.\n   *\n   *  @param newCapacity    the minimum desired capacity.\n   */\n  def ensureCapacity(newCapacity: Int): Unit \u003d { underlying.ensureCapacity(newCapacity) }\n\n  /** Returns the Char at the specified index, counting from 0 as in Arrays.\n   *\n   *  @param  index   the index to look up\n   *  @return         the Char at the given index.\n   *  @throws IndexOutOfBoundsException  if the index is out of bounds.\n   */\n  def charAt(index: Int): Char \u003d underlying.charAt(index)\n\n  /** Removes the Char at the specified index.  The sequence is\n   *  shortened by one.\n   *\n   *  @param  index  The index to remove.\n   *  @return        This StringBuilder.\n   *  @throws IndexOutOfBoundsException  if the index is out of bounds.\n   */\n  def deleteCharAt(index: Int): this.type \u003d {\n    underlying.deleteCharAt(index)\n    this\n  }\n\n  /** Update the sequence at the given index to hold the specified Char.\n   *\n   *  @param  index   the index to modify.\n   *  @param  ch      the new Char.\n   *  @throws IndexOutOfBoundsException  if the index is out of bounds.\n   */\n  def setCharAt(index: Int, ch: Char): this.type \u003d {\n    underlying.setCharAt(index, ch)\n    this\n  }\n\n  /** Returns a new String made up of a subsequence of this sequence,\n   *  beginning at the given index and extending to the end of the sequence.\n   *\n   *  target.substring(start)  is equivalent to  target.drop(start)\n   *\n   *  @param  start  The starting index, inclusive.\n   *  @return        The new String.\n   *  @throws IndexOutOfBoundsException  if the index is out of bounds.\n   */\n  def substring(start: Int): String \u003d underlying.substring(start, length)\n\n  /** Returns a new String made up of a subsequence of this sequence,\n   *  beginning at the start index (inclusive) and extending to the\n   *  end index (exclusive).\n   *\n   *  target.substring(start, end)  is equivalent to  target.slice(start, end).mkString\n   *\n   *  @param  start  The beginning index, inclusive.\n   *  @param  end    The ending index, exclusive.\n   *  @return The new String.\n   *  @throws StringIndexOutOfBoundsException If either index is out of bounds,\n   *          or if start \u003e end.\n   */\n  def substring(start: Int, end: Int): String \u003d underlying.substring(start, end)\n\n  /** For implementing CharSequence.\n   */\n  def subSequence(start: Int, end: Int): java.lang.CharSequence \u003d\n    underlying.substring(start, end)\n\n  /** Finds the index of the first occurrence of the specified substring.\n   *\n   *  @param    str       the target string to search for\n   *  @return             the first applicable index where target occurs, or -1 if not found.\n   */\n  def indexOf(str: String): Int \u003d underlying.indexOf(str)\n\n  /** Finds the index of the first occurrence of the specified substring.\n   *\n   *  @param    str       the target string to search for\n   *  @param    fromIndex the smallest index in the source string to consider\n   *  @return             the first applicable index where target occurs, or -1 if not found.\n   */\n  def indexOf(str: String, fromIndex: Int): Int \u003d underlying.indexOf(str, fromIndex)\n\n  /** Finds the index of the last occurrence of the specified substring.\n   *\n   *  @param    str       the target string to search for\n   *  @return             the last applicable index where target occurs, or -1 if not found.\n   */\n  def lastIndexOf(str: String): Int \u003d underlying.lastIndexOf(str)\n\n  /** Finds the index of the last occurrence of the specified substring.\n   *\n   *  @param    str       the target string to search for\n   *  @param    fromIndex the smallest index in the source string to consider\n   *  @return             the last applicable index where target occurs, or -1 if not found.\n   */\n  def lastIndexOf(str: String, fromIndex: Int): Int \u003d underlying.lastIndexOf(str, fromIndex)\n\n  /** Tests whether this builder is empty.\n   *\n   *  This method is required for JDK15+ compatibility\n   *\n   *  @return  `true` if this builder contains nothing, `false` otherwise.\n   */\n  override def isEmpty: Boolean \u003d underlying.length() \u003d\u003d 0\n}\n\nobject StringBuilder {\n  @deprecated(\"Use `new StringBuilder()` instead of `StringBuilder.newBuilder`\", \"2.13.0\")\n  def newBuilder \u003d new StringBuilder\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:18:45 INFO  compiling root (2 scala sources)
2024.04.26 01:18:45 INFO  time: compiled root in 0.15s
Apr. 26, 2024 1:19:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 1:19:59 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 11464
2024.04.26 01:20:01 INFO  compiling root (2 scala sources)
2024.04.26 01:20:01 INFO  time: compiled root in 0.15s
2024.04.26 01:20:41 INFO  compiling root (2 scala sources)
2024.04.26 01:20:41 INFO  time: compiled root in 0.16s
2024.04.26 01:20:53 INFO  compiling root (2 scala sources)
2024.04.26 01:20:53 INFO  time: compiled root in 0.14s
2024.04.26 01:21:35 INFO  compiling root (2 scala sources)
2024.04.26 01:21:35 INFO  time: compiled root in 0.22s
Apr. 26, 2024 1:21:44 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/collection/mutable/StringBuilder.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/mutable/StringBuilder.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:23:19 INFO  compiling root (2 scala sources)
2024.04.26 01:23:19 INFO  time: compiled root in 0.14s
2024.04.26 01:23:22 INFO  compiling root (2 scala sources)
2024.04.26 01:23:22 INFO  time: compiled root in 0.15s
2024.04.26 01:23:44 INFO  compiling root (2 scala sources)
2024.04.26 01:23:44 INFO  time: compiled root in 0.13s
2024.04.26 01:24:05 INFO  compiling root (2 scala sources)
2024.04.26 01:24:05 INFO  time: compiled root in 0.14s
2024.04.26 01:24:56 INFO  compiling root (2 scala sources)
2024.04.26 01:24:56 INFO  time: compiled root in 0.16s
2024.04.26 01:26:09 INFO  compiling root (2 scala sources)
2024.04.26 01:26:09 INFO  time: compiled root in 0.15s
2024.04.26 01:26:34 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:26:34 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Option.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nobject Option {\n\n  import scala.language.implicitConversions\n\n  /** An implicit conversion that converts an option to an iterable value */\n  implicit def option2Iterable[A](xo: Option[A]): Iterable[A] \u003d\n    if (xo.isEmpty) Iterable.empty else Iterable.single(xo.get)\n\n  /** An Option factory which creates Some(x) if the argument is not null,\n   *  and None if it is null.\n   *\n   *  @param  x the value\n   *  @return   Some(value) if value !\u003d null, None if value \u003d\u003d null\n   */\n  def apply[A](x: A): Option[A] \u003d if (x \u003d\u003d null) None else Some(x)\n\n  /** An Option factory which returns `None` in a manner consistent with\n   *  the collections hierarchy.\n   */\n  def empty[A] : Option[A] \u003d None\n\n  /** When a given condition is true, evaluates the `a` argument and returns\n   *  Some(a). When the condition is false, `a` is not evaluated and None is\n   *  returned.\n   */\n  def when[A](cond: Boolean)(a: \u003d\u003e A): Option[A] \u003d\n    if (cond) Some(a) else None\n\n  /** Unless a given condition is true, this will evaluate the `a` argument and\n   *  return Some(a). Otherwise, `a` is not evaluated and None is returned.\n   */\n  @inline def unless[A](cond: Boolean)(a: \u003d\u003e A): Option[A] \u003d\n    when(!cond)(a)\n}\n\n/** Represents optional values. Instances of `Option`\n *  are either an instance of $some or the object $none.\n *\n *  The most idiomatic way to use an $option instance is to treat it\n *  as a collection or monad and use `map`,`flatMap`, `filter`, or\n *  `foreach`:\n *\n *  {{{\n *  val name: Option[String] \u003d request getParameter \"name\"\n *  val upper \u003d name map { _.trim } filter { _.length !\u003d 0 } map { _.toUpperCase }\n *  println(upper getOrElse \"\")\n *  }}}\n *\n *  Note that this is equivalent to {{{\n *  val upper \u003d for {\n *    name \u003c- request getParameter \"name\"\n *    trimmed \u003c- Some(name.trim)\n *    upper \u003c- Some(trimmed.toUpperCase) if trimmed.length !\u003d 0\n *  } yield upper\n *  println(upper getOrElse \"\")\n *  }}}\n *\n *  Because of how for comprehension works, if $none is returned\n *  from `request.getParameter`, the entire expression results in\n *  $none\n *\n *  This allows for sophisticated chaining of $option values without\n *  having to check for the existence of a value.\n *\n * These are useful methods that exist for both $some and $none.\n *  - [[isDefined]] — True if not empty\n *  - [[isEmpty]] — True if empty\n *  - [[nonEmpty]] — True if not empty\n *  - [[orElse]] — Evaluate and return alternate optional value if empty\n *  - [[getOrElse]] — Evaluate and return alternate value if empty\n *  - [[get]] — Return value, throw exception if empty\n *  - [[fold]] —  Apply function on optional value, return default if empty\n *  - [[map]] — Apply a function on the optional value\n *  - [[flatMap]] — Same as map but function must return an optional value\n *  - [[foreach]] — Apply a procedure on option value\n *  - [[collect]] — Apply partial pattern match on optional value\n *  - [[filter]] — An optional value satisfies predicate\n *  - [[filterNot]] — An optional value doesn\u0027t satisfy predicate\n *  - [[exists]] — Apply predicate on optional value, or false if empty\n *  - [[forall]] — Apply predicate on optional value, or true if empty\n *  - [[contains]] — Checks if value equals optional value, or false if empty\n *  - [[zip]] — Combine two optional values to make a paired optional value\n *  - [[unzip]] — Split an optional pair to two optional values\n *  - [[unzip3]] — Split an optional triple to three optional values\n *  - [[toList]] — Unary list of optional value, otherwise the empty list\n *\n *  A less-idiomatic way to use $option values is via pattern matching: {{{\n *  val nameMaybe \u003d request getParameter \"name\"\n *  nameMaybe match {\n *    case Some(name) \u003d\u003e\n *      println(name.trim.toUppercase)\n *    case None \u003d\u003e\n *      println(\"No name value\")\n *  }\n *  }}}\n *\n * Interacting with code that can occasionally return null can be\n * safely wrapped in $option to become $none and $some otherwise. {{{\n * val abc \u003d new java.util.HashMap[Int, String]\n * abc.put(1, \"A\")\n * bMaybe \u003d Option(abc.get(2))\n * bMaybe match {\n *   case Some(b) \u003d\u003e\n *     println(s\"Found \\$b\")\n *   case None \u003d\u003e\n *     println(\"Not found\")\n * }\n * }}}\n *\n *  @note Many of the methods in here are duplicative with those\n *  in the Iterable hierarchy, but they are duplicated for a reason:\n *  the implicit conversion tends to leave one with an Iterable in\n *  situations where one could have retained an Option.\n *\n *  @define none `None`\n *  @define some [[scala.Some]]\n *  @define option [[scala.Option]]\n *  @define p `p`\n *  @define f `f`\n *  @define coll option\n *  @define Coll `Option`\n *  @define orderDependent\n *  @define orderDependentFold\n *  @define mayNotTerminateInf\n *  @define willNotTerminateInf\n *  @define collectExample\n *  @define undefinedorder\n */\n@SerialVersionUID(-114498752079829388L) // value computed by serialver for 2.11.2, annotation added in 2.11.4\nsealed abstract class Option[+A] extends IterableOnce[A] with Product with Serializable {\n  self \u003d\u003e\n\n  /** Returns true if the option is $none, false otherwise.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(_) \u003d\u003e false\n   *   case None    \u003d\u003e true\n   * }\n   * }}}\n   */\n  final def isEmpty: Boolean \u003d this eq None\n\n  /** Returns true if the option is an instance of $some, false otherwise.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(_) \u003d\u003e true\n   *   case None    \u003d\u003e false\n   * }\n   * }}}\n   */\n  final def isDefined: Boolean \u003d !isEmpty\n\n  override final def knownSize: Int \u003d if (isEmpty) 0 else 1\n\n  /** Returns the option\u0027s value.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e x\n   *   case None    \u003d\u003e throw new Exception\n   * }\n   * }}}\n   *  @note The option must be nonempty.\n   *  @throws NoSuchElementException if the option is empty.\n   */\n  def get: A\n\n  /** Returns the option\u0027s value if the option is nonempty, otherwise\n   * return the result of evaluating `default`.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e x\n   *   case None    \u003d\u003e default\n   * }\n   * }}}\n   *\n   *  @param default  the default expression.\n   */\n  @inline final def getOrElse[B \u003e: A](default: \u003d\u003e B): B \u003d\n    if (isEmpty) default else this.get\n\n  /** Returns the option\u0027s value if it is nonempty,\n   * or `null` if it is empty.\n   *\n   * Although the use of null is discouraged, code written to use\n   * $option must often interface with code that expects and returns nulls.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e x\n   *   case None    \u003d\u003e null\n   * }\n   * }}}\n   * @example {{{\n   * val initialText: Option[String] \u003d getInitialText\n   * val textField \u003d new JComponent(initialText.orNull,20)\n   * }}}\n   */\n  @inline final def orNull[A1 \u003e: A](implicit ev: Null \u003c:\u003c A1): A1 \u003d this getOrElse ev(null)\n\n  /** Returns a $some containing the result of applying $f to this $option\u0027s\n   * value if this $option is nonempty.\n   * Otherwise return $none.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e Some(f(x))\n   *   case None    \u003d\u003e None\n   * }\n   * }}}\n   *  @note This is similar to `flatMap` except here,\n   *  $f does not need to wrap its result in an $option.\n   *\n   *  @param  f   the function to apply\n   *  @see flatMap\n   *  @see foreach\n   */\n  @inline final def map[B](f: A \u003d\u003e B): Option[B] \u003d\n    if (isEmpty) None else Some(f(this.get))\n\n  /** Returns the result of applying $f to this $option\u0027s\n   *  value if the $option is nonempty.  Otherwise, evaluates\n   *  expression `ifEmpty`.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e f(x)\n   *   case None    \u003d\u003e ifEmpty\n   * }\n   * }}}\n   * This is also equivalent to:\n   * {{{\n   * option map f getOrElse ifEmpty\n   * }}}\n   *  @param  ifEmpty the expression to evaluate if empty.\n   *  @param  f       the function to apply if nonempty.\n   */\n  @inline final def fold[B](ifEmpty: \u003d\u003e B)(f: A \u003d\u003e B): B \u003d\n    if (isEmpty) ifEmpty else f(this.get)\n\n  /** Returns the result of applying $f to this $option\u0027s value if\n   * this $option is nonempty.\n   * Returns $none if this $option is empty.\n   * Slightly different from `map` in that $f is expected to\n   * return an $option (which could be $none).\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e f(x)\n   *   case None    \u003d\u003e None\n   * }\n   * }}}\n   *  @param  f   the function to apply\n   *  @see map\n   *  @see foreach\n   */\n  @inline final def flatMap[B](f: A \u003d\u003e Option[B]): Option[B] \u003d\n    if (isEmpty) None else f(this.get)\n\n  /** Returns the nested $option value if it is nonempty.  Otherwise,\n   * return $none.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(Some(b)) \u003d\u003e Some(b)\n   *   case _             \u003d\u003e None\n   * }\n   * }}}\n   * @example {{{\n   * Some(Some(\"something\")).flatten\n   * }}}\n   *\n   * @param ev an implicit conversion that asserts that the value is\n   *           also an $option.\n   * @see flatMap\n   */\n  def flatten[B](implicit ev: A \u003c:\u003c Option[B]): Option[B] \u003d\n    if (isEmpty) None else ev(this.get)\n\n  /** Returns this $option if it is nonempty \u0027\u0027\u0027and\u0027\u0027\u0027 applying the predicate $p to\n   * this $option\u0027s value returns true. Otherwise, return $none.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) if p(x) \u003d\u003e Some(x)\n   *   case _               \u003d\u003e None\n   * }\n   * }}}\n   *  @param  p   the predicate used for testing.\n   */\n  @inline final def filter(p: A \u003d\u003e Boolean): Option[A] \u003d\n    if (isEmpty || p(this.get)) this else None\n\n  /** Returns this $option if it is nonempty \u0027\u0027\u0027and\u0027\u0027\u0027 applying the predicate $p to\n   * this $option\u0027s value returns false. Otherwise, return $none.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) if !p(x) \u003d\u003e Some(x)\n   *   case _                \u003d\u003e None\n   * }\n   * }}}\n   *  @param  p   the predicate used for testing.\n   */\n  @inline final def filterNot(p: A \u003d\u003e Boolean): Option[A] \u003d\n    if (isEmpty || !p(this.get)) this else None\n\n  /** Returns false if the option is $none, true otherwise.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(_) \u003d\u003e true\n   *   case None    \u003d\u003e false\n   * }\n   * }}}\n   *  @note   Implemented here to avoid the implicit conversion to Iterable.\n   */\n  final def nonEmpty: Boolean \u003d isDefined\n\n  /** Necessary to keep $option from being implicitly converted to\n   *  [[scala.collection.Iterable]] in `for` comprehensions.\n   */\n  @inline final def withFilter(p: A \u003d\u003e Boolean): WithFilter \u003d new WithFilter(p)\n\n  /** We need a whole WithFilter class to honor the \"doesn\u0027t create a new\n   *  collection\" contract even though it seems unlikely to matter much in a\n   *  collection with max size 1.\n   */\n  class WithFilter(p: A \u003d\u003e Boolean) {\n    def map[B](f: A \u003d\u003e B): Option[B] \u003d self filter p map f\n    def flatMap[B](f: A \u003d\u003e Option[B]): Option[B] \u003d self filter p flatMap f\n    def foreach[U](f: A \u003d\u003e U): Unit \u003d self filter p foreach f\n    def withFilter(q: A \u003d\u003e Boolean): WithFilter \u003d new WithFilter(x \u003d\u003e p(x) \u0026\u0026 q(x))\n  }\n\n  /** Tests whether the option contains a given value as an element.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e x \u003d\u003d elem\n   *   case None    \u003d\u003e false\n   * }\n   * }}}\n   *  @example {{{\n   *  // Returns true because Some instance contains string \"something\" which equals \"something\".\n   *  Some(\"something\") contains \"something\"\n   *\n   *  // Returns false because \"something\" !\u003d \"anything\".\n   *  Some(\"something\") contains \"anything\"\n   *\n   *  // Returns false when method called on None.\n   *  None contains \"anything\"\n   *  }}}\n   *\n   *  @param elem the element to test.\n   *  @return `true` if the option has an element that is equal (as\n   *  determined by `\u003d\u003d`) to `elem`, `false` otherwise.\n   */\n  final def contains[A1 \u003e: A](elem: A1): Boolean \u003d\n    !isEmpty \u0026\u0026 this.get \u003d\u003d elem\n\n  /** Returns true if this option is nonempty \u0027\u0027\u0027and\u0027\u0027\u0027 the predicate\n   * $p returns true when applied to this $option\u0027s value.\n   * Otherwise, returns false.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e p(x)\n   *   case None    \u003d\u003e false\n   * }\n   * }}}\n   *  @param  p   the predicate to test\n   */\n  @inline final def exists(p: A \u003d\u003e Boolean): Boolean \u003d\n    !isEmpty \u0026\u0026 p(this.get)\n\n  /** Returns true if this option is empty \u0027\u0027\u0027or\u0027\u0027\u0027 the predicate\n   * $p returns true when applied to this $option\u0027s value.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e p(x)\n   *   case None    \u003d\u003e true\n   * }\n   * }}}\n   *  @param  p   the predicate to test\n   */\n  @inline final def forall(p: A \u003d\u003e Boolean): Boolean \u003d isEmpty || p(this.get)\n\n  /** Apply the given procedure $f to the option\u0027s value,\n   *  if it is nonempty. Otherwise, do nothing.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e f(x)\n   *   case None    \u003d\u003e ()\n   * }\n   * }}}\n   *  @param  f   the procedure to apply.\n   *  @see map\n   *  @see flatMap\n   */\n  @inline final def foreach[U](f: A \u003d\u003e U): Unit \u003d {\n    if (!isEmpty) f(this.get)\n  }\n\n  /** Returns a $some containing the result of\n   * applying `pf` to this $option\u0027s contained\n   * value, \u0027\u0027\u0027if\u0027\u0027\u0027 this option is\n   * nonempty \u0027\u0027\u0027and\u0027\u0027\u0027 `pf` is defined for that value.\n   * Returns $none otherwise.\n   *\n   *  @example {{{\n   *  // Returns Some(HTTP) because the partial function covers the case.\n   *  Some(\"http\") collect {case \"http\" \u003d\u003e \"HTTP\"}\n   *\n   *  // Returns None because the partial function doesn\u0027t cover the case.\n   *  Some(\"ftp\") collect {case \"http\" \u003d\u003e \"HTTP\"}\n   *\n   *  // Returns None because the option is empty. There is no value to pass to the partial function.\n   *  None collect {case value \u003d\u003e value}\n   *  }}}\n   *\n   *  @param  pf   the partial function.\n   *  @return the result of applying `pf` to this $option\u0027s\n   *  value (if possible), or $none.\n   */\n  @inline final def collect[B](pf: PartialFunction[A, B]): Option[B] \u003d\n    if (!isEmpty) pf.lift(this.get) else None\n\n  /** Returns this $option if it is nonempty,\n   *  otherwise return the result of evaluating `alternative`.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e Some(x)\n   *   case None    \u003d\u003e alternative\n   * }\n   * }}}\n   *  @param alternative the alternative expression.\n   */\n  @inline final def orElse[B \u003e: A](alternative: \u003d\u003e Option[B]): Option[B] \u003d\n    if (isEmpty) alternative else this\n\n  /** Returns a $some formed from this option and another option\n   *  by combining the corresponding elements in a pair.\n   *  If either of the two options is empty, $none is returned.\n   *\n   *  This is equivalent to:\n   *  {{{\n   *  (option1, option2) match {\n   *    case (Some(x), Some(y)) \u003d\u003e Some((x, y))\n   *    case _                  \u003d\u003e None\n   *  }\n   *  }}}\n   *  @example {{{\n   *  // Returns Some((\"foo\", \"bar\")) because both options are nonempty.\n   *  Some(\"foo\") zip Some(\"bar\")\n   *\n   *  // Returns None because `that` option is empty.\n   *  Some(\"foo\") zip None\n   *\n   *  // Returns None because `this` option is empty.\n   *  None zip Some(\"bar\")\n   *  }}}\n   *\n   *  @param  that   the options which is going to be zipped\n   */\n  final def zip[A1 \u003e: A, B](that: Option[B]): Option[(A1, B)] \u003d\n    if (isEmpty || that.isEmpty) None else Some((this.get, that.get))\n\n  /** Converts an Option of a pair into an Option of the first element and an Option of the second element.\n    *\n    *  This is equivalent to:\n    *  {{{\n    *  option match {\n    *    case Some((x, y)) \u003d\u003e (Some(x), Some(y))\n    *    case _            \u003d\u003e (None,    None)\n    *  }\n    *  }}}\n    *  @tparam A1    the type of the first half of the element pair\n    *  @tparam A2    the type of the second half of the element pair\n    *  @param asPair an implicit conversion which asserts that the element type\n    *                of this Option is a pair.\n    *  @return       a pair of Options, containing, respectively, the first and second half\n    *                of the element pair of this Option.\n    */\n  final def unzip[A1, A2](implicit asPair: A \u003c:\u003c (A1, A2)): (Option[A1], Option[A2]) \u003d {\n    if (isEmpty)\n      (None, None)\n    else {\n      val e \u003d asPair(this.get)\n      (Some(e._1), Some(e._2))\n    }\n  }\n\n  /** Converts an Option of a triple into three Options, one containing the element from each position of the triple.\n    *\n    *  This is equivalent to:\n    *  {{{\n    *  option match {\n    *    case Some((x, y, z)) \u003d\u003e (Some(x), Some(y), Some(z))\n    *    case _               \u003d\u003e (None,    None,    None)\n    *  }\n    *  }}}\n    *  @tparam A1      the type of the first of three elements in the triple\n    *  @tparam A2      the type of the second of three elements in the triple\n    *  @tparam A3      the type of the third of three elements in the triple\n    *  @param asTriple an implicit conversion which asserts that the element type\n    *                  of this Option is a triple.\n    *  @return         a triple of Options, containing, respectively, the first, second, and third\n    *                  elements from the element triple of this Option.\n    */\n  final def unzip3[A1, A2, A3](implicit asTriple: A \u003c:\u003c (A1, A2, A3)): (Option[A1], Option[A2], Option[A3]) \u003d {\n    if (isEmpty)\n      (None, None, None)\n    else {\n      val e \u003d asTriple(this.get)\n      (Some(e._1), Some(e._2), Some(e._3))\n    }\n  }\n\n  /** Returns a singleton iterator returning the $option\u0027s value\n   * if it is nonempty, or an empty iterator if the option is empty.\n   */\n  def iterator: Iterator[A] \u003d\n    if (isEmpty) collection.Iterator.empty else collection.Iterator.single(this.get)\n\n  /** Returns a singleton list containing the $option\u0027s value\n   * if it is nonempty, or the empty list if the $option is empty.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e List(x)\n   *   case None    \u003d\u003e Nil\n   * }\n   * }}}\n   */\n  def toList: List[A] \u003d\n    if (isEmpty) List() else new ::(this.get, Nil)\n\n  /** Returns a [[scala.util.Left]] containing the given\n   * argument `left` if this $option is empty, or\n   * a [[scala.util.Right]] containing this $option\u0027s value if\n   * this is nonempty.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e Right(x)\n   *   case None    \u003d\u003e Left(left)\n   * }\n   * }}}\n   * @param left the expression to evaluate and return if this is empty\n   * @see toLeft\n   */\n  @inline final def toRight[X](left: \u003d\u003e X): Either[X, A] \u003d\n    if (isEmpty) Left(left) else Right(this.get)\n\n  /** Returns a [[scala.util.Right]] containing the given\n   * argument `right` if this is empty, or\n   * a [[scala.util.Left]] containing this $option\u0027s value\n   * if this $option is nonempty.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e Left(x)\n   *   case None    \u003d\u003e Right(right)\n   * }\n   * }}}\n   * @param right the expression to evaluate and return if this is empty\n   * @see toRight\n   */\n  @inline final def toLeft[X](right: \u003d\u003e X): Either[A, X] \u003d\n    if (isEmpty) Right(right) else Left(this.get)\n}\n\n/** Class `Some[A]` represents existing values of type\n *  `A`.\n */\n@SerialVersionUID(1234815782226070388L) // value computed by serialver for 2.11.2, annotation added in 2.11.4\nfinal case class Some[+A](value: A) extends Option[A] {\n  def get: A \u003d value\n}\n\n\n/** This case object represents non-existent values.\n */\n@SerialVersionUID(5066590221178148012L) // value computed by serialver for 2.11.2, annotation added in 2.11.4\ncase object None extends Option[Nothing] {\n  def get: Nothing \u003d throw new NoSuchElementException(\"None.get\")\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 1:26:34 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Option.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:26:34 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:26:34 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Option.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\n\nobject Option {\n\n  import scala.language.implicitConversions\n\n  /** An implicit conversion that converts an option to an iterable value */\n  implicit def option2Iterable[A](xo: Option[A]): Iterable[A] \u003d\n    if (xo.isEmpty) Iterable.empty else Iterable.single(xo.get)\n\n  /** An Option factory which creates Some(x) if the argument is not null,\n   *  and None if it is null.\n   *\n   *  @param  x the value\n   *  @return   Some(value) if value !\u003d null, None if value \u003d\u003d null\n   */\n  def apply[A](x: A): Option[A] \u003d if (x \u003d\u003d null) None else Some(x)\n\n  /** An Option factory which returns `None` in a manner consistent with\n   *  the collections hierarchy.\n   */\n  def empty[A] : Option[A] \u003d None\n\n  /** When a given condition is true, evaluates the `a` argument and returns\n   *  Some(a). When the condition is false, `a` is not evaluated and None is\n   *  returned.\n   */\n  def when[A](cond: Boolean)(a: \u003d\u003e A): Option[A] \u003d\n    if (cond) Some(a) else None\n\n  /** Unless a given condition is true, this will evaluate the `a` argument and\n   *  return Some(a). Otherwise, `a` is not evaluated and None is returned.\n   */\n  @inline def unless[A](cond: Boolean)(a: \u003d\u003e A): Option[A] \u003d\n    when(!cond)(a)\n}\n\n/** Represents optional values. Instances of `Option`\n *  are either an instance of $some or the object $none.\n *\n *  The most idiomatic way to use an $option instance is to treat it\n *  as a collection or monad and use `map`,`flatMap`, `filter`, or\n *  `foreach`:\n *\n *  {{{\n *  val name: Option[String] \u003d request getParameter \"name\"\n *  val upper \u003d name map { _.trim } filter { _.length !\u003d 0 } map { _.toUpperCase }\n *  println(upper getOrElse \"\")\n *  }}}\n *\n *  Note that this is equivalent to {{{\n *  val upper \u003d for {\n *    name \u003c- request getParameter \"name\"\n *    trimmed \u003c- Some(name.trim)\n *    upper \u003c- Some(trimmed.toUpperCase) if trimmed.length !\u003d 0\n *  } yield upper\n *  println(upper getOrElse \"\")\n *  }}}\n *\n *  Because of how for comprehension works, if $none is returned\n *  from `request.getParameter`, the entire expression results in\n *  $none\n *\n *  This allows for sophisticated chaining of $option values without\n *  having to check for the existence of a value.\n *\n * These are useful methods that exist for both $some and $none.\n *  - [[isDefined]] — True if not empty\n *  - [[isEmpty]] — True if empty\n *  - [[nonEmpty]] — True if not empty\n *  - [[orElse]] — Evaluate and return alternate optional value if empty\n *  - [[getOrElse]] — Evaluate and return alternate value if empty\n *  - [[get]] — Return value, throw exception if empty\n *  - [[fold]] —  Apply function on optional value, return default if empty\n *  - [[map]] — Apply a function on the optional value\n *  - [[flatMap]] — Same as map but function must return an optional value\n *  - [[foreach]] — Apply a procedure on option value\n *  - [[collect]] — Apply partial pattern match on optional value\n *  - [[filter]] — An optional value satisfies predicate\n *  - [[filterNot]] — An optional value doesn\u0027t satisfy predicate\n *  - [[exists]] — Apply predicate on optional value, or false if empty\n *  - [[forall]] — Apply predicate on optional value, or true if empty\n *  - [[contains]] — Checks if value equals optional value, or false if empty\n *  - [[zip]] — Combine two optional values to make a paired optional value\n *  - [[unzip]] — Split an optional pair to two optional values\n *  - [[unzip3]] — Split an optional triple to three optional values\n *  - [[toList]] — Unary list of optional value, otherwise the empty list\n *\n *  A less-idiomatic way to use $option values is via pattern matching: {{{\n *  val nameMaybe \u003d request getParameter \"name\"\n *  nameMaybe match {\n *    case Some(name) \u003d\u003e\n *      println(name.trim.toUppercase)\n *    case None \u003d\u003e\n *      println(\"No name value\")\n *  }\n *  }}}\n *\n * Interacting with code that can occasionally return null can be\n * safely wrapped in $option to become $none and $some otherwise. {{{\n * val abc \u003d new java.util.HashMap[Int, String]\n * abc.put(1, \"A\")\n * bMaybe \u003d Option(abc.get(2))\n * bMaybe match {\n *   case Some(b) \u003d\u003e\n *     println(s\"Found \\$b\")\n *   case None \u003d\u003e\n *     println(\"Not found\")\n * }\n * }}}\n *\n *  @note Many of the methods in here are duplicative with those\n *  in the Iterable hierarchy, but they are duplicated for a reason:\n *  the implicit conversion tends to leave one with an Iterable in\n *  situations where one could have retained an Option.\n *\n *  @define none `None`\n *  @define some [[scala.Some]]\n *  @define option [[scala.Option]]\n *  @define p `p`\n *  @define f `f`\n *  @define coll option\n *  @define Coll `Option`\n *  @define orderDependent\n *  @define orderDependentFold\n *  @define mayNotTerminateInf\n *  @define willNotTerminateInf\n *  @define collectExample\n *  @define undefinedorder\n */\n@SerialVersionUID(-114498752079829388L) // value computed by serialver for 2.11.2, annotation added in 2.11.4\nsealed abstract class Option[+A] extends IterableOnce[A] with Product with Serializable {\n  self \u003d\u003e\n\n  /** Returns true if the option is $none, false otherwise.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(_) \u003d\u003e false\n   *   case None    \u003d\u003e true\n   * }\n   * }}}\n   */\n  final def isEmpty: Boolean \u003d this eq None\n\n  /** Returns true if the option is an instance of $some, false otherwise.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(_) \u003d\u003e true\n   *   case None    \u003d\u003e false\n   * }\n   * }}}\n   */\n  final def isDefined: Boolean \u003d !isEmpty\n\n  override final def knownSize: Int \u003d if (isEmpty) 0 else 1\n\n  /** Returns the option\u0027s value.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e x\n   *   case None    \u003d\u003e throw new Exception\n   * }\n   * }}}\n   *  @note The option must be nonempty.\n   *  @throws NoSuchElementException if the option is empty.\n   */\n  def get: A\n\n  /** Returns the option\u0027s value if the option is nonempty, otherwise\n   * return the result of evaluating `default`.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e x\n   *   case None    \u003d\u003e default\n   * }\n   * }}}\n   *\n   *  @param default  the default expression.\n   */\n  @inline final def getOrElse[B \u003e: A](default: \u003d\u003e B): B \u003d\n    if (isEmpty) default else this.get\n\n  /** Returns the option\u0027s value if it is nonempty,\n   * or `null` if it is empty.\n   *\n   * Although the use of null is discouraged, code written to use\n   * $option must often interface with code that expects and returns nulls.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e x\n   *   case None    \u003d\u003e null\n   * }\n   * }}}\n   * @example {{{\n   * val initialText: Option[String] \u003d getInitialText\n   * val textField \u003d new JComponent(initialText.orNull,20)\n   * }}}\n   */\n  @inline final def orNull[A1 \u003e: A](implicit ev: Null \u003c:\u003c A1): A1 \u003d this getOrElse ev(null)\n\n  /** Returns a $some containing the result of applying $f to this $option\u0027s\n   * value if this $option is nonempty.\n   * Otherwise return $none.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e Some(f(x))\n   *   case None    \u003d\u003e None\n   * }\n   * }}}\n   *  @note This is similar to `flatMap` except here,\n   *  $f does not need to wrap its result in an $option.\n   *\n   *  @param  f   the function to apply\n   *  @see flatMap\n   *  @see foreach\n   */\n  @inline final def map[B](f: A \u003d\u003e B): Option[B] \u003d\n    if (isEmpty) None else Some(f(this.get))\n\n  /** Returns the result of applying $f to this $option\u0027s\n   *  value if the $option is nonempty.  Otherwise, evaluates\n   *  expression `ifEmpty`.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e f(x)\n   *   case None    \u003d\u003e ifEmpty\n   * }\n   * }}}\n   * This is also equivalent to:\n   * {{{\n   * option map f getOrElse ifEmpty\n   * }}}\n   *  @param  ifEmpty the expression to evaluate if empty.\n   *  @param  f       the function to apply if nonempty.\n   */\n  @inline final def fold[B](ifEmpty: \u003d\u003e B)(f: A \u003d\u003e B): B \u003d\n    if (isEmpty) ifEmpty else f(this.get)\n\n  /** Returns the result of applying $f to this $option\u0027s value if\n   * this $option is nonempty.\n   * Returns $none if this $option is empty.\n   * Slightly different from `map` in that $f is expected to\n   * return an $option (which could be $none).\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e f(x)\n   *   case None    \u003d\u003e None\n   * }\n   * }}}\n   *  @param  f   the function to apply\n   *  @see map\n   *  @see foreach\n   */\n  @inline final def flatMap[B](f: A \u003d\u003e Option[B]): Option[B] \u003d\n    if (isEmpty) None else f(this.get)\n\n  /** Returns the nested $option value if it is nonempty.  Otherwise,\n   * return $none.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(Some(b)) \u003d\u003e Some(b)\n   *   case _             \u003d\u003e None\n   * }\n   * }}}\n   * @example {{{\n   * Some(Some(\"something\")).flatten\n   * }}}\n   *\n   * @param ev an implicit conversion that asserts that the value is\n   *           also an $option.\n   * @see flatMap\n   */\n  def flatten[B](implicit ev: A \u003c:\u003c Option[B]): Option[B] \u003d\n    if (isEmpty) None else ev(this.get)\n\n  /** Returns this $option if it is nonempty \u0027\u0027\u0027and\u0027\u0027\u0027 applying the predicate $p to\n   * this $option\u0027s value returns true. Otherwise, return $none.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) if p(x) \u003d\u003e Some(x)\n   *   case _               \u003d\u003e None\n   * }\n   * }}}\n   *  @param  p   the predicate used for testing.\n   */\n  @inline final def filter(p: A \u003d\u003e Boolean): Option[A] \u003d\n    if (isEmpty || p(this.get)) this else None\n\n  /** Returns this $option if it is nonempty \u0027\u0027\u0027and\u0027\u0027\u0027 applying the predicate $p to\n   * this $option\u0027s value returns false. Otherwise, return $none.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) if !p(x) \u003d\u003e Some(x)\n   *   case _                \u003d\u003e None\n   * }\n   * }}}\n   *  @param  p   the predicate used for testing.\n   */\n  @inline final def filterNot(p: A \u003d\u003e Boolean): Option[A] \u003d\n    if (isEmpty || !p(this.get)) this else None\n\n  /** Returns false if the option is $none, true otherwise.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(_) \u003d\u003e true\n   *   case None    \u003d\u003e false\n   * }\n   * }}}\n   *  @note   Implemented here to avoid the implicit conversion to Iterable.\n   */\n  final def nonEmpty: Boolean \u003d isDefined\n\n  /** Necessary to keep $option from being implicitly converted to\n   *  [[scala.collection.Iterable]] in `for` comprehensions.\n   */\n  @inline final def withFilter(p: A \u003d\u003e Boolean): WithFilter \u003d new WithFilter(p)\n\n  /** We need a whole WithFilter class to honor the \"doesn\u0027t create a new\n   *  collection\" contract even though it seems unlikely to matter much in a\n   *  collection with max size 1.\n   */\n  class WithFilter(p: A \u003d\u003e Boolean) {\n    def map[B](f: A \u003d\u003e B): Option[B] \u003d self filter p map f\n    def flatMap[B](f: A \u003d\u003e Option[B]): Option[B] \u003d self filter p flatMap f\n    def foreach[U](f: A \u003d\u003e U): Unit \u003d self filter p foreach f\n    def withFilter(q: A \u003d\u003e Boolean): WithFilter \u003d new WithFilter(x \u003d\u003e p(x) \u0026\u0026 q(x))\n  }\n\n  /** Tests whether the option contains a given value as an element.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e x \u003d\u003d elem\n   *   case None    \u003d\u003e false\n   * }\n   * }}}\n   *  @example {{{\n   *  // Returns true because Some instance contains string \"something\" which equals \"something\".\n   *  Some(\"something\") contains \"something\"\n   *\n   *  // Returns false because \"something\" !\u003d \"anything\".\n   *  Some(\"something\") contains \"anything\"\n   *\n   *  // Returns false when method called on None.\n   *  None contains \"anything\"\n   *  }}}\n   *\n   *  @param elem the element to test.\n   *  @return `true` if the option has an element that is equal (as\n   *  determined by `\u003d\u003d`) to `elem`, `false` otherwise.\n   */\n  final def contains[A1 \u003e: A](elem: A1): Boolean \u003d\n    !isEmpty \u0026\u0026 this.get \u003d\u003d elem\n\n  /** Returns true if this option is nonempty \u0027\u0027\u0027and\u0027\u0027\u0027 the predicate\n   * $p returns true when applied to this $option\u0027s value.\n   * Otherwise, returns false.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e p(x)\n   *   case None    \u003d\u003e false\n   * }\n   * }}}\n   *  @param  p   the predicate to test\n   */\n  @inline final def exists(p: A \u003d\u003e Boolean): Boolean \u003d\n    !isEmpty \u0026\u0026 p(this.get)\n\n  /** Returns true if this option is empty \u0027\u0027\u0027or\u0027\u0027\u0027 the predicate\n   * $p returns true when applied to this $option\u0027s value.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e p(x)\n   *   case None    \u003d\u003e true\n   * }\n   * }}}\n   *  @param  p   the predicate to test\n   */\n  @inline final def forall(p: A \u003d\u003e Boolean): Boolean \u003d isEmpty || p(this.get)\n\n  /** Apply the given procedure $f to the option\u0027s value,\n   *  if it is nonempty. Otherwise, do nothing.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e f(x)\n   *   case None    \u003d\u003e ()\n   * }\n   * }}}\n   *  @param  f   the procedure to apply.\n   *  @see map\n   *  @see flatMap\n   */\n  @inline final def foreach[U](f: A \u003d\u003e U): Unit \u003d {\n    if (!isEmpty) f(this.get)\n  }\n\n  /** Returns a $some containing the result of\n   * applying `pf` to this $option\u0027s contained\n   * value, \u0027\u0027\u0027if\u0027\u0027\u0027 this option is\n   * nonempty \u0027\u0027\u0027and\u0027\u0027\u0027 `pf` is defined for that value.\n   * Returns $none otherwise.\n   *\n   *  @example {{{\n   *  // Returns Some(HTTP) because the partial function covers the case.\n   *  Some(\"http\") collect {case \"http\" \u003d\u003e \"HTTP\"}\n   *\n   *  // Returns None because the partial function doesn\u0027t cover the case.\n   *  Some(\"ftp\") collect {case \"http\" \u003d\u003e \"HTTP\"}\n   *\n   *  // Returns None because the option is empty. There is no value to pass to the partial function.\n   *  None collect {case value \u003d\u003e value}\n   *  }}}\n   *\n   *  @param  pf   the partial function.\n   *  @return the result of applying `pf` to this $option\u0027s\n   *  value (if possible), or $none.\n   */\n  @inline final def collect[B](pf: PartialFunction[A, B]): Option[B] \u003d\n    if (!isEmpty) pf.lift(this.get) else None\n\n  /** Returns this $option if it is nonempty,\n   *  otherwise return the result of evaluating `alternative`.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e Some(x)\n   *   case None    \u003d\u003e alternative\n   * }\n   * }}}\n   *  @param alternative the alternative expression.\n   */\n  @inline final def orElse[B \u003e: A](alternative: \u003d\u003e Option[B]): Option[B] \u003d\n    if (isEmpty) alternative else this\n\n  /** Returns a $some formed from this option and another option\n   *  by combining the corresponding elements in a pair.\n   *  If either of the two options is empty, $none is returned.\n   *\n   *  This is equivalent to:\n   *  {{{\n   *  (option1, option2) match {\n   *    case (Some(x), Some(y)) \u003d\u003e Some((x, y))\n   *    case _                  \u003d\u003e None\n   *  }\n   *  }}}\n   *  @example {{{\n   *  // Returns Some((\"foo\", \"bar\")) because both options are nonempty.\n   *  Some(\"foo\") zip Some(\"bar\")\n   *\n   *  // Returns None because `that` option is empty.\n   *  Some(\"foo\") zip None\n   *\n   *  // Returns None because `this` option is empty.\n   *  None zip Some(\"bar\")\n   *  }}}\n   *\n   *  @param  that   the options which is going to be zipped\n   */\n  final def zip[A1 \u003e: A, B](that: Option[B]): Option[(A1, B)] \u003d\n    if (isEmpty || that.isEmpty) None else Some((this.get, that.get))\n\n  /** Converts an Option of a pair into an Option of the first element and an Option of the second element.\n    *\n    *  This is equivalent to:\n    *  {{{\n    *  option match {\n    *    case Some((x, y)) \u003d\u003e (Some(x), Some(y))\n    *    case _            \u003d\u003e (None,    None)\n    *  }\n    *  }}}\n    *  @tparam A1    the type of the first half of the element pair\n    *  @tparam A2    the type of the second half of the element pair\n    *  @param asPair an implicit conversion which asserts that the element type\n    *                of this Option is a pair.\n    *  @return       a pair of Options, containing, respectively, the first and second half\n    *                of the element pair of this Option.\n    */\n  final def unzip[A1, A2](implicit asPair: A \u003c:\u003c (A1, A2)): (Option[A1], Option[A2]) \u003d {\n    if (isEmpty)\n      (None, None)\n    else {\n      val e \u003d asPair(this.get)\n      (Some(e._1), Some(e._2))\n    }\n  }\n\n  /** Converts an Option of a triple into three Options, one containing the element from each position of the triple.\n    *\n    *  This is equivalent to:\n    *  {{{\n    *  option match {\n    *    case Some((x, y, z)) \u003d\u003e (Some(x), Some(y), Some(z))\n    *    case _               \u003d\u003e (None,    None,    None)\n    *  }\n    *  }}}\n    *  @tparam A1      the type of the first of three elements in the triple\n    *  @tparam A2      the type of the second of three elements in the triple\n    *  @tparam A3      the type of the third of three elements in the triple\n    *  @param asTriple an implicit conversion which asserts that the element type\n    *                  of this Option is a triple.\n    *  @return         a triple of Options, containing, respectively, the first, second, and third\n    *                  elements from the element triple of this Option.\n    */\n  final def unzip3[A1, A2, A3](implicit asTriple: A \u003c:\u003c (A1, A2, A3)): (Option[A1], Option[A2], Option[A3]) \u003d {\n    if (isEmpty)\n      (None, None, None)\n    else {\n      val e \u003d asTriple(this.get)\n      (Some(e._1), Some(e._2), Some(e._3))\n    }\n  }\n\n  /** Returns a singleton iterator returning the $option\u0027s value\n   * if it is nonempty, or an empty iterator if the option is empty.\n   */\n  def iterator: Iterator[A] \u003d\n    if (isEmpty) collection.Iterator.empty else collection.Iterator.single(this.get)\n\n  /** Returns a singleton list containing the $option\u0027s value\n   * if it is nonempty, or the empty list if the $option is empty.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e List(x)\n   *   case None    \u003d\u003e Nil\n   * }\n   * }}}\n   */\n  def toList: List[A] \u003d\n    if (isEmpty) List() else new ::(this.get, Nil)\n\n  /** Returns a [[scala.util.Left]] containing the given\n   * argument `left` if this $option is empty, or\n   * a [[scala.util.Right]] containing this $option\u0027s value if\n   * this is nonempty.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e Right(x)\n   *   case None    \u003d\u003e Left(left)\n   * }\n   * }}}\n   * @param left the expression to evaluate and return if this is empty\n   * @see toLeft\n   */\n  @inline final def toRight[X](left: \u003d\u003e X): Either[X, A] \u003d\n    if (isEmpty) Left(left) else Right(this.get)\n\n  /** Returns a [[scala.util.Right]] containing the given\n   * argument `right` if this is empty, or\n   * a [[scala.util.Left]] containing this $option\u0027s value\n   * if this $option is nonempty.\n   *\n   * This is equivalent to:\n   * {{{\n   * option match {\n   *   case Some(x) \u003d\u003e Left(x)\n   *   case None    \u003d\u003e Right(right)\n   * }\n   * }}}\n   * @param right the expression to evaluate and return if this is empty\n   * @see toRight\n   */\n  @inline final def toLeft[X](right: \u003d\u003e X): Either[A, X] \u003d\n    if (isEmpty) Right(right) else Left(this.get)\n}\n\n/** Class `Some[A]` represents existing values of type\n *  `A`.\n */\n@SerialVersionUID(1234815782226070388L) // value computed by serialver for 2.11.2, annotation added in 2.11.4\nfinal case class Some[+A](value: A) extends Option[A] {\n  def get: A \u003d value\n}\n\n\n/** This case object represents non-existent values.\n */\n@SerialVersionUID(5066590221178148012L) // value computed by serialver for 2.11.2, annotation added in 2.11.4\ncase object None extends Option[Nothing] {\n  def get: Nothing \u003d throw new NoSuchElementException(\"None.get\")\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:26:40 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:26:40 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/collection/immutable/List.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage collection\npackage immutable\n\nimport scala.annotation.unchecked.uncheckedVariance\nimport scala.annotation.tailrec\nimport mutable.{Builder, ListBuffer}\nimport scala.collection.generic.DefaultSerializable\nimport scala.runtime.Statics.releaseFence\n\n/** A class for immutable linked lists representing ordered collections\n  *  of elements of type `A`.\n  *\n  *  This class comes with two implementing case classes `scala.Nil`\n  *  and `scala.::` that implement the abstract members `isEmpty`,\n  *  `head` and `tail`.\n  *\n  *  This class is optimal for last-in-first-out (LIFO), stack-like access patterns. If you need another access\n  *  pattern, for example, random access or FIFO, consider using a collection more suited to this than `List`.\n  *\n  *  \u003d\u003dPerformance\u003d\u003d\n  *  \u0027\u0027\u0027Time:\u0027\u0027\u0027 `List` has `O(1)` prepend and head/tail access. Most other operations are `O(n)` on the number of elements in the list.\n  *  This includes the index-based lookup of elements, `length`, `append` and `reverse`.\n  *\n  *  \u0027\u0027\u0027Space:\u0027\u0027\u0027 `List` implements \u0027\u0027\u0027structural sharing\u0027\u0027\u0027 of the tail list. This means that many operations are either\n  *  zero- or constant-memory cost.\n  *  {{{\n  *  val mainList \u003d List(3, 2, 1)\n  *  val with4 \u003d    4 :: mainList  // re-uses mainList, costs one :: instance\n  *  val with42 \u003d   42 :: mainList // also re-uses mainList, cost one :: instance\n  *  val shorter \u003d  mainList.tail  // costs nothing as it uses the same 2::1::Nil instances as mainList\n  *  }}}\n  *\n  *  @example {{{\n  *  // Make a list via the companion object factory\n  *  val days \u003d List(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")\n  *\n  *  // Make a list element-by-element\n  *  val when \u003d \"AM\" :: \"PM\" :: Nil\n  *\n  *  // Pattern match\n  *  days match {\n  *    case firstDay :: otherDays \u003d\u003e\n  *      println(\"The first day of the week is: \" + firstDay)\n  *    case Nil \u003d\u003e\n  *      println(\"There don\u0027t seem to be any week days.\")\n  *  }\n  *  }}}\n  *\n  *  @note The functional list is characterized by persistence and structural sharing, thus offering considerable\n  *        performance and space consumption benefits in some scenarios if used correctly.\n  *        However, note that objects having multiple references into the same functional list (that is,\n  *        objects that rely on structural sharing), will be serialized and deserialized with multiple lists, one for\n  *        each reference to it. I.e. structural sharing is lost after serialization/deserialization.\n  *\n  *  @see  [[https://docs.scala-lang.org/overviews/collections-2.13/concrete-immutable-collection-classes.html#lists \"Scala\u0027s Collection Library overview\"]]\n  *  section on `Lists` for more information.\n  *\n  *  @define coll list\n  *  @define Coll `List`\n  *  @define orderDependent\n  *  @define orderDependentFold\n  *  @define mayNotTerminateInf\n  *  @define willNotTerminateInf\n  */\n@SerialVersionUID(3L)\nsealed abstract class List[+A]\n  extends AbstractSeq[A]\n    with LinearSeq[A]\n    with LinearSeqOps[A, List, List[A]]\n    with StrictOptimizedLinearSeqOps[A, List, List[A]]\n    with StrictOptimizedSeqOps[A, List, List[A]]\n    with IterableFactoryDefaults[A, List]\n    with DefaultSerializable {\n\n  override def iterableFactory: SeqFactory[List] \u003d List\n\n  /** Adds an element at the beginning of this list.\n    *  @param elem the element to prepend.\n    *  @return  a list which contains `x` as first element and\n    *           which continues with this list.\n    *  Example:\n    *  {{{1 :: List(2, 3) \u003d List(2, 3).::(1) \u003d List(1, 2, 3)}}}\n    */\n  def :: [B \u003e: A](elem: B): List[B] \u003d  new ::(elem, this)\n\n  /** Adds the elements of a given list in front of this list.\n    *\n    * Example:\n    * {{{List(1, 2) ::: List(3, 4) \u003d List(3, 4).:::(List(1, 2)) \u003d List(1, 2, 3, 4)}}}\n    *\n    *  @param prefix  The list elements to prepend.\n    *  @return a list resulting from the concatenation of the given\n    *    list `prefix` and this list.\n    */\n  def ::: [B \u003e: A](prefix: List[B]): List[B] \u003d\n    if (isEmpty) prefix\n    else if (prefix.isEmpty) this\n    else {\n      val result \u003d new ::[B](prefix.head, this)\n      var curr \u003d result\n      var that \u003d prefix.tail\n      while (!that.isEmpty) {\n        val temp \u003d new ::[B](that.head, this)\n        curr.next \u003d temp\n        curr \u003d temp\n        that \u003d that.tail\n      }\n      releaseFence()\n      result\n    }\n\n  /** Adds the elements of a given list in reverse order in front of this list.\n    *  `xs reverse_::: ys` is equivalent to\n    *  `xs.reverse ::: ys` but is more efficient.\n    *\n    *  @param prefix the prefix to reverse and then prepend\n    *  @return       the concatenation of the reversed prefix and the current list.\n    */\n  def reverse_:::[B \u003e: A](prefix: List[B]): List[B] \u003d {\n    var these: List[B] \u003d this\n    var pres \u003d prefix\n    while (!pres.isEmpty) {\n      these \u003d pres.head :: these\n      pres \u003d pres.tail\n    }\n    these\n  }\n\n  override final def isEmpty: Boolean \u003d this eq Nil\n\n  override def prepended[B \u003e: A](elem: B): List[B] \u003d elem :: this\n\n  override def prependedAll[B \u003e: A](prefix: collection.IterableOnce[B]): List[B] \u003d prefix match {\n    case xs: List[B] \u003d\u003e xs ::: this\n    case _ if prefix.knownSize \u003d\u003d 0 \u003d\u003e this\n    case b: ListBuffer[B] if this.isEmpty \u003d\u003e b.toList\n    case _ \u003d\u003e\n      val iter \u003d prefix.iterator\n      if (iter.hasNext) {\n        val result \u003d new ::[B](iter.next(), this)\n        var curr \u003d result\n        while (iter.hasNext) {\n          val temp \u003d new ::[B](iter.next(), this)\n          curr.next \u003d temp\n          curr \u003d temp\n        }\n        releaseFence()\n        result\n      } else {\n        this\n      }\n  }\n\n  // When calling appendAll with another list `suffix`, avoid copying `suffix`\n  override def appendedAll[B \u003e: A](suffix: collection.IterableOnce[B]): List[B] \u003d suffix match {\n    case xs: List[B] \u003d\u003e this ::: xs\n    case _ \u003d\u003e super.appendedAll(suffix)\n  }\n\n  override def take(n: Int): List[A] \u003d if (isEmpty || n \u003c\u003d 0) Nil else {\n    val h \u003d new ::(head, Nil)\n    var t \u003d h\n    var rest \u003d tail\n    var i \u003d 1\n    while ({if (rest.isEmpty) return this; i \u003c n}) {\n      i +\u003d 1\n      val nx \u003d new ::(rest.head, Nil)\n      t.next \u003d nx\n      t \u003d nx\n      rest \u003d rest.tail\n    }\n    releaseFence()\n    h\n  }\n\n  /**\n    *  @example {{{\n    *  // Given a list\n    *  val letters \u003d List(\u0027a\u0027,\u0027b\u0027,\u0027c\u0027,\u0027d\u0027,\u0027e\u0027)\n    *\n    *  // `slice` returns all elements beginning at index `from` and afterwards,\n    *  // up until index `until` (excluding index `until`.)\n    *  letters.slice(1,3) // Returns List(\u0027b\u0027,\u0027c\u0027)\n    *  }}}\n    */\n  override def slice(from: Int, until: Int): List[A] \u003d {\n    val lo \u003d scala.math.max(from, 0)\n    if (until \u003c\u003d lo || isEmpty) Nil\n    else this drop lo take (until - lo)\n  }\n\n  override def takeRight(n: Int): List[A] \u003d {\n    @tailrec\n    def loop(lead: List[A], lag: List[A]): List[A] \u003d lead match {\n      case Nil \u003d\u003e lag\n      case _ :: tail \u003d\u003e loop(tail, lag.tail)\n    }\n    loop(drop(n), this)\n  }\n\n  // dropRight is inherited from LinearSeq\n\n  override def splitAt(n: Int): (List[A], List[A]) \u003d {\n    val b \u003d new ListBuffer[A]\n    var i \u003d 0\n    var these \u003d this\n    while (!these.isEmpty \u0026\u0026 i \u003c n) {\n      i +\u003d 1\n      b +\u003d these.head\n      these \u003d these.tail\n    }\n    (b.toList, these)\n  }\n\n  override def updated[B \u003e: A](index: Int, elem: B): List[B] \u003d {\n    var i \u003d 0\n    var current \u003d this\n    val prefix \u003d ListBuffer.empty[B]\n    while (i \u003c index \u0026\u0026 current.nonEmpty) {\n      i +\u003d 1\n      prefix +\u003d current.head\n      current \u003d current.tail\n    }\n    if (i \u003d\u003d index \u0026\u0026 current.nonEmpty) {\n      prefix.prependToList(elem :: current.tail)\n    } else {\n      throw new IndexOutOfBoundsException(s\"$index is out of bounds (min 0, max ${length-1})\")\n    }\n  }\n\n  final override def map[B](f: A \u003d\u003e B): List[B] \u003d {\n    if (this eq Nil) Nil else {\n      val h \u003d new ::[B](f(head), Nil)\n      var t: ::[B] \u003d h\n      var rest \u003d tail\n      while (rest ne Nil) {\n        val nx \u003d new ::(f(rest.head), Nil)\n        t.next \u003d nx\n        t \u003d nx\n        rest \u003d rest.tail\n      }\n      releaseFence()\n      h\n    }\n  }\n\n  final override def collect[B](pf: PartialFunction[A, B]): List[B] \u003d {\n    if (this eq Nil) Nil else {\n      var rest \u003d this\n      var h: ::[B] \u003d null\n      var x: Any \u003d null\n      // Special case for first element\n      while (h eq null) {\n        x \u003d pf.applyOrElse(rest.head, List.partialNotApplied)\n        if (x.asInstanceOf[AnyRef] ne List.partialNotApplied) h \u003d new ::(x.asInstanceOf[B], Nil)\n        rest \u003d rest.tail\n        if (rest eq Nil) return if (h eq null) Nil else h\n      }\n      var t \u003d h\n      // Remaining elements\n      while (rest ne Nil) {\n        x \u003d pf.applyOrElse(rest.head, List.partialNotApplied)\n        if (x.asInstanceOf[AnyRef] ne List.partialNotApplied) {\n          val nx \u003d new ::(x.asInstanceOf[B], Nil)\n          t.next \u003d nx\n          t \u003d nx\n        }\n        rest \u003d rest.tail\n      }\n      releaseFence()\n      h\n    }\n  }\n\n  final override def flatMap[B](f: A \u003d\u003e IterableOnce[B]): List[B] \u003d {\n    var rest \u003d this\n    var h: ::[B] \u003d null\n    var t: ::[B] \u003d null\n    while (rest ne Nil) {\n      val it \u003d f(rest.head).iterator\n      while (it.hasNext) {\n        val nx \u003d new ::(it.next(), Nil)\n        if (t eq null) {\n          h \u003d nx\n        } else {\n          t.next \u003d nx\n        }\n        t \u003d nx\n      }\n      rest \u003d rest.tail\n    }\n    if (h eq null) Nil else {releaseFence(); h}\n  }\n\n  @inline final override def takeWhile(p: A \u003d\u003e Boolean): List[A] \u003d {\n    val b \u003d new ListBuffer[A]\n    var these \u003d this\n    while (!these.isEmpty \u0026\u0026 p(these.head)) {\n      b +\u003d these.head\n      these \u003d these.tail\n    }\n    b.toList\n  }\n\n  @inline final override def span(p: A \u003d\u003e Boolean): (List[A], List[A]) \u003d {\n    val b \u003d new ListBuffer[A]\n    var these \u003d this\n    while (!these.isEmpty \u0026\u0026 p(these.head)) {\n      b +\u003d these.head\n      these \u003d these.tail\n    }\n    (b.toList, these)\n  }\n\n  // Overridden with an implementation identical to the inherited one (at this time)\n  // solely so it can be finalized and thus inlinable.\n  @inline final override def foreach[U](f: A \u003d\u003e U): Unit \u003d {\n    var these \u003d this\n    while (!these.isEmpty) {\n      f(these.head)\n      these \u003d these.tail\n    }\n  }\n\n  final override def reverse: List[A] \u003d {\n    var result: List[A] \u003d Nil\n    var these \u003d this\n    while (!these.isEmpty) {\n      result \u003d these.head :: result\n      these \u003d these.tail\n    }\n    result\n  }\n\n  final override def foldRight[B](z: B)(op: (A, B) \u003d\u003e B): B \u003d {\n    var acc \u003d z\n    var these: List[A] \u003d reverse\n    while (!these.isEmpty) {\n      acc \u003d op(these.head, acc)\n      these \u003d these.tail\n    }\n    acc\n  }\n\n  // Copy/Paste overrides to avoid interface calls inside loops.\n\n  override final def length: Int \u003d {\n    var these \u003d this\n    var len \u003d 0\n    while (!these.isEmpty) {\n      len +\u003d 1\n      these \u003d these.tail\n    }\n    len\n  }\n\n  override final def lengthCompare(len: Int): Int \u003d {\n    @tailrec def loop(i: Int, xs: List[A]): Int \u003d {\n      if (i \u003d\u003d len)\n        if (xs.isEmpty) 0 else 1\n      else if (xs.isEmpty)\n        -1\n      else\n        loop(i + 1, xs.tail)\n    }\n    if (len \u003c 0) 1\n    else loop(0, coll)\n  }\n\n  override final def forall(p: A \u003d\u003e Boolean): Boolean \u003d {\n    var these: List[A] \u003d this\n    while (!these.isEmpty) {\n      if (!p(these.head)) return false\n      these \u003d these.tail\n    }\n    true\n  }\n\n  override final def exists(p: A \u003d\u003e Boolean): Boolean \u003d {\n    var these: List[A] \u003d this\n    while (!these.isEmpty) {\n      if (p(these.head)) return true\n      these \u003d these.tail\n    }\n    false\n  }\n\n  override final def contains[A1 \u003e: A](elem: A1): Boolean \u003d {\n    var these: List[A] \u003d this\n    while (!these.isEmpty) {\n      if (these.head \u003d\u003d elem) return true\n      these \u003d these.tail\n    }\n    false\n  }\n\n  override final def find(p: A \u003d\u003e Boolean): Option[A] \u003d {\n    var these: List[A] \u003d this\n    while (!these.isEmpty) {\n      if (p(these.head)) return Some(these.head)\n      these \u003d these.tail\n    }\n    None\n  }\n\n  override def last: A \u003d {\n    if (isEmpty) throw new NoSuchElementException(\"List.last\")\n    else {\n      var these \u003d this\n      var scout \u003d tail\n      while (!scout.isEmpty) {\n        these \u003d scout\n        scout \u003d scout.tail\n      }\n      these.head\n    }\n  }\n\n  override def corresponds[B](that: collection.Seq[B])(p: (A, B) \u003d\u003e Boolean): Boolean \u003d that match {\n    case that: LinearSeq[B] \u003d\u003e\n      var i \u003d this\n      var j \u003d that\n      while (!(i.isEmpty || j.isEmpty)) {\n        if (!p(i.head, j.head))\n          return false\n        i \u003d i.tail\n        j \u003d j.tail\n      }\n      i.isEmpty \u0026\u0026 j.isEmpty\n    case _ \u003d\u003e\n      super.corresponds(that)(p)\n  }\n\n  override protected[this] def className \u003d \"List\"\n\n  /** Builds a new list by applying a function to all elements of this list.\n    *  Like `xs map f`, but returns `xs` unchanged if function\n    *  `f` maps all elements to themselves (as determined by `eq`).\n    *\n    *  @param f      the function to apply to each element.\n    *  @tparam B     the element type of the returned collection.\n    *  @return       a list resulting from applying the given function\n    *                `f` to each element of this list and collecting the results.\n    */\n  @`inline` final def mapConserve[B \u003e: A \u003c: AnyRef](f: A \u003d\u003e B): List[B] \u003d {\n    // Note to developers: there exists a duplication between this function and `reflect.internal.util.Collections#map2Conserve`.\n    // If any successful optimization attempts or other changes are made, please rehash them there too.\n    @tailrec\n    def loop(mappedHead: List[B], mappedLast: ::[B], unchanged: List[A], pending: List[A]): List[B] \u003d {\n      if (pending.isEmpty) {\n        if (mappedHead eq null) unchanged\n        else {\n          mappedLast.next \u003d (unchanged: List[B])\n          mappedHead\n        }\n      }\n      else {\n        val head0 \u003d pending.head\n        val head1 \u003d f(head0)\n\n        if (head1 eq head0.asInstanceOf[AnyRef])\n          loop(mappedHead, mappedLast, unchanged, pending.tail)\n        else {\n          var xc \u003d unchanged\n          var mappedHead1: List[B] \u003d mappedHead\n          var mappedLast1: ::[B] \u003d mappedLast\n          while (xc ne pending) {\n            val next \u003d new ::[B](xc.head, Nil)\n            if (mappedHead1 eq null) mappedHead1 \u003d next\n            if (mappedLast1 ne null) mappedLast1.next \u003d next\n            mappedLast1 \u003d next\n            xc \u003d xc.tail\n          }\n          val next \u003d new ::(head1, Nil)\n          if (mappedHead1 eq null) mappedHead1 \u003d next\n          if (mappedLast1 ne null) mappedLast1.next \u003d next\n          mappedLast1 \u003d next\n          val tail0 \u003d pending.tail\n          loop(mappedHead1, mappedLast1, tail0, tail0)\n\n        }\n      }\n    }\n    val result \u003d loop(null, null, this, this)\n    releaseFence()\n    result\n  }\n\n  override def filter(p: A \u003d\u003e Boolean): List[A] \u003d filterCommon(p, isFlipped \u003d false)\n\n  override def filterNot(p: A \u003d\u003e Boolean): List[A] \u003d filterCommon(p, isFlipped \u003d true)\n\n  private[this] def filterCommon(p: A \u003d\u003e Boolean, isFlipped: Boolean): List[A] \u003d {\n\n    // everything seen so far so far is not included\n    @tailrec def noneIn(l: List[A]): List[A] \u003d {\n      if (l.isEmpty)\n        Nil\n      else {\n        val h \u003d l.head\n        val t \u003d l.tail\n        if (p(h) !\u003d isFlipped)\n          allIn(l, t)\n        else\n          noneIn(t)\n      }\n    }\n\n    // everything from \u0027start\u0027 is included, if everything from this point is in we can return the origin\n    // start otherwise if we discover an element that is out we must create a new partial list.\n    @tailrec def allIn(start: List[A], remaining: List[A]): List[A] \u003d {\n      if (remaining.isEmpty)\n        start\n      else {\n        val x \u003d remaining.head\n        if (p(x) !\u003d isFlipped)\n          allIn(start, remaining.tail)\n        else\n          partialFill(start, remaining)\n      }\n    }\n\n    // we have seen elements that should be included then one that should be excluded, start building\n    def partialFill(origStart: List[A], firstMiss: List[A]): List[A] \u003d {\n      val newHead \u003d new ::(origStart.head, Nil)\n      var toProcess \u003d origStart.tail\n      var currentLast \u003d newHead\n\n      // we know that all elements are :: until at least firstMiss.tail\n      while (!(toProcess eq firstMiss)) {\n        val newElem \u003d new ::(toProcess.head, Nil)\n        currentLast.next \u003d newElem\n        currentLast \u003d newElem\n        toProcess \u003d toProcess.tail\n      }\n\n      // at this point newHead points to a list which is a duplicate of all the \u0027in\u0027 elements up to the first miss.\n      // currentLast is the last element in that list.\n\n      // now we are going to try and share as much of the tail as we can, only moving elements across when we have to.\n      var next \u003d firstMiss.tail\n      var nextToCopy \u003d next // the next element we would need to copy to our list if we cant share.\n      while (!next.isEmpty) {\n        // generally recommended is next.isNonEmpty but this incurs an extra method call.\n        val head: A \u003d next.head\n        if (p(head) !\u003d isFlipped) {\n          next \u003d next.tail\n        } else {\n          // its not a match - do we have outstanding elements?\n          while (!(nextToCopy eq next)) {\n            val newElem \u003d new ::(nextToCopy.head, Nil)\n            currentLast.next \u003d newElem\n            currentLast \u003d newElem\n            nextToCopy \u003d nextToCopy.tail\n          }\n          nextToCopy \u003d next.tail\n          next \u003d next.tail\n        }\n      }\n\n      // we have remaining elements - they are unchanged attach them to the end\n      if (!nextToCopy.isEmpty)\n        currentLast.next \u003d nextToCopy\n\n      newHead\n    }\n\n    val result \u003d noneIn(this)\n    releaseFence()\n    result\n  }\n\n  override def partition(p: A \u003d\u003e Boolean): (List[A], List[A]) \u003d {\n    if (isEmpty) List.TupleOfNil\n    else super.partition(p) match {\n      case (Nil, xs) \u003d\u003e (Nil, this)\n      case (xs, Nil) \u003d\u003e (this, Nil)\n      case pair \u003d\u003e pair\n    }\n  }\n\n  final override def toList: List[A] \u003d this\n\n  // Override for performance\n  override def equals(o: scala.Any): Boolean \u003d {\n    @tailrec def listEq(a: List[_], b: List[_]): Boolean \u003d\n      (a eq b) || {\n        val aEmpty \u003d a.isEmpty\n        val bEmpty \u003d b.isEmpty\n        if (!(aEmpty || bEmpty) \u0026\u0026 a.head \u003d\u003d b.head) {\n          listEq(a.tail, b.tail)\n        }\n        else {\n          aEmpty \u0026\u0026 bEmpty\n        }\n      }\n\n    o match {\n      case that: List[_] \u003d\u003e listEq(this, that)\n      case _ \u003d\u003e super.equals(o)\n    }\n  }\n\n  // TODO: uncomment once bincompat allows (reference: scala/scala#9365)\n  /*\n  // Override for performance: traverse only as much as needed\n  // and share tail when nothing needs to be filtered out anymore\n  override def diff[B \u003e: A](that: collection.Seq[B]): AnyRef \u003d {\n    if (that.isEmpty || this.isEmpty) this\n    else if (tail.isEmpty) if (that.contains(head)) Nil else this\n    else {\n      val occ \u003d occCounts(that)\n      val b \u003d new ListBuffer[A]()\n      @tailrec\n      def rec(remainder: List[A]): List[A] \u003d {\n        if(occ.isEmpty) b.prependToList(remainder)\n        else remainder match {\n          case Nil \u003d\u003e b.result()\n          case head :: next \u003d\u003e {\n            occ.updateWith(head){\n              case None \u003d\u003e {\n                b.append(head)\n                None\n              }\n              case Some(1) \u003d\u003e None\n              case Some(n) \u003d\u003e Some(n - 1)\n            }\n            rec(next)\n          }\n        }\n      }\n      rec(this)\n    }\n  }\n  */\n\n}\n\n// Internal code that mutates `next` _must_ call `Statics.releaseFence()` if either immediately, or\n// before a newly-allocated, thread-local :: instance is aliased (e.g. in ListBuffer.toList)\nfinal case class :: [+A](override val head: A, private[scala] var next: List[A @uncheckedVariance]) // sound because `next` is used only locally\n  extends List[A] {\n  releaseFence()\n  override def headOption: Some[A] \u003d Some(head)\n  override def tail: List[A] \u003d next\n}\n\ncase object Nil extends List[Nothing] {\n  override def head: Nothing \u003d throw new NoSuchElementException(\"head of empty list\")\n  override def headOption: None.type \u003d None\n  override def tail: Nothing \u003d throw new UnsupportedOperationException(\"tail of empty list\")\n  override def last: Nothing \u003d throw new NoSuchElementException(\"last of empty list\")\n  override def init: Nothing \u003d throw new UnsupportedOperationException(\"init of empty list\")\n  override def knownSize: Int \u003d 0\n  override def iterator: Iterator[Nothing] \u003d Iterator.empty\n  override def unzip[A1, A2](implicit asPair: Nothing \u003d\u003e (A1, A2)): (List[A1], List[A2]) \u003d EmptyUnzip\n\n  @transient\n  private[this] val EmptyUnzip \u003d (Nil, Nil)\n}\n\n/**\n  * $factoryInfo\n  * @define coll list\n  * @define Coll `List`\n  */\n@SerialVersionUID(3L)\nobject List extends StrictOptimizedSeqFactory[List] {\n  private val TupleOfNil \u003d (Nil, Nil)\n\n  def from[B](coll: collection.IterableOnce[B]): List[B] \u003d Nil.prependedAll(coll)\n\n  def newBuilder[A]: Builder[A, List[A]] \u003d new ListBuffer()\n\n  def empty[A]: List[A] \u003d Nil\n\n  @transient\n  private[collection] val partialNotApplied \u003d new Function1[Any, Any] { def apply(x: Any): Any \u003d this }\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 1:26:40 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/collection/immutable/List.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:26:40 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:26:40 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/collection/immutable/List.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\npackage scala\npackage collection\npackage immutable\n\nimport scala.annotation.unchecked.uncheckedVariance\nimport scala.annotation.tailrec\nimport mutable.{Builder, ListBuffer}\nimport scala.collection.generic.DefaultSerializable\nimport scala.runtime.Statics.releaseFence\n\n/** A class for immutable linked lists representing ordered collections\n  *  of elements of type `A`.\n  *\n  *  This class comes with two implementing case classes `scala.Nil`\n  *  and `scala.::` that implement the abstract members `isEmpty`,\n  *  `head` and `tail`.\n  *\n  *  This class is optimal for last-in-first-out (LIFO), stack-like access patterns. If you need another access\n  *  pattern, for example, random access or FIFO, consider using a collection more suited to this than `List`.\n  *\n  *  \u003d\u003dPerformance\u003d\u003d\n  *  \u0027\u0027\u0027Time:\u0027\u0027\u0027 `List` has `O(1)` prepend and head/tail access. Most other operations are `O(n)` on the number of elements in the list.\n  *  This includes the index-based lookup of elements, `length`, `append` and `reverse`.\n  *\n  *  \u0027\u0027\u0027Space:\u0027\u0027\u0027 `List` implements \u0027\u0027\u0027structural sharing\u0027\u0027\u0027 of the tail list. This means that many operations are either\n  *  zero- or constant-memory cost.\n  *  {{{\n  *  val mainList \u003d List(3, 2, 1)\n  *  val with4 \u003d    4 :: mainList  // re-uses mainList, costs one :: instance\n  *  val with42 \u003d   42 :: mainList // also re-uses mainList, cost one :: instance\n  *  val shorter \u003d  mainList.tail  // costs nothing as it uses the same 2::1::Nil instances as mainList\n  *  }}}\n  *\n  *  @example {{{\n  *  // Make a list via the companion object factory\n  *  val days \u003d List(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\")\n  *\n  *  // Make a list element-by-element\n  *  val when \u003d \"AM\" :: \"PM\" :: Nil\n  *\n  *  // Pattern match\n  *  days match {\n  *    case firstDay :: otherDays \u003d\u003e\n  *      println(\"The first day of the week is: \" + firstDay)\n  *    case Nil \u003d\u003e\n  *      println(\"There don\u0027t seem to be any week days.\")\n  *  }\n  *  }}}\n  *\n  *  @note The functional list is characterized by persistence and structural sharing, thus offering considerable\n  *        performance and space consumption benefits in some scenarios if used correctly.\n  *        However, note that objects having multiple references into the same functional list (that is,\n  *        objects that rely on structural sharing), will be serialized and deserialized with multiple lists, one for\n  *        each reference to it. I.e. structural sharing is lost after serialization/deserialization.\n  *\n  *  @see  [[https://docs.scala-lang.org/overviews/collections-2.13/concrete-immutable-collection-classes.html#lists \"Scala\u0027s Collection Library overview\"]]\n  *  section on `Lists` for more information.\n  *\n  *  @define coll list\n  *  @define Coll `List`\n  *  @define orderDependent\n  *  @define orderDependentFold\n  *  @define mayNotTerminateInf\n  *  @define willNotTerminateInf\n  */\n@SerialVersionUID(3L)\nsealed abstract class List[+A]\n  extends AbstractSeq[A]\n    with LinearSeq[A]\n    with LinearSeqOps[A, List, List[A]]\n    with StrictOptimizedLinearSeqOps[A, List, List[A]]\n    with StrictOptimizedSeqOps[A, List, List[A]]\n    with IterableFactoryDefaults[A, List]\n    with DefaultSerializable {\n\n  override def iterableFactory: SeqFactory[List] \u003d List\n\n  /** Adds an element at the beginning of this list.\n    *  @param elem the element to prepend.\n    *  @return  a list which contains `x` as first element and\n    *           which continues with this list.\n    *  Example:\n    *  {{{1 :: List(2, 3) \u003d List(2, 3).::(1) \u003d List(1, 2, 3)}}}\n    */\n  def :: [B \u003e: A](elem: B): List[B] \u003d  new ::(elem, this)\n\n  /** Adds the elements of a given list in front of this list.\n    *\n    * Example:\n    * {{{List(1, 2) ::: List(3, 4) \u003d List(3, 4).:::(List(1, 2)) \u003d List(1, 2, 3, 4)}}}\n    *\n    *  @param prefix  The list elements to prepend.\n    *  @return a list resulting from the concatenation of the given\n    *    list `prefix` and this list.\n    */\n  def ::: [B \u003e: A](prefix: List[B]): List[B] \u003d\n    if (isEmpty) prefix\n    else if (prefix.isEmpty) this\n    else {\n      val result \u003d new ::[B](prefix.head, this)\n      var curr \u003d result\n      var that \u003d prefix.tail\n      while (!that.isEmpty) {\n        val temp \u003d new ::[B](that.head, this)\n        curr.next \u003d temp\n        curr \u003d temp\n        that \u003d that.tail\n      }\n      releaseFence()\n      result\n    }\n\n  /** Adds the elements of a given list in reverse order in front of this list.\n    *  `xs reverse_::: ys` is equivalent to\n    *  `xs.reverse ::: ys` but is more efficient.\n    *\n    *  @param prefix the prefix to reverse and then prepend\n    *  @return       the concatenation of the reversed prefix and the current list.\n    */\n  def reverse_:::[B \u003e: A](prefix: List[B]): List[B] \u003d {\n    var these: List[B] \u003d this\n    var pres \u003d prefix\n    while (!pres.isEmpty) {\n      these \u003d pres.head :: these\n      pres \u003d pres.tail\n    }\n    these\n  }\n\n  override final def isEmpty: Boolean \u003d this eq Nil\n\n  override def prepended[B \u003e: A](elem: B): List[B] \u003d elem :: this\n\n  override def prependedAll[B \u003e: A](prefix: collection.IterableOnce[B]): List[B] \u003d prefix match {\n    case xs: List[B] \u003d\u003e xs ::: this\n    case _ if prefix.knownSize \u003d\u003d 0 \u003d\u003e this\n    case b: ListBuffer[B] if this.isEmpty \u003d\u003e b.toList\n    case _ \u003d\u003e\n      val iter \u003d prefix.iterator\n      if (iter.hasNext) {\n        val result \u003d new ::[B](iter.next(), this)\n        var curr \u003d result\n        while (iter.hasNext) {\n          val temp \u003d new ::[B](iter.next(), this)\n          curr.next \u003d temp\n          curr \u003d temp\n        }\n        releaseFence()\n        result\n      } else {\n        this\n      }\n  }\n\n  // When calling appendAll with another list `suffix`, avoid copying `suffix`\n  override def appendedAll[B \u003e: A](suffix: collection.IterableOnce[B]): List[B] \u003d suffix match {\n    case xs: List[B] \u003d\u003e this ::: xs\n    case _ \u003d\u003e super.appendedAll(suffix)\n  }\n\n  override def take(n: Int): List[A] \u003d if (isEmpty || n \u003c\u003d 0) Nil else {\n    val h \u003d new ::(head, Nil)\n    var t \u003d h\n    var rest \u003d tail\n    var i \u003d 1\n    while ({if (rest.isEmpty) return this; i \u003c n}) {\n      i +\u003d 1\n      val nx \u003d new ::(rest.head, Nil)\n      t.next \u003d nx\n      t \u003d nx\n      rest \u003d rest.tail\n    }\n    releaseFence()\n    h\n  }\n\n  /**\n    *  @example {{{\n    *  // Given a list\n    *  val letters \u003d List(\u0027a\u0027,\u0027b\u0027,\u0027c\u0027,\u0027d\u0027,\u0027e\u0027)\n    *\n    *  // `slice` returns all elements beginning at index `from` and afterwards,\n    *  // up until index `until` (excluding index `until`.)\n    *  letters.slice(1,3) // Returns List(\u0027b\u0027,\u0027c\u0027)\n    *  }}}\n    */\n  override def slice(from: Int, until: Int): List[A] \u003d {\n    val lo \u003d scala.math.max(from, 0)\n    if (until \u003c\u003d lo || isEmpty) Nil\n    else this drop lo take (until - lo)\n  }\n\n  override def takeRight(n: Int): List[A] \u003d {\n    @tailrec\n    def loop(lead: List[A], lag: List[A]): List[A] \u003d lead match {\n      case Nil \u003d\u003e lag\n      case _ :: tail \u003d\u003e loop(tail, lag.tail)\n    }\n    loop(drop(n), this)\n  }\n\n  // dropRight is inherited from LinearSeq\n\n  override def splitAt(n: Int): (List[A], List[A]) \u003d {\n    val b \u003d new ListBuffer[A]\n    var i \u003d 0\n    var these \u003d this\n    while (!these.isEmpty \u0026\u0026 i \u003c n) {\n      i +\u003d 1\n      b +\u003d these.head\n      these \u003d these.tail\n    }\n    (b.toList, these)\n  }\n\n  override def updated[B \u003e: A](index: Int, elem: B): List[B] \u003d {\n    var i \u003d 0\n    var current \u003d this\n    val prefix \u003d ListBuffer.empty[B]\n    while (i \u003c index \u0026\u0026 current.nonEmpty) {\n      i +\u003d 1\n      prefix +\u003d current.head\n      current \u003d current.tail\n    }\n    if (i \u003d\u003d index \u0026\u0026 current.nonEmpty) {\n      prefix.prependToList(elem :: current.tail)\n    } else {\n      throw new IndexOutOfBoundsException(s\"$index is out of bounds (min 0, max ${length-1})\")\n    }\n  }\n\n  final override def map[B](f: A \u003d\u003e B): List[B] \u003d {\n    if (this eq Nil) Nil else {\n      val h \u003d new ::[B](f(head), Nil)\n      var t: ::[B] \u003d h\n      var rest \u003d tail\n      while (rest ne Nil) {\n        val nx \u003d new ::(f(rest.head), Nil)\n        t.next \u003d nx\n        t \u003d nx\n        rest \u003d rest.tail\n      }\n      releaseFence()\n      h\n    }\n  }\n\n  final override def collect[B](pf: PartialFunction[A, B]): List[B] \u003d {\n    if (this eq Nil) Nil else {\n      var rest \u003d this\n      var h: ::[B] \u003d null\n      var x: Any \u003d null\n      // Special case for first element\n      while (h eq null) {\n        x \u003d pf.applyOrElse(rest.head, List.partialNotApplied)\n        if (x.asInstanceOf[AnyRef] ne List.partialNotApplied) h \u003d new ::(x.asInstanceOf[B], Nil)\n        rest \u003d rest.tail\n        if (rest eq Nil) return if (h eq null) Nil else h\n      }\n      var t \u003d h\n      // Remaining elements\n      while (rest ne Nil) {\n        x \u003d pf.applyOrElse(rest.head, List.partialNotApplied)\n        if (x.asInstanceOf[AnyRef] ne List.partialNotApplied) {\n          val nx \u003d new ::(x.asInstanceOf[B], Nil)\n          t.next \u003d nx\n          t \u003d nx\n        }\n        rest \u003d rest.tail\n      }\n      releaseFence()\n      h\n    }\n  }\n\n  final override def flatMap[B](f: A \u003d\u003e IterableOnce[B]): List[B] \u003d {\n    var rest \u003d this\n    var h: ::[B] \u003d null\n    var t: ::[B] \u003d null\n    while (rest ne Nil) {\n      val it \u003d f(rest.head).iterator\n      while (it.hasNext) {\n        val nx \u003d new ::(it.next(), Nil)\n        if (t eq null) {\n          h \u003d nx\n        } else {\n          t.next \u003d nx\n        }\n        t \u003d nx\n      }\n      rest \u003d rest.tail\n    }\n    if (h eq null) Nil else {releaseFence(); h}\n  }\n\n  @inline final override def takeWhile(p: A \u003d\u003e Boolean): List[A] \u003d {\n    val b \u003d new ListBuffer[A]\n    var these \u003d this\n    while (!these.isEmpty \u0026\u0026 p(these.head)) {\n      b +\u003d these.head\n      these \u003d these.tail\n    }\n    b.toList\n  }\n\n  @inline final override def span(p: A \u003d\u003e Boolean): (List[A], List[A]) \u003d {\n    val b \u003d new ListBuffer[A]\n    var these \u003d this\n    while (!these.isEmpty \u0026\u0026 p(these.head)) {\n      b +\u003d these.head\n      these \u003d these.tail\n    }\n    (b.toList, these)\n  }\n\n  // Overridden with an implementation identical to the inherited one (at this time)\n  // solely so it can be finalized and thus inlinable.\n  @inline final override def foreach[U](f: A \u003d\u003e U): Unit \u003d {\n    var these \u003d this\n    while (!these.isEmpty) {\n      f(these.head)\n      these \u003d these.tail\n    }\n  }\n\n  final override def reverse: List[A] \u003d {\n    var result: List[A] \u003d Nil\n    var these \u003d this\n    while (!these.isEmpty) {\n      result \u003d these.head :: result\n      these \u003d these.tail\n    }\n    result\n  }\n\n  final override def foldRight[B](z: B)(op: (A, B) \u003d\u003e B): B \u003d {\n    var acc \u003d z\n    var these: List[A] \u003d reverse\n    while (!these.isEmpty) {\n      acc \u003d op(these.head, acc)\n      these \u003d these.tail\n    }\n    acc\n  }\n\n  // Copy/Paste overrides to avoid interface calls inside loops.\n\n  override final def length: Int \u003d {\n    var these \u003d this\n    var len \u003d 0\n    while (!these.isEmpty) {\n      len +\u003d 1\n      these \u003d these.tail\n    }\n    len\n  }\n\n  override final def lengthCompare(len: Int): Int \u003d {\n    @tailrec def loop(i: Int, xs: List[A]): Int \u003d {\n      if (i \u003d\u003d len)\n        if (xs.isEmpty) 0 else 1\n      else if (xs.isEmpty)\n        -1\n      else\n        loop(i + 1, xs.tail)\n    }\n    if (len \u003c 0) 1\n    else loop(0, coll)\n  }\n\n  override final def forall(p: A \u003d\u003e Boolean): Boolean \u003d {\n    var these: List[A] \u003d this\n    while (!these.isEmpty) {\n      if (!p(these.head)) return false\n      these \u003d these.tail\n    }\n    true\n  }\n\n  override final def exists(p: A \u003d\u003e Boolean): Boolean \u003d {\n    var these: List[A] \u003d this\n    while (!these.isEmpty) {\n      if (p(these.head)) return true\n      these \u003d these.tail\n    }\n    false\n  }\n\n  override final def contains[A1 \u003e: A](elem: A1): Boolean \u003d {\n    var these: List[A] \u003d this\n    while (!these.isEmpty) {\n      if (these.head \u003d\u003d elem) return true\n      these \u003d these.tail\n    }\n    false\n  }\n\n  override final def find(p: A \u003d\u003e Boolean): Option[A] \u003d {\n    var these: List[A] \u003d this\n    while (!these.isEmpty) {\n      if (p(these.head)) return Some(these.head)\n      these \u003d these.tail\n    }\n    None\n  }\n\n  override def last: A \u003d {\n    if (isEmpty) throw new NoSuchElementException(\"List.last\")\n    else {\n      var these \u003d this\n      var scout \u003d tail\n      while (!scout.isEmpty) {\n        these \u003d scout\n        scout \u003d scout.tail\n      }\n      these.head\n    }\n  }\n\n  override def corresponds[B](that: collection.Seq[B])(p: (A, B) \u003d\u003e Boolean): Boolean \u003d that match {\n    case that: LinearSeq[B] \u003d\u003e\n      var i \u003d this\n      var j \u003d that\n      while (!(i.isEmpty || j.isEmpty)) {\n        if (!p(i.head, j.head))\n          return false\n        i \u003d i.tail\n        j \u003d j.tail\n      }\n      i.isEmpty \u0026\u0026 j.isEmpty\n    case _ \u003d\u003e\n      super.corresponds(that)(p)\n  }\n\n  override protected[this] def className \u003d \"List\"\n\n  /** Builds a new list by applying a function to all elements of this list.\n    *  Like `xs map f`, but returns `xs` unchanged if function\n    *  `f` maps all elements to themselves (as determined by `eq`).\n    *\n    *  @param f      the function to apply to each element.\n    *  @tparam B     the element type of the returned collection.\n    *  @return       a list resulting from applying the given function\n    *                `f` to each element of this list and collecting the results.\n    */\n  @`inline` final def mapConserve[B \u003e: A \u003c: AnyRef](f: A \u003d\u003e B): List[B] \u003d {\n    // Note to developers: there exists a duplication between this function and `reflect.internal.util.Collections#map2Conserve`.\n    // If any successful optimization attempts or other changes are made, please rehash them there too.\n    @tailrec\n    def loop(mappedHead: List[B], mappedLast: ::[B], unchanged: List[A], pending: List[A]): List[B] \u003d {\n      if (pending.isEmpty) {\n        if (mappedHead eq null) unchanged\n        else {\n          mappedLast.next \u003d (unchanged: List[B])\n          mappedHead\n        }\n      }\n      else {\n        val head0 \u003d pending.head\n        val head1 \u003d f(head0)\n\n        if (head1 eq head0.asInstanceOf[AnyRef])\n          loop(mappedHead, mappedLast, unchanged, pending.tail)\n        else {\n          var xc \u003d unchanged\n          var mappedHead1: List[B] \u003d mappedHead\n          var mappedLast1: ::[B] \u003d mappedLast\n          while (xc ne pending) {\n            val next \u003d new ::[B](xc.head, Nil)\n            if (mappedHead1 eq null) mappedHead1 \u003d next\n            if (mappedLast1 ne null) mappedLast1.next \u003d next\n            mappedLast1 \u003d next\n            xc \u003d xc.tail\n          }\n          val next \u003d new ::(head1, Nil)\n          if (mappedHead1 eq null) mappedHead1 \u003d next\n          if (mappedLast1 ne null) mappedLast1.next \u003d next\n          mappedLast1 \u003d next\n          val tail0 \u003d pending.tail\n          loop(mappedHead1, mappedLast1, tail0, tail0)\n\n        }\n      }\n    }\n    val result \u003d loop(null, null, this, this)\n    releaseFence()\n    result\n  }\n\n  override def filter(p: A \u003d\u003e Boolean): List[A] \u003d filterCommon(p, isFlipped \u003d false)\n\n  override def filterNot(p: A \u003d\u003e Boolean): List[A] \u003d filterCommon(p, isFlipped \u003d true)\n\n  private[this] def filterCommon(p: A \u003d\u003e Boolean, isFlipped: Boolean): List[A] \u003d {\n\n    // everything seen so far so far is not included\n    @tailrec def noneIn(l: List[A]): List[A] \u003d {\n      if (l.isEmpty)\n        Nil\n      else {\n        val h \u003d l.head\n        val t \u003d l.tail\n        if (p(h) !\u003d isFlipped)\n          allIn(l, t)\n        else\n          noneIn(t)\n      }\n    }\n\n    // everything from \u0027start\u0027 is included, if everything from this point is in we can return the origin\n    // start otherwise if we discover an element that is out we must create a new partial list.\n    @tailrec def allIn(start: List[A], remaining: List[A]): List[A] \u003d {\n      if (remaining.isEmpty)\n        start\n      else {\n        val x \u003d remaining.head\n        if (p(x) !\u003d isFlipped)\n          allIn(start, remaining.tail)\n        else\n          partialFill(start, remaining)\n      }\n    }\n\n    // we have seen elements that should be included then one that should be excluded, start building\n    def partialFill(origStart: List[A], firstMiss: List[A]): List[A] \u003d {\n      val newHead \u003d new ::(origStart.head, Nil)\n      var toProcess \u003d origStart.tail\n      var currentLast \u003d newHead\n\n      // we know that all elements are :: until at least firstMiss.tail\n      while (!(toProcess eq firstMiss)) {\n        val newElem \u003d new ::(toProcess.head, Nil)\n        currentLast.next \u003d newElem\n        currentLast \u003d newElem\n        toProcess \u003d toProcess.tail\n      }\n\n      // at this point newHead points to a list which is a duplicate of all the \u0027in\u0027 elements up to the first miss.\n      // currentLast is the last element in that list.\n\n      // now we are going to try and share as much of the tail as we can, only moving elements across when we have to.\n      var next \u003d firstMiss.tail\n      var nextToCopy \u003d next // the next element we would need to copy to our list if we cant share.\n      while (!next.isEmpty) {\n        // generally recommended is next.isNonEmpty but this incurs an extra method call.\n        val head: A \u003d next.head\n        if (p(head) !\u003d isFlipped) {\n          next \u003d next.tail\n        } else {\n          // its not a match - do we have outstanding elements?\n          while (!(nextToCopy eq next)) {\n            val newElem \u003d new ::(nextToCopy.head, Nil)\n            currentLast.next \u003d newElem\n            currentLast \u003d newElem\n            nextToCopy \u003d nextToCopy.tail\n          }\n          nextToCopy \u003d next.tail\n          next \u003d next.tail\n        }\n      }\n\n      // we have remaining elements - they are unchanged attach them to the end\n      if (!nextToCopy.isEmpty)\n        currentLast.next \u003d nextToCopy\n\n      newHead\n    }\n\n    val result \u003d noneIn(this)\n    releaseFence()\n    result\n  }\n\n  override def partition(p: A \u003d\u003e Boolean): (List[A], List[A]) \u003d {\n    if (isEmpty) List.TupleOfNil\n    else super.partition(p) match {\n      case (Nil, xs) \u003d\u003e (Nil, this)\n      case (xs, Nil) \u003d\u003e (this, Nil)\n      case pair \u003d\u003e pair\n    }\n  }\n\n  final override def toList: List[A] \u003d this\n\n  // Override for performance\n  override def equals(o: scala.Any): Boolean \u003d {\n    @tailrec def listEq(a: List[_], b: List[_]): Boolean \u003d\n      (a eq b) || {\n        val aEmpty \u003d a.isEmpty\n        val bEmpty \u003d b.isEmpty\n        if (!(aEmpty || bEmpty) \u0026\u0026 a.head \u003d\u003d b.head) {\n          listEq(a.tail, b.tail)\n        }\n        else {\n          aEmpty \u0026\u0026 bEmpty\n        }\n      }\n\n    o match {\n      case that: List[_] \u003d\u003e listEq(this, that)\n      case _ \u003d\u003e super.equals(o)\n    }\n  }\n\n  // TODO: uncomment once bincompat allows (reference: scala/scala#9365)\n  /*\n  // Override for performance: traverse only as much as needed\n  // and share tail when nothing needs to be filtered out anymore\n  override def diff[B \u003e: A](that: collection.Seq[B]): AnyRef \u003d {\n    if (that.isEmpty || this.isEmpty) this\n    else if (tail.isEmpty) if (that.contains(head)) Nil else this\n    else {\n      val occ \u003d occCounts(that)\n      val b \u003d new ListBuffer[A]()\n      @tailrec\n      def rec(remainder: List[A]): List[A] \u003d {\n        if(occ.isEmpty) b.prependToList(remainder)\n        else remainder match {\n          case Nil \u003d\u003e b.result()\n          case head :: next \u003d\u003e {\n            occ.updateWith(head){\n              case None \u003d\u003e {\n                b.append(head)\n                None\n              }\n              case Some(1) \u003d\u003e None\n              case Some(n) \u003d\u003e Some(n - 1)\n            }\n            rec(next)\n          }\n        }\n      }\n      rec(this)\n    }\n  }\n  */\n\n}\n\n// Internal code that mutates `next` _must_ call `Statics.releaseFence()` if either immediately, or\n// before a newly-allocated, thread-local :: instance is aliased (e.g. in ListBuffer.toList)\nfinal case class :: [+A](override val head: A, private[scala] var next: List[A @uncheckedVariance]) // sound because `next` is used only locally\n  extends List[A] {\n  releaseFence()\n  override def headOption: Some[A] \u003d Some(head)\n  override def tail: List[A] \u003d next\n}\n\ncase object Nil extends List[Nothing] {\n  override def head: Nothing \u003d throw new NoSuchElementException(\"head of empty list\")\n  override def headOption: None.type \u003d None\n  override def tail: Nothing \u003d throw new UnsupportedOperationException(\"tail of empty list\")\n  override def last: Nothing \u003d throw new NoSuchElementException(\"last of empty list\")\n  override def init: Nothing \u003d throw new UnsupportedOperationException(\"init of empty list\")\n  override def knownSize: Int \u003d 0\n  override def iterator: Iterator[Nothing] \u003d Iterator.empty\n  override def unzip[A1, A2](implicit asPair: Nothing \u003d\u003e (A1, A2)): (List[A1], List[A2]) \u003d EmptyUnzip\n\n  @transient\n  private[this] val EmptyUnzip \u003d (Nil, Nil)\n}\n\n/**\n  * $factoryInfo\n  * @define coll list\n  * @define Coll `List`\n  */\n@SerialVersionUID(3L)\nobject List extends StrictOptimizedSeqFactory[List] {\n  private val TupleOfNil \u003d (Nil, Nil)\n\n  def from[B](coll: collection.IterableOnce[B]): List[B] \u003d Nil.prependedAll(coll)\n\n  def newBuilder[A]: Builder[A, List[A]] \u003d new ListBuffer()\n\n  def empty[A]: List[A] \u003d Nil\n\n  @transient\n  private[collection] val partialNotApplied \u003d new Function1[Any, Any] { def apply(x: Any): Any \u003d this }\n}\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:26:54 INFO  compiling root (2 scala sources)
2024.04.26 01:26:54 INFO  time: compiled root in 0.18s
2024.04.26 01:27:13 INFO  compiling root (2 scala sources)
2024.04.26 01:27:13 INFO  time: compiled root in 0.14s
2024.04.26 01:27:27 INFO  compiling root (2 scala sources)
2024.04.26 01:27:27 INFO  time: compiled root in 0.14s
2024.04.26 01:27:42 WARN  Using indexes to guess the definition of nextLPlus
2024.04.26 01:27:46 INFO  compiling root (2 scala sources)
2024.04.26 01:27:46 INFO  time: compiled root in 0.61s
2024.04.26 01:27:46 INFO  compiling root (1 scala source)
2024.04.26 01:27:46 INFO  time: compiled root in 88ms
2024.04.26 01:28:45 INFO  compiling root (5 scala sources)
2024.04.26 01:28:45 INFO  time: compiled root in 0.15s
2024.04.26 01:28:54 INFO  compiling root (5 scala sources)
2024.04.26 01:28:54 INFO  time: compiled root in 0.15s
Apr. 26, 2024 1:29:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 13073
Apr. 26, 2024 1:29:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 13076
Apr. 26, 2024 1:29:34 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Option.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Option.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 1:29:40 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/collection/immutable/List.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/collection/immutable/List.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:30:15 INFO  compiling root (5 scala sources)
2024.04.26 01:30:15 INFO  time: compiled root in 0.17s
2024.04.26 01:30:16 INFO  compiling root (5 scala sources)
2024.04.26 01:30:16 INFO  time: compiled root in 0.32s
2024.04.26 01:30:42 INFO  compiling root (5 scala sources)
2024.04.26 01:30:42 INFO  time: compiled root in 0.24s
2024.04.26 01:30:55 INFO  compiling root (5 scala sources)
2024.04.26 01:30:55 INFO  time: compiled root in 0.28s
2024.04.26 01:31:09 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:31:09 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Unit.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n\n/** `Unit` is a subtype of [[scala.AnyVal]]. There is only one value of type\n *  `Unit`, `()`, and it is not represented by any object in the underlying\n *  runtime system. A method with return type `Unit` is analogous to a Java\n *  method which is declared `void`.\n */\nfinal abstract class Unit private extends AnyVal {\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Unit] \u003d ???\n}\n\n@scala.annotation.compileTimeOnly(\"`Unit` companion object is not allowed in source; instead, use `()` for the unit value\")\nobject Unit extends AnyValCompanion {\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  This method is not intended for use in source code.\n   *  The runtime representation of this value is platform specific.\n   *\n   *  @param  x   the Unit to be boxed\n   *  @return     a scala.runtime.BoxedUnit offering `x` as its underlying value.\n   */\n  def box(x: Unit): scala.runtime.BoxedUnit \u003d scala.runtime.BoxedUnit.UNIT\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a scala.runtime.BoxedUnit.\n   *\n   *  This method is not intended for use in source code.\n   *  The result of successfully unboxing a value is `()`.\n   *\n   *  @param  x   the scala.runtime.BoxedUnit to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a scala.runtime.BoxedUnit\n   *  @return     the Unit value ()\n   */\n  def unbox(x: java.lang.Object): Unit \u003d x.asInstanceOf[scala.runtime.BoxedUnit]\n\n  /** The String representation of the scala.Unit companion object. */\n  override def toString \u003d \"object scala.Unit\"\n}\n\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 1:31:09 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Unit.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:31:09 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 1:31:09 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Unit.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n\n/** `Unit` is a subtype of [[scala.AnyVal]]. There is only one value of type\n *  `Unit`, `()`, and it is not represented by any object in the underlying\n *  runtime system. A method with return type `Unit` is analogous to a Java\n *  method which is declared `void`.\n */\nfinal abstract class Unit private extends AnyVal {\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Unit] \u003d ???\n}\n\n@scala.annotation.compileTimeOnly(\"`Unit` companion object is not allowed in source; instead, use `()` for the unit value\")\nobject Unit extends AnyValCompanion {\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  This method is not intended for use in source code.\n   *  The runtime representation of this value is platform specific.\n   *\n   *  @param  x   the Unit to be boxed\n   *  @return     a scala.runtime.BoxedUnit offering `x` as its underlying value.\n   */\n  def box(x: Unit): scala.runtime.BoxedUnit \u003d scala.runtime.BoxedUnit.UNIT\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a scala.runtime.BoxedUnit.\n   *\n   *  This method is not intended for use in source code.\n   *  The result of successfully unboxing a value is `()`.\n   *\n   *  @param  x   the scala.runtime.BoxedUnit to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a scala.runtime.BoxedUnit\n   *  @return     the Unit value ()\n   */\n  def unbox(x: java.lang.Object): Unit \u003d x.asInstanceOf[scala.runtime.BoxedUnit]\n\n  /** The String representation of the scala.Unit companion object. */\n  override def toString \u003d \"object scala.Unit\"\n}\n\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:32:14 INFO  compiling root (5 scala sources)
2024.04.26 01:32:14 INFO  time: compiled root in 0.26s
2024.04.26 01:32:48 INFO  compiling root (5 scala sources)
2024.04.26 01:32:48 INFO  time: compiled root in 0.24s
2024.04.26 01:33:00 INFO  compiling root (5 scala sources)
2024.04.26 01:33:00 INFO  time: compiled root in 0.26s
2024.04.26 01:33:03 INFO  compiling root (5 scala sources)
2024.04.26 01:33:03 INFO  time: compiled root in 0.28s
2024.04.26 01:33:09 INFO  compiling root (5 scala sources)
2024.04.26 01:33:09 INFO  time: compiled root in 0.26s
2024.04.26 01:33:13 INFO  compiling root (5 scala sources)
2024.04.26 01:33:13 INFO  time: compiled root in 0.22s
2024.04.26 01:33:30 WARN  Using indexes to guess the definition of printBoard
2024.04.26 01:33:30 INFO  compiling root (5 scala sources)
2024.04.26 01:33:30 INFO  time: compiled root in 0.15s
Apr. 26, 2024 1:34:08 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 13853
Apr. 26, 2024 1:34:09 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Unit.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Unit.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 01:34:24 INFO  compiling root (5 scala sources)
2024.04.26 01:34:24 INFO  time: compiled root in 0.16s
2024.04.26 01:34:35 INFO  compiling root (5 scala sources)
2024.04.26 01:34:35 INFO  time: compiled root in 0.16s
2024.04.26 01:35:09 INFO  compiling root (5 scala sources)
2024.04.26 01:35:09 INFO  time: compiled root in 0.17s
2024.04.26 01:35:10 INFO  compiling root (5 scala sources)
2024.04.26 01:35:10 INFO  time: compiled root in 0.2s
2024.04.26 01:35:10 INFO  compiling root (5 scala sources)
2024.04.26 01:35:10 INFO  time: compiled root in 0.16s
2024.04.26 01:35:18 INFO  compiling root (5 scala sources)
2024.04.26 01:35:18 INFO  time: compiled root in 0.16s
2024.04.26 01:35:24 INFO  compiling root (5 scala sources)
2024.04.26 01:35:24 INFO  time: compiled root in 0.17s
2024.04.26 01:35:28 INFO  compiling root (5 scala sources)
2024.04.26 01:35:28 INFO  time: compiled root in 0.14s
2024.04.26 01:36:05 INFO  compiling root (5 scala sources)
2024.04.26 01:36:05 INFO  time: compiled root in 0.15s
2024.04.26 01:36:13 INFO  compiling root (5 scala sources)
2024.04.26 01:36:13 INFO  time: compiled root in 0.14s
2024.04.26 01:36:49 INFO  compiling root (5 scala sources)
2024.04.26 01:36:49 INFO  time: compiled root in 0.14s
2024.04.26 01:37:03 INFO  compiling root (5 scala sources)
2024.04.26 01:37:03 INFO  time: compiled root in 0.45s
2024.04.26 01:37:12 INFO  compiling root (1 scala source)
2024.04.26 01:37:12 INFO  time: compiled root in 0.12s
2024.04.26 01:38:08 INFO  compiling root (1 scala source)
2024.04.26 01:38:08 INFO  time: compiled root in 0.1s
2024.04.26 01:38:08 INFO  compiling root (1 scala source)
2024.04.26 01:38:08 INFO  time: compiled root in 0.11s
2024.04.26 01:38:16 INFO  compiling root (1 scala source)
2024.04.26 01:38:16 INFO  time: compiled root in 0.12s
2024.04.26 01:38:20 INFO  compiling root (1 scala source)
2024.04.26 01:38:20 INFO  time: compiled root in 0.11s
2024.04.26 01:38:27 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 2h 32m 0.287s)
2024.04.26 01:38:27 INFO  compiling root-test (3 scala sources)
2024.04.26 01:38:27 INFO  time: compiled root-test in 0.27s
2024.04.26 01:38:28 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:38:28 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:38:28 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:38:27 INFO  Loaded expression compiler in 1 millisecond
2024.04.26 01:38:27 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:38:29 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:38:29 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64151 .
2024.04.26 01:38:29 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:38:30 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:38:29 INFO  Closing debug server tcp://0.0.0.0:64149
2024.04.26 01:38:48 INFO  compiling root (1 scala source)
2024.04.26 01:38:48 INFO  time: compiled root in 0.12s
2024.04.26 01:38:51 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 2h 32m 23.81s)
2024.04.26 01:38:51 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:38:51 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:38:51 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:38:51 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 01:38:51 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:38:52 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:38:52 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64167 .
2024.04.26 01:38:52 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:38:53 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:38:53 INFO  Closing debug server tcp://0.0.0.0:64165
2024.04.26 01:39:25 INFO  compiling root (1 scala source)
2024.04.26 01:39:25 INFO  time: compiled root in 0.22s
2024.04.26 01:39:34 INFO  compiling root (1 scala source)
2024.04.26 01:39:34 INFO  time: compiled root in 0.2s
2024.04.26 01:39:34 INFO  compiling root (1 scala source)
2024.04.26 01:39:34 INFO  time: compiled root in 0.11s
2024.04.26 01:39:38 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 2h 33m 11.122s)
2024.04.26 01:39:38 INFO  compiling root-test (3 scala sources)
2024.04.26 01:39:38 INFO  time: compiled root-test in 0.23s
2024.04.26 01:39:39 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:39:39 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:39:39 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:39:38 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 01:39:38 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:39:40 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:39:40 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64191 .
2024.04.26 01:39:40 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:39:41 INFO  Closing debug server tcp://0.0.0.0:64189
2024.04.26 01:39:41 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:40:26 INFO  compiling root (1 scala source)
2024.04.26 01:40:26 INFO  time: compiled root in 0.27s
2024.04.26 01:40:29 INFO  compiling root-test (3 scala sources)
2024.04.26 01:40:29 INFO  time: compiled root-test in 0.21s
2024.04.26 01:40:29 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:40:29 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:40:29 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:40:29 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 01:40:29 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:40:31 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:40:31 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64220 .
2024.04.26 01:40:31 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:40:31 INFO  Closing debug server tcp://0.0.0.0:64217
2024.04.26 01:40:31 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:40:49 INFO  compiling root (1 scala source)
2024.04.26 01:40:49 INFO  time: compiled root in 0.12s
2024.04.26 01:41:27 INFO  compiling root (1 scala source)
2024.04.26 01:41:27 INFO  time: compiled root in 0.21s
2024.04.26 01:41:31 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 2h 35m 3.405s)
2024.04.26 01:41:31 INFO  compiling root-test (3 scala sources)
2024.04.26 01:41:31 INFO  time: compiled root-test in 0.27s
2024.04.26 01:41:31 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:41:31 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:41:31 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:41:31 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 01:41:31 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:41:32 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:41:32 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64254 .
2024.04.26 01:41:32 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:41:32 INFO  Closing debug server tcp://0.0.0.0:64252
2024.04.26 01:41:33 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:41:58 INFO  compiling root (1 scala source)
2024.04.26 01:41:58 INFO  time: compiled root in 0.23s
2024.04.26 01:42:01 INFO  compiling root-test (3 scala sources)
2024.04.26 01:42:01 INFO  time: compiled root-test in 0.29s
2024.04.26 01:42:01 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:42:01 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:42:01 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:42:01 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 01:42:01 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:42:03 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:42:03 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64274 .
2024.04.26 01:42:03 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:42:04 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:42:04 INFO  Closing debug server tcp://0.0.0.0:64271
2024.04.26 01:42:49 INFO  compiling root-test (3 scala sources)
2024.04.26 01:42:49 INFO  time: compiled root-test in 0.18s
2024.04.26 01:42:49 INFO  compiling root (1 scala source)
2024.04.26 01:42:49 INFO  Deduplicating compilation of root from bsp client 'Metals 1.3.0' (since 2h 36m 21.918s)
2024.04.26 01:42:49 INFO  compiling root (1 scala source)
2024.04.26 01:42:49 INFO  compiling root-test (3 scala sources)
2024.04.26 01:42:49 INFO  time: compiled root in 0.17s
2024.04.26 01:42:49 INFO  time: compiled root-test in 0.28s
2024.04.26 01:42:51 INFO  compiling root-test (3 scala sources)
2024.04.26 01:42:51 INFO  time: compiled root-test in 0.21s
2024.04.26 01:42:51 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:42:51 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:42:51 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:42:51 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 01:42:51 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:42:52 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:42:52 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64300 .
2024.04.26 01:42:52 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:42:53 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:42:52 INFO  Closing debug server tcp://0.0.0.0:64297
Apr. 26, 2024 1:45:42 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 14982
2024.04.26 01:48:39 INFO  compiling root (1 scala source)
2024.04.26 01:48:39 INFO  time: compiled root in 0.13s
2024.04.26 01:48:40 WARN  Could not load snapshot text for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
2024.04.26 01:48:45 WARN  Could not load snapshot text for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
2024.04.26 01:48:46 WARN  Could not load snapshot text for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
2024.04.26 01:48:47 INFO  compiling root (1 scala source)
2024.04.26 01:48:47 INFO  time: compiled root in 0.24s
2024.04.26 01:48:50 INFO  compiling root-test (3 scala sources)
2024.04.26 01:48:50 INFO  time: compiled root-test in 0.35s
2024.04.26 01:48:50 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:48:50 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:48:50 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:48:50 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 01:48:50 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:48:51 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:48:51 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64492 .
2024.04.26 01:48:51 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:48:52 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:48:51 INFO  Closing debug server tcp://0.0.0.0:64489
2024.04.26 01:49:17 INFO  compiling root (1 scala source)
2024.04.26 01:49:17 INFO  time: compiled root in 0.25s
2024.04.26 01:49:17 INFO  compiling root (1 scala source)
2024.04.26 01:49:17 INFO  time: compiled root in 0.13s
2024.04.26 01:49:17 INFO  compiling root (1 scala source)
2024.04.26 01:49:17 INFO  time: compiled root in 0.13s
2024.04.26 01:49:17 INFO  compiling root (1 scala source)
2024.04.26 01:49:18 INFO  time: compiled root in 0.42s
2024.04.26 01:49:18 INFO  {
  "jsonrpc": "2.0",
  "id": "807",
  "error": {
    "code": -32603,
    "message": "Compilation not successful"
  }
}
2024.04.26 01:49:18 ERROR failed: Starting debug server
scala.meta.internal.metals.MetalsBspException: BSP connection failed in the attempt to get: DebugSessionAddress
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.$anonfun$applyOrElse$9(BuildServerConnection.scala:509)
	at scala.Option.getOrElse(Option.scala:201)
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.applyOrElse(BuildServerConnection.scala:509)
	at scala.meta.internal.metals.BuildServerConnection$$anonfun$1.applyOrElse(BuildServerConnection.scala:484)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:490)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)
Caused by: org.eclipse.lsp4j.jsonrpc.MessageIssueException: Message could not be parsed.
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleResponseIssues(RemoteEndpoint.java:358)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handle(RemoteEndpoint.java:317)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 01:49:28 INFO  compiling root (1 scala source)
2024.04.26 01:49:28 INFO  time: compiled root in 0.19s
2024.04.26 01:49:30 INFO  compiling root-test (3 scala sources)
2024.04.26 01:49:30 INFO  time: compiled root-test in 0.42s
2024.04.26 01:49:31 INFO  tracing is disabled for protocol dap-server, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-server.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-server.trace.json
2024.04.26 01:49:31 INFO  tracing is disabled for protocol dap-client, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\dap-client.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\dap-client.trace.json
2024.04.26 01:49:31 INFO  Starting debug proxy for [Chess.ChessGame]
2024.04.26 01:49:30 INFO  Loaded expression compiler in 0 milliseconds
2024.04.26 01:49:30 INFO  Loaded step filter in 0 milliseconds
2024.04.26 01:49:32 INFO  Loaded all sources and classes in 1 second
2024.04.26 01:49:33 INFO  Trying to attach to remote debuggee VM kubernetes.docker.internal:64521 .
2024.04.26 01:49:33 INFO  Attaching to debuggee VM succeeded.
2024.04.26 01:49:34 INFO  Canceling debug proxy for [Chess.ChessGame]
2024.04.26 01:49:33 INFO  Closing debug server tcp://0.0.0.0:64518
2024.04.26 01:57:49 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:36: error: unclosed comment
    /*sr.append(space*2 + "A" + space * 2 +
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:55)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:74)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:316)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 01:57:52 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:36: error: unclosed comment
    /*sr.append(space*2 + "A" + space * 2 +
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:55)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:74)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:316)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 01:57:55 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:36: error: unclosed comment
    /*sr.append(space*2 + "A" + space * 2 +
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:55)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:74)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:316)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 01:57:56 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:36: error: unclosed comment
    /*sr.append(space*2 + "A" + space * 2 +
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:55)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:74)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:316)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 01:57:56 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:36: error: unclosed comment
    /*sr.append(space*2 + "A" + space * 2 +
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:55)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:74)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:316)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 01:57:56 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:36: error: unclosed comment
    /*sr.append(space*2 + "A" + space * 2 +
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:55)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:74)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:316)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 01:57:58 ERROR Failed to tokenize input for semantic tokens for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\Board.scala
scala.meta.tokenizers.TokenizeException: <input>:36: error: unclosed comment
    /*sr.append(space*2 + "A" + space * 2 +
    ^
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:27)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:26)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter.incompleteInputError$(Reporter.scala:29)
	at scala.meta.internal.tokenizers.Reporter$$anon$1.incompleteInputError(Reporter.scala:33)
	at scala.meta.internal.tokenizers.LegacyScanner.skipNestedComments(LegacyScanner.scala:55)
	at scala.meta.internal.tokenizers.LegacyScanner.skipToCommentEnd(LegacyScanner.scala:74)
	at scala.meta.internal.tokenizers.LegacyScanner.fetchToken(LegacyScanner.scala:316)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:214)
	at scala.meta.internal.tokenizers.LegacyScanner.foreach(LegacyScanner.scala:982)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.uncachedTokenize(ScalametaTokenizer.scala:23)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.$anonfun$tokenize$1(ScalametaTokenizer.scala:16)
	at scala.collection.concurrent.TrieMap.getOrElseUpdate(TrieMap.scala:960)
	at scala.meta.internal.tokenizers.ScalametaTokenizer.tokenize(ScalametaTokenizer.scala:16)
	at scala.meta.internal.tokenizers.ScalametaTokenizer$$anon$2.apply(ScalametaTokenizer.scala:331)
	at scala.meta.tokenizers.Api$XtensionTokenizeDialectInput.tokenize(Api.scala:25)
	at scala.meta.tokenizers.Api$XtensionTokenizeInputLike.tokenize(Api.scala:14)
	at scala.meta.internal.metals.SemanticTokensProvider$.getTokens(SemanticTokensProvider.scala:28)
	at scala.meta.internal.metals.SemanticTokensProvider$.provide(SemanticTokensProvider.scala:89)
	at scala.meta.internal.metals.Compilers.$anonfun$semanticTokens$3(Compilers.scala:597)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

Apr. 26, 2024 2:04:04 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 15820
Apr. 26, 2024 2:05:19 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 15866
2024.04.26 02:05:20 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 2:05:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n/** `Int`, a 32-bit signed integer (equivalent to Java\u0027s `int` primitive type) is a\n *  subtype of [[scala.AnyVal]]. Instances of `Int` are not\n *  represented by an object in the underlying runtime system.\n *\n *  There is an implicit conversion from [[scala.Int]] \u003d\u003e [[scala.runtime.RichInt]]\n *  which provides useful non-primitive operations.\n */\nfinal abstract class Int private extends AnyVal {\n  def toByte: Byte\n  def toShort: Short\n  def toChar: Char\n  def toInt: Int\n  def toLong: Long\n  def toFloat: Float\n  def toDouble: Double\n\n  /**\n * Returns the bitwise negation of this value.\n * @example {{{\n * ~5 \u003d\u003d -6\n * // in binary: ~00000101 \u003d\u003d\n * //             11111010\n * }}}\n */\n  def unary_~ : Int\n  /** Returns this value, unmodified. */\n  def unary_+ : Int\n  /** Returns the negation of this value. */\n  def unary_- : Int\n\n  @deprecated(\"Adding a number and a String is deprecated. Use the string interpolation `s\\\"$num$str\\\"`\", \"2.13.0\")\n  def +(x: String): String\n\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  def \u003c\u003c(x: Int): Int\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003c\u003c(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e\u003e(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e(x: Long): Int\n\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Short): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Char): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Int): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Long): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Float): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Short): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Char): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Int): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Long): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Float): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Byte): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Short): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Char): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Int): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Long): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Float): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Double): Boolean\n\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Short): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Char): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Int): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Long): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Float): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Byte): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Short): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Char): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Int): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Long): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Float): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Short): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Char): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Int): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Long): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Float): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Double): Boolean\n\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Byte): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Short): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Char): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Int): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Long): Long\n\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Byte): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Short): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Char): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Int): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Long): Long\n\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Byte): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Short): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Char): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Int): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Long): Long\n\n  /** Returns the sum of this value and `x`. */\n  def +(x: Byte): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Short): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Char): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Int): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Long): Long\n  /** Returns the sum of this value and `x`. */\n  def +(x: Float): Float\n  /** Returns the sum of this value and `x`. */\n  def +(x: Double): Double\n\n  /** Returns the difference of this value and `x`. */\n  def -(x: Byte): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Short): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Char): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Int): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Long): Long\n  /** Returns the difference of this value and `x`. */\n  def -(x: Float): Float\n  /** Returns the difference of this value and `x`. */\n  def -(x: Double): Double\n\n  /** Returns the product of this value and `x`. */\n  def *(x: Byte): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Short): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Char): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Int): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Long): Long\n  /** Returns the product of this value and `x`. */\n  def *(x: Float): Float\n  /** Returns the product of this value and `x`. */\n  def *(x: Double): Double\n\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Byte): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Short): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Char): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Int): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Long): Long\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Float): Float\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Double): Double\n\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Byte): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Short): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Char): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Int): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Long): Long\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Float): Float\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Double): Double\n\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Int] \u003d ???\n}\n\nobject Int extends AnyValCompanion {\n  /** The smallest value representable as an Int. */\n  final val MinValue \u003d java.lang.Integer.MIN_VALUE\n\n  /** The largest value representable as an Int. */\n  final val MaxValue \u003d java.lang.Integer.MAX_VALUE\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.boxToInteger`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the Int to be boxed\n   *  @return     a java.lang.Integer offering `x` as its underlying value.\n   */\n  def box(x: Int): java.lang.Integer \u003d ???\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a java.lang.Integer.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.unboxToInt`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the java.lang.Integer to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a java.lang.Integer\n   *  @return     the Int resulting from calling intValue() on `x`\n   */\n  def unbox(x: java.lang.Object): Int \u003d ???\n\n  /** The String representation of the scala.Int companion object. */\n  override def toString \u003d \"object scala.Int\"\n  /** Language mandated coercions from Int to \"wider\" types. */\n  import scala.language.implicitConversions\n  @deprecated(\"Implicit conversion from Int to Float is dangerous because it loses precision. Write `.toFloat` instead.\", \"2.13.1\")\n  implicit def int2float(x: Int): Float \u003d x.toFloat\n  implicit def int2long(x: Int): Long \u003d x.toLong\n  implicit def int2double(x: Int): Double \u003d x.toDouble\n}\n\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

Apr. 26, 2024 2:05:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:358)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 02:05:20 INFO  Report absolute-path: ### java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala

Uri: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala


#### Error stacktrace:

```
java.base/java.net.URI.create(URI.java:903)
	scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePathSafe(MetalsEnrichments.scala:715)
	scala.meta.internal.metals.WorkspaceLspService.getServiceFor(WorkspaceLspService.scala:262)
	scala.meta.internal.metals.WorkspaceLspService.executeCommand(WorkspaceLspService.scala:715)
	scala.meta.metals.lsp.DelegatingScalaService.executeCommand(DelegatingScalaService.scala:169)
	java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	java.base/java.lang.reflect.Method.invoke(Method.java:578)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	java.base/java.lang.Thread.run(Thread.java:1589)
```

Apr. 26, 2024 2:05:20 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNUNG: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/Gewin%20Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar%21/scala/Int.scala",
      "languageId": "scala",
      "version": 1,
      "text": "/*\n * Scala (https://www.scala-lang.org)\n *\n * Copyright EPFL and Lightbend, Inc.\n *\n * Licensed under Apache License 2.0\n * (http://www.apache.org/licenses/LICENSE-2.0).\n *\n * See the NOTICE file distributed with this work for\n * additional information regarding copyright ownership.\n */\n\n// DO NOT EDIT, CHANGES WILL BE LOST\n// This auto-generated code can be modified in \"project/GenerateAnyVals.scala\".\n// Afterwards, running \"sbt generateSources\" regenerates this source file.\n\npackage scala\n\n/** `Int`, a 32-bit signed integer (equivalent to Java\u0027s `int` primitive type) is a\n *  subtype of [[scala.AnyVal]]. Instances of `Int` are not\n *  represented by an object in the underlying runtime system.\n *\n *  There is an implicit conversion from [[scala.Int]] \u003d\u003e [[scala.runtime.RichInt]]\n *  which provides useful non-primitive operations.\n */\nfinal abstract class Int private extends AnyVal {\n  def toByte: Byte\n  def toShort: Short\n  def toChar: Char\n  def toInt: Int\n  def toLong: Long\n  def toFloat: Float\n  def toDouble: Double\n\n  /**\n * Returns the bitwise negation of this value.\n * @example {{{\n * ~5 \u003d\u003d -6\n * // in binary: ~00000101 \u003d\u003d\n * //             11111010\n * }}}\n */\n  def unary_~ : Int\n  /** Returns this value, unmodified. */\n  def unary_+ : Int\n  /** Returns the negation of this value. */\n  def unary_- : Int\n\n  @deprecated(\"Adding a number and a String is deprecated. Use the string interpolation `s\\\"$num$str\\\"`\", \"2.13.0\")\n  def +(x: String): String\n\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  def \u003c\u003c(x: Int): Int\n  /**\n  * Returns this value bit-shifted left by the specified number of bits,\n  *         filling in the new right bits with zeroes.\n  * @example {{{ 6 \u003c\u003c 3 \u003d\u003d 48 // in binary: 0110 \u003c\u003c 3 \u003d\u003d 0110000 }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003c\u003c(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling the new left bits with zeroes.\n  * @example {{{ 21 \u003e\u003e\u003e 3 \u003d\u003d 2 // in binary: 010101 \u003e\u003e\u003e 3 \u003d\u003d 010 }}}\n  * @example {{{\n  * -21 \u003e\u003e\u003e 3 \u003d\u003d 536870909\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e\u003e 3 \u003d\u003d\n  * //            00011111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e\u003e(x: Long): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  def \u003e\u003e(x: Int): Int\n  /**\n  * Returns this value bit-shifted right by the specified number of bits,\n  *         filling in the left bits with the same value as the left-most bit of this.\n  *         The effect of this is to retain the sign of the value.\n  * @example {{{\n  * -21 \u003e\u003e 3 \u003d\u003d -3\n  * // in binary: 11111111 11111111 11111111 11101011 \u003e\u003e 3 \u003d\u003d\n  * //            11111111 11111111 11111111 11111101\n  * }}}\n  */\n  @deprecated(\"shifting a value by a `Long` argument is deprecated (except when the value is a `Long`).\\nCall `toInt` on the argument to maintain the current behavior and avoid the deprecation warning.\", \"2.12.7\")\n  def \u003e\u003e(x: Long): Int\n\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Short): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Char): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Int): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Long): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Float): Boolean\n  /** Returns `true` if this value is equal to x, `false` otherwise. */\n  def \u003d\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Short): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Char): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Int): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Long): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Float): Boolean\n  /** Returns `true` if this value is not equal to x, `false` otherwise. */\n  def !\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Byte): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Short): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Char): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Int): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Long): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Float): Boolean\n  /** Returns `true` if this value is less than x, `false` otherwise. */\n  def \u003c(x: Double): Boolean\n\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Short): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Char): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Int): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Long): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Float): Boolean\n  /** Returns `true` if this value is less than or equal to x, `false` otherwise. */\n  def \u003c\u003d(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Byte): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Short): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Char): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Int): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Long): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Float): Boolean\n  /** Returns `true` if this value is greater than x, `false` otherwise. */\n  def \u003e(x: Double): Boolean\n\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Byte): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Short): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Char): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Int): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Long): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Float): Boolean\n  /** Returns `true` if this value is greater than or equal to x, `false` otherwise. */\n  def \u003e\u003d(x: Double): Boolean\n\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Byte): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Short): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Char): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Int): Int\n  /**\n  * Returns the bitwise OR of this value and `x`.\n  * @example {{{\n  * (0xf0 | 0xaa) \u003d\u003d 0xfa\n  * // in binary:   11110000\n  * //            | 10101010\n  * //              --------\n  * //              11111010\n  * }}}\n  */\n  def |(x: Long): Long\n\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Byte): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Short): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Char): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Int): Int\n  /**\n  * Returns the bitwise AND of this value and `x`.\n  * @example {{{\n  * (0xf0 \u0026 0xaa) \u003d\u003d 0xa0\n  * // in binary:   11110000\n  * //            \u0026 10101010\n  * //              --------\n  * //              10100000\n  * }}}\n  */\n  def \u0026(x: Long): Long\n\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Byte): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Short): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Char): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Int): Int\n  /**\n  * Returns the bitwise XOR of this value and `x`.\n  * @example {{{\n  * (0xf0 ^ 0xaa) \u003d\u003d 0x5a\n  * // in binary:   11110000\n  * //            ^ 10101010\n  * //              --------\n  * //              01011010\n  * }}}\n  */\n  def ^(x: Long): Long\n\n  /** Returns the sum of this value and `x`. */\n  def +(x: Byte): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Short): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Char): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Int): Int\n  /** Returns the sum of this value and `x`. */\n  def +(x: Long): Long\n  /** Returns the sum of this value and `x`. */\n  def +(x: Float): Float\n  /** Returns the sum of this value and `x`. */\n  def +(x: Double): Double\n\n  /** Returns the difference of this value and `x`. */\n  def -(x: Byte): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Short): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Char): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Int): Int\n  /** Returns the difference of this value and `x`. */\n  def -(x: Long): Long\n  /** Returns the difference of this value and `x`. */\n  def -(x: Float): Float\n  /** Returns the difference of this value and `x`. */\n  def -(x: Double): Double\n\n  /** Returns the product of this value and `x`. */\n  def *(x: Byte): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Short): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Char): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Int): Int\n  /** Returns the product of this value and `x`. */\n  def *(x: Long): Long\n  /** Returns the product of this value and `x`. */\n  def *(x: Float): Float\n  /** Returns the product of this value and `x`. */\n  def *(x: Double): Double\n\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Byte): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Short): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Char): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Int): Int\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Long): Long\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Float): Float\n  /** Returns the quotient of this value and `x`. */\n  def /(x: Double): Double\n\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Byte): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Short): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Char): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Int): Int\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Long): Long\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Float): Float\n  /** Returns the remainder of the division of this value by `x`. */\n  def %(x: Double): Double\n\n  // Provide a more specific return type for Scaladoc\n  override def getClass(): Class[Int] \u003d ???\n}\n\nobject Int extends AnyValCompanion {\n  /** The smallest value representable as an Int. */\n  final val MinValue \u003d java.lang.Integer.MIN_VALUE\n\n  /** The largest value representable as an Int. */\n  final val MaxValue \u003d java.lang.Integer.MAX_VALUE\n\n  /** Transform a value type into a boxed reference type.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.boxToInteger`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the Int to be boxed\n   *  @return     a java.lang.Integer offering `x` as its underlying value.\n   */\n  def box(x: Int): java.lang.Integer \u003d ???\n\n  /** Transform a boxed type into a value type.  Note that this\n   *  method is not typesafe: it accepts any Object, but will throw\n   *  an exception if the argument is not a java.lang.Integer.\n   *\n   *  Runtime implementation determined by `scala.runtime.BoxesRunTime.unboxToInt`. See [[https://github.com/scala/scala src/library/scala/runtime/BoxesRunTime.java]].\n   *\n   *  @param  x   the java.lang.Integer to be unboxed.\n   *  @throws     ClassCastException  if the argument is not a java.lang.Integer\n   *  @return     the Int resulting from calling intValue() on `x`\n   */\n  def unbox(x: java.lang.Object): Int \u003d ???\n\n  /** The String representation of the scala.Int companion object. */\n  override def toString \u003d \"object scala.Int\"\n  /** Language mandated coercions from Int to \"wider\" types. */\n  import scala.language.implicitConversions\n  @deprecated(\"Implicit conversion from Int to Float is dangerous because it loses precision. Write `.toFloat` instead.\", \"2.13.1\")\n  implicit def int2float(x: Int): Float \u003d x.toFloat\n  implicit def int2long(x: Int): Long \u003d x.toLong\n  implicit def int2double(x: Int): Double \u003d x.toDouble\n}\n\n"
    }
  }
}
java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:67)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:119)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	... 11 more
Caused by: java.lang.IllegalArgumentException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI.create(URI.java:903)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:153)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:732)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:729)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:339)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	... 13 more
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 26: jar:file:///C:/Users/Gewin Singh/AppData/Local/Coursier/cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.12/scala-library-2.13.12-sources.jar!/scala/Int.scala
	at java.base/java.net.URI$Parser.fail(URI.java:2970)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3141)
	at java.base/java.net.URI$Parser.parse(URI.java:3177)
	at java.base/java.net.URI.<init>(URI.java:620)
	at java.base/java.net.URI.create(URI.java:901)
	... 22 more

2024.04.26 02:05:30 INFO  Shutting down server
2024.04.26 02:05:30 INFO  shutting down Metals
2024.04.26 02:05:30 INFO  Shut down connection with build server.
2024.04.26 02:05:30 INFO  Shut down connection with build server.
Apr. 26, 2024 2:05:30 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint notify
INFORMATION: Failed to send notification message.
org.eclipse.lsp4j.jsonrpc.JsonRpcException: java.nio.channels.ClosedChannelException
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:72)
	at scala.meta.internal.metals.RequestMonitorImpl$$anon$1.consume(ServerLivenessMonitor.scala:41)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.notify(RemoteEndpoint.java:126)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.sendCancelNotification(RemoteEndpoint.java:180)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint$1.cancel(RemoteEndpoint.java:150)
	at scala.meta.internal.metals.utils.FutureWithTimeout$$anon$1.$anonfun$cancel$1(FutureWithTimeout.scala:37)
	at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.scala:17)
	at scala.util.Try$.apply(Try.scala:217)
	at scala.meta.internal.metals.utils.FutureWithTimeout$$anon$1.cancel(FutureWithTimeout.scala:37)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:334)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.utils.RequestRegistry.cancel(RequestRegistry.scala:94)
	at scala.meta.internal.metals.BuildServerConnection.cancel(BuildServerConnection.scala:411)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1(BspSession.scala:34)
	at scala.meta.internal.bsp.BspSession.$anonfun$cancel$1$adapted(BspSession.scala:34)
	at scala.collection.immutable.List.foreach(List.scala:334)
	at scala.meta.internal.bsp.BspSession.cancel(BspSession.scala:34)
	at scala.meta.internal.metals.Cancelable$.$anonfun$cancelAll$1(Cancelable.scala:29)
	at scala.collection.immutable.List.foreach(List.scala:334)
	at scala.meta.internal.metals.Cancelable$.cancelAll(Cancelable.scala:28)
	at scala.meta.internal.metals.MutableCancelable.cancel(MutableCancelable.scala:25)
	at scala.meta.internal.metals.MetalsLspService.cancel(MetalsLspService.scala:161)
	at scala.meta.internal.metals.MetalsLspService.onShutdown(MetalsLspService.scala:953)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2(WorkspaceLspService.scala:1214)
	at scala.meta.internal.metals.WorkspaceLspService.$anonfun$shutdown$2$adapted(WorkspaceLspService.scala:1214)
	at scala.collection.immutable.List.foreach(List.scala:334)
	at scala.meta.internal.metals.WorkspaceLspService.shutdown(WorkspaceLspService.scala:1214)
	at scala.meta.metals.MetalsLanguageServer.shutdown(MetalsLanguageServer.scala:260)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:261)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:190)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:577)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:222)
	at java.base/sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:536)
	at java.base/sun.nio.ch.SinkChannelImpl.write(SinkChannelImpl.java:124)
	at java.base/sun.nio.ch.ChannelOutputStream.writeFully(ChannelOutputStream.java:68)
	at java.base/sun.nio.ch.ChannelOutputStream.write(ChannelOutputStream.java:102)
	at java.base/java.io.OutputStream.write(OutputStream.java:124)
	at java.base/sun.nio.ch.ChannelOutputStream.write(ChannelOutputStream.java:79)
	at scala.meta.internal.metals.ClosableOutputStream.write(ClosableOutputStream.scala:26)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:137)
	at java.base/java.io.FilterOutputStream.write(FilterOutputStream.java:108)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageConsumer.consume(StreamMessageConsumer.java:67)
	... 43 more

2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Cancelling compilation on Bloop server
2024.04.26 02:05:30 INFO  Failed to run request with params DebugSessionAddress
2024.04.26 02:05:30 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2510)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:266)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:266)
	at scala.util.Success.foreach(Try.scala:268)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 02:05:30 INFO  Failed to run request with params DebugSessionAddress
2024.04.26 02:05:30 INFO  Failed to run request with params DebugSessionAddress
2024.04.26 02:05:30 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2510)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:266)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:266)
	at scala.util.Success.foreach(Try.scala:268)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 02:05:30 INFO  Failed to run request with params DebugSessionAddress
2024.04.26 02:05:30 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2510)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:266)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:266)
	at scala.util.Success.foreach(Try.scala:268)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 02:05:30 INFO  Failed to run request with params DebugSessionAddress
2024.04.26 02:05:30 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2510)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:266)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:266)
	at scala.util.Success.foreach(Try.scala:268)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 02:05:30 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2510)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:266)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:266)
	at scala.util.Success.foreach(Try.scala:268)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 02:05:30 INFO  Failed to run request with params DebugSessionAddress
2024.04.26 02:05:30 ERROR failed: Starting debug server
java.util.concurrent.CancellationException
	at java.util.concurrent.CompletableFuture.cancel(CompletableFuture.java:2510)
	at scala.meta.internal.metals.CancelTokens$$anon$1.cancel(CancelTokens.scala:35)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3(BuildServerConnection.scala:266)
	at scala.meta.internal.metals.BuildServerConnection.$anonfun$startDebugSession$3$adapted(BuildServerConnection.scala:266)
	at scala.util.Success.foreach(Try.scala:268)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:481)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 02:05:30 INFO  Exiting server
2024.04.26 02:05:46 INFO  Started: Metals version 1.3.0 in folders 'C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG' for client Visual Studio Code 1.88.1.
SLF4J: Class path contains multiple SLF4J providers.
SLF4J: Found provider [scribe.slf4j.ScribeServiceProvider@5845859d]
SLF4J: Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@23aef418]
SLF4J: See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual provider is of type [scribe.slf4j.ScribeServiceProvider@5845859d]
2024.04.26 02:05:48 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.04.26 02:05:49 INFO  Attempting to connect to the build server...
2024.04.26 02:05:49 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.26 02:05:49 INFO  Attempting to connect to the build server...
2024.04.26 02:05:49 INFO  Attempting to connect to the build server...
2024.04.26 02:05:49 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\project\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.26 02:05:49 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.26 02:05:49 INFO  time: Connected to build server in 0.78s
2024.04.26 02:05:49 INFO  Connected to Build server: Bloop v1.5.17
Apr. 26, 2024 2:05:50 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 3
Apr. 26, 2024 2:05:50 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 4
Apr. 26, 2024 2:05:50 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNUNG: Unmatched cancel notification for request id 1
2024.04.26 02:05:50 INFO  time: Imported build in 0.46s
2024.04.26 02:06:01 INFO  no build target found for C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\src\main\scala\Chess\TUI.scala. Using presentation compiler with project's scala-library version: 3.3.3
2024.04.26 02:06:12 INFO  Shutting down server
2024.04.26 02:06:12 INFO  shutting down Metals
2024.04.26 02:06:12 INFO  Shut down connection with build server.
2024.04.26 02:06:12 INFO  Shut down connection with build server.
2024.04.26 02:06:12 INFO  Shut down connection with build server.
2024.04.26 02:06:12 ERROR error processing file:///C:/Users/Gewin%20Singh/AppData/Local/Coursier/Cache/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.18/scala-library-2.12.18-sources.jar
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Die Datenbank wurde bereits geschlossen (um das automatische Schliessen beim Stopp der VM zu deaktivieren, die Datenbank URL mit ";DB_CLOSE_ON_EXIT=FALSE" ergänzen)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:690)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1425)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1289)
	at org.h2.jdbc.JdbcResultSet.checkClosed(JdbcResultSet.java:3539)
	at org.h2.jdbc.JdbcResultSet.checkColumnIndex(JdbcResultSet.java:3522)
	at org.h2.jdbc.JdbcResultSet.getBoolean(JdbcResultSet.java:580)
	at scala.meta.internal.metals.JarTopLevels.$anonfun$getTypeHierarchy$2(JarTopLevels.scala:79)
	at scala.meta.internal.metals.JdbcEnrichments$XtensionConnection.query(JdbcEnrichments.scala:40)
	at scala.meta.internal.metals.JarTopLevels.getTypeHierarchy(JarTopLevels.scala:71)
	at scala.meta.internal.metals.Indexer.addSourceJarSymbols(Indexer.scala:647)
	at scala.meta.internal.metals.Indexer.$anonfun$indexDependencySources$5(Indexer.scala:487)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:905)
	at scala.meta.internal.metals.Indexer.$anonfun$indexDependencySources$1(Indexer.scala:478)
	at scala.meta.internal.metals.Indexer.$anonfun$indexDependencySources$1$adapted(Indexer.scala:477)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Indexer.indexDependencySources(Indexer.scala:477)
	at scala.meta.internal.metals.Indexer.$anonfun$indexWorkspace$24(Indexer.scala:396)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.Indexer.$anonfun$indexWorkspace$23(Indexer.scala:389)
	at scala.meta.internal.metals.Indexer.$anonfun$indexWorkspace$23$adapted(Indexer.scala:385)
	at scala.collection.immutable.List.foreach(List.scala:334)
	at scala.meta.internal.metals.Indexer.indexWorkspace(Indexer.scala:385)
	at scala.meta.internal.metals.Indexer.$anonfun$profiledIndexWorkspace$2(Indexer.scala:172)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.Indexer.$anonfun$profiledIndexWorkspace$1(Indexer.scala:172)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.lang.Thread.run(Thread.java:1589)

2024.04.26 02:06:12 INFO  Exiting server
2024.04.26 02:06:22 INFO  Started: Metals version 1.3.0 in folders 'C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG' for client Visual Studio Code 1.88.1.
2024.04.26 02:06:23 INFO  Shutting down server
2024.04.26 02:06:23 INFO  shutting down Metals
SLF4J: Class path contains multiple SLF4J providers.
SLF4J: Found provider [scribe.slf4j.ScribeServiceProvider@4a9bfaed]
SLF4J: Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@46a95a93]
SLF4J: See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual provider is of type [scribe.slf4j.ScribeServiceProvider@4a9bfaed]
2024.04.26 02:06:25 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.04.26 02:06:25 INFO  Exiting server
2024.04.26 02:06:34 INFO  Started: Metals version 1.3.0 in folders 'C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG' for client Visual Studio Code 1.88.1.
SLF4J: Class path contains multiple SLF4J providers.
SLF4J: Found provider [scribe.slf4j.ScribeServiceProvider@71b05b57]
SLF4J: Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@7112ccd4]
SLF4J: See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual provider is of type [scribe.slf4j.ScribeServiceProvider@71b05b57]
2024.04.26 02:06:35 WARN  Flyway upgrade recommended: H2 2.2.224 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.220.
2024.04.26 02:06:35 INFO  Attempting to connect to the build server...
2024.04.26 02:06:35 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.26 02:06:35 INFO  Attempting to connect to the build server...
2024.04.26 02:06:35 INFO  Attempting to connect to the build server...
2024.04.26 02:06:35 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\project\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.26 02:06:35 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\Gewin Singh\Desktop\S\AIN3\SE\CHESS-SE-HTWG\project\.metals\bsp.trace.json or C:\Users\Gewin Singh\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.04.26 02:06:35 INFO  time: Connected to build server in 0.67s
2024.04.26 02:06:35 INFO  Connected to Build server: Bloop v1.5.17
2024.04.26 02:06:36 INFO  time: Imported build in 0.36s
Apr. 26, 2024 2:06:38 AM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFORMATION: Unsupported notification method: $/setTrace
2024.04.26 02:07:07 INFO  time: indexed workspace in 30s
2024.04.26 02:07:45 INFO  Shutting down server
2024.04.26 02:07:45 INFO  shutting down Metals
2024.04.26 02:07:45 INFO  Shut down connection with build server.
2024.04.26 02:07:45 INFO  Shut down connection with build server.
2024.04.26 02:07:45 INFO  Shut down connection with build server.
2024.04.26 02:07:45 INFO  Exiting server
